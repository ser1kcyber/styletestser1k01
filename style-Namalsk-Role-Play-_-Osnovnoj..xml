<?xml version="1.0" encoding="utf-8"?>
<style title="Namalsk Role Play | Основной." description="UpDate." user_selectable="" base_version_id="2010470" export_version="2">
  <templates>
    <template title="PAGE_CONTAINER" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[<!DOCTYPE html>
<html id="XF" lang="{$xf.language.language_code}" dir="{$xf.language.text_direction}"
	data-app="public"
	data-template="{$template}"
	data-container-key="{$containerKey}"
	data-content-key="{$contentKey}"
	data-logged-in="{{ $xf.visitor.user_id ? 'true' : 'false' }}"
	data-cookie-prefix="{$xf.cookie.prefix}"
	data-csrf="{{ csrf_token()|escape('js') }}"
	class="has-no-js {{ $template ? 'template-' . $template : '' }}"
	{{ $xf.runJobs ? ' data-run-jobs=""' : '' }}>
<head>
	<meta charset="utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=Edge" />
	<meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover">

	<xf:set var="$siteName" value="{$xf.options.boardTitle}" />
	<xf:set var="$h1"><xf:h1 fallback="{$siteName}" /></xf:set>
	<xf:set var="$description"><xf:description /></xf:set>

	<title><xf:title formatter="%s | %s" fallback="{$xf.options.boardTitle}" page="{$pageNumber}" /></title>

	<xf:foreach loop="$head" value="$headTag">
		{$headTag}
	</xf:foreach>

	<xf:if is="!$head.meta_site_name && $siteName is not empty">
		<xf:macro template="metadata_macros" name="site_name" arg-siteName="{$siteName}" arg-output="{{ true }}" />
	</xf:if>
	<xf:if is="!$head.meta_type">
		<xf:macro template="metadata_macros" name="type" arg-type="website" arg-output="{{ true }}" />
	</xf:if>
	<xf:if is="!$head.meta_title">
		<xf:macro template="metadata_macros" name="title" arg-title="{{ page_title() ?: $siteName }}" arg-output="{{ true }}" />
	</xf:if>
	<xf:if is="!$head.meta_description && $description is not empty && $pageDescriptionMeta">
		<xf:macro template="metadata_macros" name="description" arg-description="{$description}" arg-output="{{ true }}" />
	</xf:if>
	<xf:if is="!$head.meta_share_url">
		<xf:macro template="metadata_macros" name="share_url" arg-shareUrl="{$xf.fullUri}" arg-output="{{ true }}" />
	</xf:if>
	<xf:if is="!$head.meta_image_url && property('publicMetadataLogoUrl')">
		<xf:macro template="metadata_macros" name="image_url"
			arg-imageUrl="{{ base_url(property('publicMetadataLogoUrl'), true) }}"
			arg-output="{{ true }}" />
	</xf:if>

	<xf:if is="property('metaThemeColor')">
		<meta name="theme-color" content="{{ parse_less_color(property('metaThemeColor')) }}" />
	</xf:if>
	<xf:macro template="helper_js_global" name="head" arg-app="public" />

	<xf:if is="property('publicFaviconUrl')">
		<link rel="icon" type="image/png" href="{{ base_url(property('publicFaviconUrl'), true) }}" sizes="32x32" />
	</xf:if>
	<xf:if is="property('publicMetadataLogoUrl')">
		<link rel="apple-touch-icon" href="{{ base_url(property('publicMetadataLogoUrl'), true) }}" />
	</xf:if>
	<xf:include template="google_analytics" />
</head>
<body data-template="{$template}">

<div class="p-pageWrapper" id="top">


<div class="p-staffBar">
	<div class="p-staffBar-inner">
		<xf:if contentcheck="true">
		<div class="hScroller" data-xf-init="h-scroller">
			<div class="hScroller-scroll">
			<xf:contentcheck>
				<xf:if is="$xf.visitor.is_moderator && $xf.session.unapprovedCounts.total">
					<a href="{{ link('approval-queue') }}" class="p-staffBar-link badgeContainer badgeContainer--highlighted" data-badge="{$xf.session.unapprovedCounts.total|number}">
						{{ phrase('approval_queue') }}
					</a>
				</xf:if>

				<xf:if is="$xf.visitor.is_moderator && !$xf.options.reportIntoForumId && $xf.session.reportCounts.total">
					<a href="{{ link('reports') }}"
						class="p-staffBar-link badgeContainer badgeContainer--visible {{ ($xf.session.reportCounts.total && ($xf.session.reportCounts.lastBuilt > $xf.session.reportLastRead) OR $xf.session.reportCounts.assigned) ? ' badgeContainer--highlighted' : '' }}"
						data-badge="{{ $xf.session.reportCounts.assigned ? $xf.session.reportCounts.assigned|number . ' / ' . $xf.session.reportCounts.total|number : $xf.session.reportCounts.total|number }}"
						title="{{ $xf.session.reportCounts.lastBuilt ? phrase('last_report_update:')|for_attr . ' ' . date_time($xf.session.reportCounts.lastBuilt) : '' }}">
						{{ phrase('reports') }}
					</a>
				</xf:if>

				<xf:if contentcheck="true">
					<a class="p-staffBar-link menuTrigger" data-xf-click="menu" data-xf-key="alt+m" role="button" tabindex="0" aria-expanded="false" aria-haspopup="true">{{ phrase('moderator') }}</a>
					<div class="menu" data-menu="menu" aria-hidden="true">
						<div class="menu-content">
							<h4 class="menu-header">{{ phrase('moderator_tools') }}</h4>
							<xf:contentcheck>
							<!--[XF:mod_tools_menu:top]-->
							<xf:if is="$xf.visitor.is_moderator">
								<a href="{{ link('approval-queue') }}" class="menu-linkRow">{{ phrase('approval_queue') }}</a>
							</xf:if>
							<xf:if is="$xf.visitor.is_moderator && !$xf.options.reportIntoForumId">
								<a href="{{ link('reports') }}" class="menu-linkRow" title="{{ $xf.session.reportCounts.lastBuilt ? phrase('last_report_update:')|for_attr . ' ' . date_time($xf.session.reportCounts.lastBuilt) : '' }}">{{ phrase('reports') }}</a>
							</xf:if>
							<!--[XF:mod_tools_menu:bottom]-->
							</xf:contentcheck>
						</div>
					</div>
				</xf:if>

				<xf:if is="$xf.visitor.is_admin">
					<a href="{{ base_url('admin.php') }}" class="p-staffBar-link" target="_blank">{{ phrase('admin') }}</a>
				</xf:if>
			</xf:contentcheck>
			</div>
		</div>
		</xf:if>

		<div class="p-nav-opposite">
			<div class="p-navgroup p-account {{ $xf.visitor.user_id ? 'p-navgroup--member' : 'p-navgroup--guest' }}">
				<xf:if is="$xf.visitor.user_id">
					<xf:if is="$xf.visitor.user_state == 'rejected' OR $xf.visitor.user_state == 'disabled'">
						<a href="{{ link('account') }}"
							class="p-navgroup-link p-navgroup-link--iconic p-navgroup-link--user">
							<xf:avatar user="$xf.visitor" size="xxs" href="" />
							<span class="p-navgroup-linkText">{$xf.visitor.username}</span>
						</a>

						<a href="{{ link('logout', null, {'t': csrf_token()}) }}" class="p-navgroup-link">
							<span class="p-navgroup-linkText">{{ phrase('log_out') }}</span>
						</a>
					<xf:else />
						<a href="{{ link('account') }}"
							class="p-navgroup-link p-navgroup-link--iconic p-navgroup-link--user badgeContainer<xf:if is="$xf.visitor.conversations_unread OR $xf.visitor.alerts_unread"> badgeContainer--highlighted</xf:if>"
							data-badge="{{ ($xf.visitor.conversations_unread + $xf.visitor.alerts_unread)|number }}"
							data-xf-click="menu"
							data-xf-key="{{ phrase('shortcut.visitor_menu')|for_attr }}"
							data-menu-pos-ref="< .p-navgroup"
							aria-expanded="false"
							aria-haspopup="true">
							<xf:avatar user="$xf.visitor" size="xxs" href="" />
							<span class="p-navgroup-linkText">{$xf.visitor.username}</span>
						</a>
						<div class="menu menu--structural menu--wide menu--account" data-menu="menu" aria-hidden="true"
							data-href="{{ link('account/visitor-menu') }}"
							data-load-target=".js-visitorMenuBody">
							<div class="menu-content js-visitorMenuBody">
								<div class="menu-row">
									{{ phrase('loading...') }}
								</div>
							</div>
						</div>

						<a href="{{ link('conversations') }}"
							class="p-navgroup-link p-navgroup-link--iconic p-navgroup-link--conversations js-badge--conversations badgeContainer{{ $xf.visitor.conversations_unread ? ' badgeContainer--highlighted' : '' }}"
							data-badge="{$xf.visitor.conversations_unread|number}"
							data-xf-click="menu"
							data-xf-key="{{ phrase('shortcut.conversations_menu')|for_attr }}"
							data-menu-pos-ref="< .p-navgroup"
							aria-label="{{ phrase('inbox')|for_attr }}"
							aria-expanded="false"
							aria-haspopup="true">
							<i aria-hidden="true"></i>
							<span class="p-navgroup-linkText">{{ phrase('nav_inbox') }}</span>
						</a>
						<div class="menu menu--structural menu--medium" data-menu="menu" aria-hidden="true"
							data-href="{{ link('conversations/popup') }}"
							data-nocache="true"
							data-load-target=".js-convMenuBody">
							<div class="menu-content">
								<h3 class="menu-header">{{ phrase('conversations') }}</h3>
								<div class="js-convMenuBody">
									<div class="menu-row">{{ phrase('loading...') }}</div>
								</div>
								<div class="menu-footer menu-footer--split">
									<span class="menu-footer-main">
										<a href="{{ link('conversations') }}">{{ phrase('show_all...') }}</a>
									</span>
									<xf:if is="$xf.visitor.canStartConversation()">
										<span class="menu-footer-opposite">
											<a href="{{ link('conversations/add') }}">{{ phrase('start_new_conversation') }}</a>
										</span>
									</xf:if>
								</div>
							</div>
						</div>

						<a href="{{ link('account/alerts') }}"
							class="p-navgroup-link p-navgroup-link--iconic p-navgroup-link--alerts js-badge--alerts badgeContainer{{ $xf.visitor.alerts_unread ? ' badgeContainer--highlighted' : '' }}"
							data-badge="{$xf.visitor.alerts_unread|number}"
							data-xf-click="menu"
							data-xf-key="{{ phrase('shortcut.alerts_menu')|for_attr }}"
							data-menu-pos-ref="< .p-navgroup"
							aria-label="{{ phrase('alerts')|for_attr }}"
							aria-expanded="false"
							aria-haspopup="true">
							<i aria-hidden="true"></i>
							<span class="p-navgroup-linkText">{{ phrase('nav_alerts') }}</span>
						</a>
						<div class="menu menu--structural menu--medium" data-menu="menu" aria-hidden="true"
							data-href="{{ link('account/alerts-popup') }}"
							data-nocache="true"
							data-load-target=".js-alertsMenuBody">
							<div class="menu-content">
								<h3 class="menu-header">{{ phrase('alerts') }}</h3>
								<div class="js-alertsMenuBody">
									<div class="menu-row">{{ phrase('loading...') }}</div>
								</div>
								<div class="menu-footer menu-footer--split">
									<span class="menu-footer-main">
										<a href="{{ link('account/alerts') }}">{{ phrase('show_all...') }}</a>
									</span>
									<span class="menu-footer-opposite">
										<a href="{{ link('account/preferences') }}">{{ phrase('preferences') }}</a>
									</span>
								</div>
							</div>
						</div>
					</xf:if>
				<xf:else />
					<xf:if is="property('dt_triggers_style') == 'option2'">
						<a href="{{ link('login') }}" class="p-navgroup-link p-navgroup-link--iconic p-navgroup-link--logIn" data-xf-click="menu">
							<i></i>
							<span class="p-navgroup-linkText">{{ phrase('log_in') }}</span>
						</a>
						<xf:else />
						<a href="{{ link('login') }}" class="p-navgroup-link p-navgroup-link--iconic p-navgroup-link--logIn"
							data-xf-click="overlay" data-follow-redirects="on">
							<i aria-hidden="true"></i>
							<span class="p-navgroup-linkText">{{ phrase('log_in') }}</span>
						</a>
					</xf:if>
					<div class="menu menu--structural menu--medium" data-menu="menu" aria-hidden="true" data-href="{{ link('login') }}"></div>
					<xf:if is="$xf.options.registrationSetup.enabled">
						<a href="{{ link('register') }}" class="p-navgroup-link p-navgroup-link--iconic p-navgroup-link--register"
							data-xf-click="overlay" data-follow-redirects="on">
							<i aria-hidden="true"></i>
							<span class="p-navgroup-linkText">{{ phrase('register') }}</span>
						</a>
					</xf:if>
				</xf:if>
			</div>
			<div class="p-navgroup p-discovery{{ !$xf.visitor.canSearch() ? ' p-discovery--noSearch' : '' }}">
				<a href="{{ link('whats-new') }}"
					class="p-navgroup-link p-navgroup-link--iconic p-navgroup-link--whatsnew"
					aria-label="{{ phrase('whats_new')|for_attr }}"
					title="{{ phrase('whats_new')|for_attr }}">
					<i aria-hidden="true"></i>
					<span class="p-navgroup-linkText">{{ phrase('whats_new') }}</span>
				</a>

				<xf:if is="$xf.visitor.canSearch()">
					<a href="{{ link('search') }}"
						class="p-navgroup-link p-navgroup-link--iconic p-navgroup-link--search"
						data-xf-click="menu"
						data-xf-key="{{ phrase('shortcut.search_menu')|for_attr }}"
						aria-label="{{ phrase('search')|for_attr }}"
						aria-expanded="false"
						aria-haspopup="true"
						title="{{ phrase('search')|for_attr }}">
						<i aria-hidden="true"></i>
						<span class="p-navgroup-linkText">{{ phrase('search') }}</span>
					</a>
					<div class="menu menu--structural menu--wide" data-menu="menu" aria-hidden="true">
						<form action="{{ link('search/search') }}" method="post"
							class="menu-content"
							data-xf-init="quick-search">

							<h3 class="menu-header">{{ phrase('search') }}</h3>
							<!--[XF:search_menu:above_input]-->
							<div class="menu-row">
								<xf:if is="$searchConstraints">
									<div class="inputGroup inputGroup--joined">
										<xf:textbox name="keywords"
											placeholder="{{ phrase('search...') }}"
											aria-label="{{ phrase('search') }}"
											data-menu-autofocus="true" />
										<xf:select name="constraints"
											class="js-quickSearch-constraint"
											aria-label="{{ phrase('search_within') }}">

											<xf:option value="">{{ phrase('everywhere') }}</xf:option>
											<xf:foreach loop="$searchConstraints" key="$constraintName" value="$constraint">
												<xf:option value="{$constraint|json}">{$constraintName}</xf:option>
											</xf:foreach>
										</xf:select>
									</div>
								<xf:else />
									<xf:textbox name="keywords"
										placeholder="{{ phrase('search...') }}"
										aria-label="{{ phrase('search') }}"
										data-menu-autofocus="true" />
								</xf:if>
							</div>

							<!--[XF:search_menu:above_title_only]-->
							<div class="menu-row">
								<xf:checkbox standalone="true"><xf:option name="c[title_only]" label="{{ phrase('search_titles_only') }}" /></xf:checkbox>
							</div>
							<!--[XF:search_menu:above_member]-->
							<div class="menu-row">
								<div class="inputGroup">
									<span class="inputGroup-text" id="ctrl_search_menu_by_member">{{ phrase('by:') }}</span>
									<input type="text" class="input" name="c[users]" data-xf-init="auto-complete" placeholder="{{ phrase('member')|for_attr }}" aria-labelledby="ctrl_search_menu_by_member" />
								</div>
							</div>
							<div class="menu-footer">
								<span class="menu-footer-controls">
									<xf:button type="submit" class="button--primary" icon="search" />
									<xf:button href="{{ link('search') }}">{{ phrase('advanced_search...') }}</xf:button>
								</span>
							</div>

							<xf:csrf />
						</form>
					</div>
				</xf:if>
			</div>
		</div>
	</div>
</div>


<header class="p-header" id="header">
	<div class="p-header-inner">
		<div class="p-header-content">

			<xf:if is="property('dt_text_logo')">
			<div class="p-header-logo p-header-logo--text">
				<a href="{{ ($xf.options.logoLink && $xf.homePageUrl) ? $xf.homePageUrl : link('index') }}">
						{{ property('dt_text_logo') }}
				</a>
			</div>
			<xf:else />
			<div class="p-header-logo p-header-logo--image">
					<a href="{{ ($xf.options.logoLink && $xf.homePageUrl) ? $xf.homePageUrl : link('index') }}">
					<img src="{{ base_url(property('publicLogoUrl')) }}"
						alt="{$xf.options.boardTitle}"
						{{ property('publicLogoUrl2x') ? 'srcset="' . base_url(property('publicLogoUrl2x')) . ' 2x"' : '' }} />
				</a>
			</div>
			</xf:if>
			<xf:ad position="container_header" />
		</div>
	</div>
</header>

<xf:set var="$navHtml">
	<nav class="p-nav">
		<div class="p-nav-inner">
			<a class="p-nav-menuTrigger" data-xf-click="off-canvas" data-menu=".js-headerOffCanvasMenu" role="button" tabindex="0">
				<i aria-hidden="true"></i>
				<span class="p-nav-menuText">{{ phrase('menu') }}</span>
			</a>

			<div class="p-nav-smallLogo">
				<a href="{{ ($xf.options.logoLink && $xf.homePageUrl) ? $xf.homePageUrl : link('index') }}">
					<img src="{{ base_url(property('publicLogoUrl')) }}"
						alt="{$xf.options.boardTitle}"
					{{ property('publicLogoUrl2x') ? 'srcset="' . base_url(property('publicLogoUrl2x')) . ' 2x"' : '' }} />
				</a>
			</div>

			<div class="p-nav-scroller hScroller" data-xf-init="h-scroller" data-auto-scroll=".p-navEl.is-selected">
				<div class="hScroller-scroll">
					<ul class="p-nav-list js-offCanvasNavSource">
					<xf:foreach loop="$navTree" key="$navSection" value="$navEntry" i="$i" if="{{ $navSection != $xf.app.defaultNavigationId }}">
						<li>
							<xf:macro name="nav_entry"
								arg-navId="{$navSection}"
								arg-nav="{$navEntry}"
								arg-selected="{{ $navSection == $pageSection }}"
								arg-shortcut="{$i}" />
						</li>
					</xf:foreach>
					</ul>
				</div>
			</div>
		</div>
	</nav>
</xf:set>
<xf:set var="$subNavHtml">
	<xf:if is="$selectedNavChildren is not empty">
		<div class="p-sectionLinks">
			<div class="p-sectionLinks-inner hScroller" data-xf-init="h-scroller">
				<div class="hScroller-scroll">
					<ul class="p-sectionLinks-list">
					<xf:foreach loop="$selectedNavChildren" key="$navId" value="$navEntry" i="$i">
						<li>
							<xf:macro name="nav_entry" arg-navId="{$navId}" arg-nav="{$navEntry}" arg-shortcut="alt+{$i}" />
						</li>
					</xf:foreach>
					</ul>
				</div>
			</div>
		</div>
	<xf:elseif is="{$selectedNavEntry}" />
		<div class="p-sectionLinks p-sectionLinks--empty"></div>
	</xf:if>
</xf:set>

<xf:if is="property('publicNavSticky') == 'primary'">
	<div class="p-navSticky p-navSticky--primary" data-xf-init="sticky-header">
		{$navHtml|raw}
	</div>
	{$subNavHtml|raw}
<xf:elseif is="property('publicNavSticky') == 'all'" />
	<div class="p-navSticky p-navSticky--all" data-xf-init="sticky-header">
		{$navHtml|raw}
		{$subNavHtml|raw}
	</div>
<xf:else />
	{$navHtml|raw}
	{$subNavHtml|raw}
</xf:if>

<div class="offCanvasMenu offCanvasMenu--nav js-headerOffCanvasMenu" data-menu="menu" aria-hidden="true" data-ocm-builder="navigation">
	<div class="offCanvasMenu-backdrop" data-menu-close="true"></div>
	<div class="offCanvasMenu-content">
		<div class="offCanvasMenu-header">
			{{ phrase('menu') }}
			<a class="offCanvasMenu-closer" data-menu-close="true" role="button" tabindex="0" aria-label="{{ phrase('close')|for_attr }}"></a>
		</div>
		<xf:if is="$xf.visitor.user_id">
			<div class="p-offCanvasAccountLink">
				<div class="offCanvasMenu-linkHolder">
					<a href="{{ link('account') }}" class="offCanvasMenu-link">
						<xf:avatar user="$xf.visitor" size="xxs" href="" />
						{$xf.visitor.username}
					</a>
				</div>
				<hr class="offCanvasMenu-separator" />
			</div>
		<xf:else />
			<div class="p-offCanvasRegisterLink">
				<div class="offCanvasMenu-linkHolder">
					<a href="{{ link('login') }}" class="offCanvasMenu-link" data-xf-click="overlay" data-menu-close="true">
						{{ phrase('log_in') }}
					</a>
				</div>
				<hr class="offCanvasMenu-separator" />
				<xf:if is="$xf.options.registrationSetup.enabled">
					<div class="offCanvasMenu-linkHolder">
						<a href="{{ link('register') }}" class="offCanvasMenu-link" data-xf-click="overlay" data-menu-close="true">
							{{ phrase('register') }}
						</a>
					</div>
					<hr class="offCanvasMenu-separator" />
				</xf:if>
			</div>
		</xf:if>
		<div class="js-offCanvasNavTarget"></div>
	</div>
</div>

<div class="p-body">
	<div class="p-body-inner">
		<!--XF:EXTRA_OUTPUT-->
		
		<xf:ad position="container_breadcrumb_top_above" />
		
		<div class="p-breadcrumbs--container{{ $sidebar ? ' p-breadcrumbs--container--side' : '' }}">
			<xf:macro name="breadcrumbs"
			arg-breadcrumbs="{$breadcrumbs}"
			arg-navTree="{$navTree}"
			arg-selectedNavEntry="{$selectedNavEntry}" />
			<xf:if is="$sidebar"><xf:if is="property('dt_collapsible_sidebar') && !property('dt_disable_sidebar') && $sidebar"><span id="collapse-side" class="collapseTrigger collapseTrigger--block {{ !is_toggled('_side-1') ? ' is-active' : '' }}" data-xf-click="toggle" data-xf-init="toggle-storage" data-storage-type="cookie" data-target=".p-body-sidebar, .p-body-content" data-storage-key="_side-1"></span></xf:if></xf:if>
		</div>
		
		<xf:ad position="container_breadcrumb_top_below" />
		
		<xf:if is="property('dt_guest_message')">
			<xf:if is="!$xf.visitor.user_id">
				<div class="p-guest--message">
					{{ property('dt_guest_message_content') }}
				</div>
			</xf:if>	
		</xf:if>

		<xf:if is="$notices.block">
			<xf:macro template="notice_macros" name="notice_list" arg-type="block" arg-notices="{$notices.block}" />
		</xf:if>

		<xf:if is="$notices.scrolling">
			<xf:macro template="notice_macros" name="notice_list" arg-type="scrolling" arg-notices="{$notices.scrolling}" />
		</xf:if>

		<xf:macro template="browser_warning_macros" name="javascript" />
		<xf:macro template="browser_warning_macros" name="browser" />

		<xf:if is="$headerHtml is not empty">
			<div class="p-body-header">
				{$headerHtml|raw}
			</div>
		<xf:elseif contentcheck="true" />
			<div class="p-body-header">
			<xf:contentcheck>
				<xf:if contentcheck="true">
					<div class="p-title {{ $noH1 ? 'p-title--noH1' : '' }}">
					<xf:contentcheck>
						<xf:if is="!$noH1">
							<h1 class="p-title-value">{$h1}</h1>
						</xf:if>
						<xf:if contentcheck="true">
							<div class="p-title-pageAction"><xf:contentcheck><xf:pageaction /></xf:contentcheck></div>
						</xf:if>
					</xf:contentcheck>
					</div>
				</xf:if>

				<xf:if is="$description is not empty">
					<div class="p-description">{$description}</div>
				</xf:if>
			</xf:contentcheck>
			</div>
		</xf:if>

		<div class="p-body-main {{ $sidebar ? 'p-body-main--withSidebar' : '' }} {{ $sideNav ? 'p-body-main--withSideNav' : '' }}">
			<xf:if is="$sideNav">
				<div class="p-body-sideNav">
					<div class="p-body-sideNavTrigger">
						<xf:button class="button--link" data-xf-click="off-canvas" data-menu="#js-SideNavOcm">
							{{ $sideNavTitle ?: phrase('navigation') }}
						</xf:button>
					</div>
					<div class="p-body-sideNavInner" data-ocm-class="offCanvasMenu offCanvasMenu--blocks" id="js-SideNavOcm" data-ocm-builder="sideNav">
						<div data-ocm-class="offCanvasMenu-backdrop" data-menu-close="true"></div>
						<div data-ocm-class="offCanvasMenu-content">
							<div class="p-body-sideNavContent">
								<xf:ad position="container_sidenav_above" />
								<xf:foreach loop="$sideNav" value="$sideNavHtml">
									{$sideNavHtml}
								</xf:foreach>
								<xf:ad position="container_sidenav_below" />
							</div>
						</div>
					</div>
				</div>
			</xf:if>

			<div class="p-body-content {{ !is_toggled('_side-1') ? 'is-active' : '' }}">
				<xf:ad position="container_content_above" />
				<div class="p-body-pageContent">{$content|raw}</div>
				<xf:ad position="container_content_below" />
			</div>

			<xf:if is="$sidebar">
				<div class="p-body-sidebar {{ !is_toggled('_side-1') ? 'is-active' : '' }}">
					<xf:ad position="container_sidebar_above" />
					<xf:foreach loop="$sidebar" value="$sidebarHtml">
						{$sidebarHtml}
					</xf:foreach>
					<xf:ad position="container_sidebar_below" />
				</div>
			</xf:if>
		</div>

		<xf:ad position="container_breadcrumb_bottom_above" />
		<xf:macro name="breadcrumbs"
			arg-breadcrumbs="{$breadcrumbs}"
			arg-navTree="{$navTree}"
			arg-selectedNavEntry="{$selectedNavEntry}"
			arg-variant="bottom" />
		<xf:ad position="container_breadcrumb_bottom_below" />
	</div>
</div>
	
<xf:if is="property('dt_extra_footer')"><xf:include template="extra_footer" /></xf:if>

<footer class="p-footer" id="footer">
	<div class="p-footer-inner">

		<div class="p-footer-row">
			<xf:if contentcheck="true">
				<div class="p-footer-row-main">
					<ul class="p-footer-linkList">
					<xf:contentcheck>
						<xf:if is="$xf.visitor.canChangeStyle()">
							<li><a href="{{ link('misc/style') }}" data-xf-click="overlay"
								data-xf-init="tooltip" title="{{ phrase('style_chooser')|for_attr }}" rel="nofollow">
								<xf:fa icon="fa-paint-brush" /> {$xf.style.title}
							</a></li>
						</xf:if>
						<xf:if is="$xf.visitor.canChangeLanguage()">
							<li><a href="{{ link('misc/language') }}" data-xf-click="overlay"
								data-xf-init="tooltip" title="{{ phrase('language_chooser')|for_attr }}" rel="nofollow">
								<xf:fa icon="fa-globe" /> {$xf.language.title}</a></li>
						</xf:if>
					</xf:contentcheck>
						<xf:if is="$xf.visitor.canUseContactForm()">
							<xf:if is="$xf.contactUrl">
								<li><a href="{$xf.contactUrl}" data-xf-click="{{ ($xf.options.contactUrl.overlay OR $xf.options.contactUrl.type == 'default') ? 'overlay' : '' }}">{{ phrase('contact_us') }}</a></li>
							</xf:if>
						</xf:if>

						<xf:if is="$xf.tosUrl">
							<li><a href="{$xf.tosUrl}">{{ phrase('terms_and_rules') }}</a></li>
						</xf:if>

						<xf:if is="$xf.privacyPolicyUrl">
							<li><a href="{$xf.privacyPolicyUrl}">{{ phrase('privacy_policy') }}</a></li>
						</xf:if>

						<xf:if is="$xf.helpPageCount">
							<li><a href="{{ link('help') }}">{{ phrase('help') }}</a></li>
						</xf:if>

						<xf:if is="$xf.homePageUrl">
							<li><a href="{$xf.homePageUrl}">{{ phrase('home') }}</a></li>
						</xf:if>

						<li><a href="{{ link('forums/index.rss', '-') }}" target="_blank" class="p-footer-rssLink" title="{{ phrase('rss')|for_attr }}"><span aria-hidden="true"><xf:fa icon="fa-rss" /><span class="u-srOnly">{{ phrase('rss') }}</span></span></a></li>
					</ul>
				</div>
			</xf:if>
			<div class="p-footer-row-opposite">
				<xf:if contentcheck="true">
					<div class="p-footer-copyright">
					<xf:contentcheck>
						<xf:copyright />
						{{ phrase('extra_copyright') }}
					</xf:contentcheck>
						<br />
						Theming with <i class="fa fa-heart animate-pulse"></i> by: <a href="http://www.dohtheme.com">DohTheme</a>
					</div>
				</xf:if>
			</div>
		</div>

		<xf:if contentcheck="true">
			<div class="p-footer-debug">
			<xf:contentcheck>
				<xf:macro template="debug_macros" name="debug"
					arg-controller="{$controller}"
					arg-action="{$actionMethod}"
					arg-template="{$template}" />
			</xf:contentcheck>
			</div>
		</xf:if>
	</div>
</footer>

</div> <!-- closing p-pageWrapper -->

<div class="u-bottomFixer js-bottomFixTarget">
	<xf:if is="$notices.floating">
		<xf:macro template="notice_macros" name="notice_list" arg-type="floating" arg-notices="{$notices.floating}" />
	</xf:if>
	<xf:if is="$notices.bottom_fixer">
		<xf:macro template="notice_macros" name="notice_list" arg-type="bottom_fixer" arg-notices="{$notices.bottom_fixer}" />
	</xf:if>
</div>

<xf:if is="property('scrollJumpButtons')">
	<div class="u-scrollButtons js-scrollButtons" data-trigger-type="{{ property('scrollJumpButtons') }}">
		<xf:button href="#top" class="button--scroll" data-xf-click="scroll-to"><xf:fa icon="fa-chevron-up" /><span class="u-srOnly">{{ phrase('top') }}</span></xf:button>
		<xf:if is="property('scrollJumpButtons') != 'up'">
			<xf:button href="#footer" class="button--scroll" data-xf-click="scroll-to"><xf:fa icon="fa-chevron-down" /><span class="u-srOnly">{{ phrase('bottom') }}</span></xf:button>
		</xf:if>
	</div>
</xf:if>

<xf:macro template="helper_js_global" name="body" arg-app="public" arg-jsState="{$jsState}" />

<xf:if is="count($xf.reactionsActive) > 1">
	<script type="text/template" id="xfReactTooltipTemplate">
		<div class="tooltip-content-inner">
			<div class="reactTooltip">
				<xf:foreach loop="$xf.reactionsActive" key="$reactionId" value="$reaction">
					<xf:reaction id="{$reactionId}" tooltip="true" />
				</xf:foreach>
			</div>
		</div>
	</script>
</xf:if>

{$ldJsonHtml|raw}

</body>
</html>

<script>
	function changeUpdate () {
		document.getElementById('update-text').innerText = 'НАЖИМАЙ!';
		document.getElementById('update-text').style.marginRight = "12%"
	}
	function backUpdate () {
		document.getElementById('update-text').innerText = '3.0? ТУТ!';
		document.getElementById('update-text').style.marginRight = "12%"
	}
</script>

<xf:macro name="nav_entry" arg-navId="!" arg-nav="!" arg-selected="{{ false }}" arg-shortcut="">
	<div class="p-navEl {{ $selected ? 'is-selected' : '' }}" {{ $nav.children ? 'data-has-children="true"' : '' }}>
		<xf:if is="$nav.href">

			<xf:macro name="nav_link"
				arg-navId="{$navId}"
				arg-nav="{$nav}"
				arg-class="p-navEl-link {{ $nav.children ? 'p-navEl-link--splitMenu' : '' }}"
				arg-shortcut="{{ $nav.children ? false : $shortcut }}" />

			<xf:if is="$nav.children"><a data-xf-key="{$shortcut}"
				data-xf-click="menu"
				data-menu-pos-ref="< .p-navEl"
				class="p-navEl-splitTrigger"
				role="button"
				tabindex="0"
				aria-label="{{ phrase('toggle_expanded')|for_attr }}"
				aria-expanded="false"
				aria-haspopup="true"></a></xf:if>

		<xf:elseif is="$nav.children" /><a data-xf-key="{$shortcut}"
			data-xf-click="menu"
			data-menu-pos-ref="< .p-navEl"
			class="p-navEl-linkHolder"
			role="button"
			tabindex="0"
			aria-expanded="false"
			aria-haspopup="true">
			<xf:macro name="nav_link"
				arg-navId="{$navId}"
				arg-nav="{$nav}"
				arg-class="p-navEl-link p-navEl-link--menuTrigger" />
		</a>

		<xf:else />

			<xf:macro name="nav_link"
				arg-navId="{$navId}"
				arg-nav="{$nav}"
				arg-class="p-navEl-link"
				arg-shortcut="{$shortcut}" />

		</xf:if>
		<xf:if is="$nav.children">
			<div class="menu menu--structural" data-menu="menu" aria-hidden="true">
				<div class="menu-content">
					<xf:foreach loop="$nav.children" key="$childNavId" value="$child">
						<xf:macro name="nav_menu_entry"
							arg-navId="{$childNavId}"
							arg-nav="{$child}" />
					</xf:foreach>
				</div>
			</div>
		</xf:if>
	</div>
</xf:macro>

<xf:macro name="nav_link" arg-navId="!" arg-nav="!" arg-class="" arg-titleHtml="" arg-shortcut="{{ false }}">
	<xf:set var="$tag" value="{{ $nav.href ? 'a' : 'span' }}" />
	<{$tag} {{ $nav.href ? 'href="' . $nav.href . '"' : '' }}
		class="{{ trim($class) }} {$nav.attributes.class}"
		{{ attributes($nav.attributes, ['class']) }}
		{{ $shortcut !== false ? 'data-xf-key="' . $shortcut . '"' : '' }}
		data-nav-id="{$navId}"><xf:if is="$nav.icon"><xf:fa icon="{$nav.icon}" /> </xf:if>{{ $titleHtml ? $titleHtml|raw : $nav.title }}<xf:if is="$nav.counter"> <span class="badge badge--highlighted">{$nav.counter|number}</span></xf:if></{$tag}>
</xf:macro>

<xf:macro name="nav_menu_entry" arg-navId="!" arg-nav="!" arg-depth="0">
	<xf:macro name="nav_link"
		arg-navId="{$navId}"
		arg-nav="{$nav}"
		arg-class="menu-linkRow u-indentDepth{$depth} js-offCanvasCopy" />
	<xf:if is="$nav.children">
		<xf:foreach loop="$nav.children" key="$childNavId" value="$child">
			<xf:macro name="nav_menu_entry"
				arg-navId="{$childNavId}"
				arg-nav="{$child}"
				arg-depth="{{ $depth + 1 }}" />
		</xf:foreach>
		<xf:if is="$depth == 0">
			<hr class="menu-separator" />
		</xf:if>
	</xf:if>
</xf:macro>

<xf:macro name="breadcrumbs" arg-breadcrumbs="!" arg-navTree="!" arg-selectedNavEntry="{{ null }}" arg-variant="">
	<xf:if contentcheck="true">
		<ul class="p-breadcrumbs {{ $variant ? 'p-breadcrumbs--' . $variant : '' }}"
			itemscope itemtype="https://schema.org/BreadcrumbList">
		<xf:contentcheck>
			<xf:set var="$position" value="{{ 0 }}" />

			<xf:set var="$rootBreadcrumb" value="{$navTree.{$xf.options.rootBreadcrumb}}" />
			<xf:if is="$rootBreadcrumb AND $rootBreadcrumb.href != $xf.uri">
				<xf:set var="$position" value="{{ $position + 1 }}" />
				<xf:macro name="crumb"
					arg-position="{$position}"
					arg-href="{$rootBreadcrumb.href}"
					arg-value="{$rootBreadcrumb.title}" />
			</xf:if>

			<xf:if is="$selectedNavEntry && $selectedNavEntry.href && $selectedNavEntry.href != $xf.uri && $selectedNavEntry.href != $rootBreadcrumb.href">
				<xf:set var="$position" value="{{ $position + 1 }}" />
				<xf:macro name="crumb"
					arg-position="{$position}"
					arg-href="{$selectedNavEntry.href}"
					arg-value="{$selectedNavEntry.title}" />
			</xf:if>
			<xf:foreach loop="$breadcrumbs" value="$breadcrumb" if="$breadcrumb.href != $xf.uri">
				<xf:set var="$position" value="{{ $position + 1 }}" />
				<xf:macro name="crumb"
					arg-position="{$position}"
					arg-href="{$breadcrumb.href}"
					arg-value="{$breadcrumb.value}" />
			</xf:foreach>

		</xf:contentcheck>
		</ul>
	</xf:if>
</xf:macro>

<xf:macro name="crumb" arg-href="!" arg-value="!" arg-position="{{ 0 }}">
	<li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
		<a href="{$href}" itemprop="item">
			<span itemprop="name">{$value}</span>
		</a>
		<xf:if is="$position"><meta itemprop="position" content="{$position}" /></xf:if>
	</li>
</xf:macro>]]></template>
    <template title="_widget_Fast_menu" type="public" addon_id="" version_id="0" version_string=""><![CDATA[<style>
.buttonFast {
	width: 100%;
	background-color: var(--block-color) !important;
	width: 100%;	
}
.bf1 {
	margin: 2px;
}
.bf2 {
    padding: 7px;
}
</style>

<center>
<div class = "Fastmenu">
<a href="https://forum.namalsk-rp.ru/threads/80794/" class="button bf1 bf2  buttonFast">Правила проекта</a>
<a href="https://forum.namalsk-rp.ru/threads/80751/" class="button bf1 bf2 buttonFast">Правила форума</a>
<a href="https://forum.namalsk-rp.ru/forums/322/" class="button bf1 bf2 buttonFast">Технический раздел</a>
<a href="https://forum.namalsk-rp.ru/categories/Жалобы.186/" class="button bf1 bf2  buttonFast">Раздел жалоб | Odin | 01</a>
<a href="https://forum.namalsk-rp.ru/categories/267/" class="button bf1 bf2  buttonFast">Раздел жалоб | Poseidon | 02</a>
<a href="https://forum.namalsk-rp.ru/forums/Помощь.225/" class="button bf1 bf2  buttonFast">Часто задаваемые вопросы</a>
</div>
</center>]]></template>
    <template title="account_preferences" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[<xf:title>{{ phrase('preferences') }}</xf:title>

<xf:wrap template="account_wrapper" />

<xf:form action="{{ link('account/preferences') }}" ajax="true" class="block" data-force-flash-message="true">
	<div class="block-container">
		<div class="block-body">
			<xf:if is="$xf.visitor.canChangeStyle()">

				<xf:selectrow name="user[style_id]" value="{$xf.visitor.style_id}"
					label="{{ phrase('style') }}">

					<xf:option style="color:black"  value="0">{{ phrase('use_default_style:') }} {$defaultStyle.title}</xf:option>
					<xf:optgroup style="color:black" label="{{ phrase('styles:') }}">
						<xf:foreach loop="$styles" value="$style">
							<xf:option style="color:black" value="{$style.style_id}">{{ repeat('--', $style.depth) }} {$style.title}{{ !$style.user_selectable ? ' *' : '' }}</xf:option>
						</xf:foreach>
					</xf:optgroup>
				</xf:selectrow>
			<xf:else />
				<xf:hiddenval name="user[style_id]">{$xf.visitor.style_id}</xf:hiddenval>
			</xf:if>

			<xf:if is="$xf.visitor.canChangeLanguage()">
				<xf:selectrow style="color:black"  name="user[language_id]" value="{$xf.visitor.language_id}"
					label="{{ phrase('language') }}">

					<xf:foreach loop="$languageTree.getFlattened(0)" value="$treeEntry">
						<xf:option style="color:black"  value="{$treeEntry.record.language_id}">{{ repeat('--', $treeEntry.depth) }} {$treeEntry.record.title}</xf:option>
					</xf:foreach>
				</xf:selectrow>
			<xf:else />
				<xf:hiddenval name="user[language_id]">{{ $xf.visitor.language_id ? $xf.visitor.language_id : $xf.options.defaultLanguageId }}</xf:hiddenval>
			</xf:if>

			<xf:selectrow style="color:black" name="user[timezone]" value="{$xf.visitor.timezone}"
				label="{{ phrase('time_zone') }}">

				<xf:options source="$timeZones" />
			</xf:selectrow>

			<xf:macro template="helper_account" name="email_options_row" arg-showConversationOption="{{ true }}" />

			<xf:checkboxrow label="{{ phrase('content_options') }}">
				<xf:option value="watch_no_email" name="option[creation_watch_state]" checked="{{ $xf.visitor.Option.creation_watch_state ? true : false  }}"
					label="{{ phrase('automatically_watch_content_you_create...') }}">
					<xf:checkbox>
						<xf:option value="watch_email" name="option[creation_watch_state]" checked="{{ $xf.visitor.Option.creation_watch_state == 'watch_email' }}"
							label="{{ phrase('and_receive_email_notifications') }}" />
					</xf:checkbox>
				</xf:option>
				<xf:option value="watch_no_email" name="option[interaction_watch_state]" checked="{{ $xf.visitor.Option.interaction_watch_state ? true : false  }}"
					label="{{ phrase('automatically_watch_content_you_interact_with...') }}">
					<xf:checkbox>
						<xf:option value="watch_email" name="option[interaction_watch_state]" checked="{{ $xf.visitor.Option.interaction_watch_state == 'watch_email' }}"
							label="{{ phrase('and_receive_email_notifications') }}" />
					</xf:checkbox>
				</xf:option>
				<xf:option name="option[content_show_signature]" checked="{$xf.visitor.Option.content_show_signature}"
					label="{{ phrase('show_peoples_signatures_with_their_messages') }}" />
			</xf:checkboxrow>

			<xf:macro template="helper_account" name="activity_privacy_row" />

			<xf:macro template="custom_fields_macros" name="custom_fields_edit" arg-type="users" arg-group="preferences" arg-set="{$xf.visitor.Profile.custom_fields}" />

			<xf:if is="$xf.options.enableNotices && (count($xf.session.dismissedNotices) > 0)">
				<hr class="formRowSep" />

				<xf:checkboxrow>
					<xf:option name="restore_notices"
						label="{{ phrase('restore_dismissed_notices') }}"
						hint="{{ phrase('restore_dismissed_notices_hint') }}" />
				</xf:checkboxrow>
			</xf:if>

			<xf:if is="$xf.visitor.canUsePushNotifications()">
				<xf:formrow label="{{ phrase('push_notifications') }}" rowtype="button" explain="{{ phrase('enable_push_explain') }}">
					<xf:button class="is-disabled" data-xf-init="push-toggle">
						{{ phrase('push_checking_device_capabilities...') }}
					</xf:button>
				</xf:formrow>

				<xf:checkboxrow label="">
					<xf:option name="option[push_on_conversation]" checked="{$xf.visitor.Option.push_on_conversation}"
						label="{{ phrase('receive_push_notification_when_new_conversation_message_is_received') }}" />
				</xf:checkboxrow>

				<xf:js>
					jQuery.extend(true, XF.config, {
						skipServiceWorkerRegistration: true,
						skipPushNotificationCta: true
					});

					jQuery.extend(XF.phrases, {
						push_enable_label: "{{ phrase('push_enable_label')|escape('js') }}",
						push_disable_label: "{{ phrase('push_disable_label')|escape('js') }}",
						push_not_supported_label: "{{ phrase('push_not_supported_label')|escape('js') }}",
						push_blocked_label: "{{ phrase('push_blocked_label')|escape('js') }}"
					});
				</xf:js>
			<xf:else />
				<xf:hiddenval name="option[push_on_conversation]">{$xf.visitor.Option.push_on_conversation}</xf:hiddenval>
			</xf:if>
		</div>

		<xf:if is="$alertOptOuts is not empty">
			<xf:css src="notification_opt_out.less" />
			<h2 class="block-formSectionHeader"><span class="block-formSectionHeader-aligner">{{ phrase('receive_notification_when_someone...') }}</span></h2>
			<div class="block-body">
				<xf:set var="$canPush" value="{{ $xf.visitor.canUsePushNotifications() }}" />
				<xf:foreach loop="$alertOptOuts" key="$contentType" value="$options">
					<xf:foreach loop="$options" key="$action" value="$label">
						<xf:formrow label="{$label}" data-content-type="{$contentType}" data-action="{$action}">
							<ul class="notificationChoices">
								<li class="notificationChoices-choice notificationChoices-choice--alert">
									<xf:checkbox standalone="true">
										<xf:option name="alert[{$contentType}_{$action}]"
											data-xf-init="{{ $canPush ? 'disabler' : '' }}" data-container="< .notificationChoices | .notificationChoices-choice--push"
											checked="{{ $xf.visitor.Option.doesReceiveAlert($contentType, $action) }}"
											label="{{ phrase('alert') }}" />
									</xf:checkbox>
								</li>
								<xf:if is="$canPush">
									<li class="notificationChoices-choice notificationChoices-choice--push">
										<xf:checkbox standalone="true">
											<xf:option name="push[{$contentType}_{$action}]"
												checked="{{ $xf.visitor.Option.doesReceivePush($contentType, $action) }}"
												label="{{ phrase('push') }}" />
										</xf:checkbox>
										<xf:hiddenval name="push_shown[{$contentType}_{$action}]">1</xf:hiddenval>
									</li>
								</xf:if>
							</ul>
						</xf:formrow>
					</xf:foreach>
					<hr class="formRowSep" />
				</xf:foreach>

			</div>
		</xf:if>

		<xf:submitrow icon="save" sticky="true" />
	</div>
</xf:form>]]></template>
    <template title="account_privacy" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[<xf:title>{{ phrase('privacy') }}</xf:title>

<xf:wrap template="account_wrapper" />

<xf:form action="{{ link('account/privacy') }}" ajax="true" class="block" data-force-flash-message="true">
	<div class="block-container">
		<div class="block-body">
			<xf:macro template="helper_account" name="activity_privacy_row" />
			<xf:macro template="helper_account" name="dob_privacy_row" />
			<xf:macro template="helper_account" name="email_options_row" arg-showExplain="{{ true }}" />

			<xf:formrow rowtype="inputLabelPair noColon" 
				label="{{ phrase('allow_users_to...') }}">

				<xf:macro name="privacy_option"
					arg-user="{$xf.visitor}"
					arg-name="allow_view_profile"
					arg-label="{{ phrase('view_your_details_on_your_profile_page:') }}" />

				<xf:if is="$xf.visitor.canViewProfilePosts()">
					<xf:macro name="privacy_option"
						arg-user="{$xf.visitor}"
						arg-name="allow_post_profile"
						arg-label="{{ phrase('post_messages_on_your_profile_page:') }}"
						arg-hideEveryone="{{true}}" />
				</xf:if>

				<xf:if is="$xf.options.enableNewsFeed">
					<xf:macro name="privacy_option"
						arg-user="{$xf.visitor}"
						arg-name="allow_receive_news_feed"
						arg-label="{{ phrase('receive_your_news_feed:') }}" />
				</xf:if>

				<xf:macro name="privacy_option"
					arg-user="{$xf.visitor}"
					arg-name="allow_send_personal_conversation"
					arg-label="{{ phrase('start_conversations_with_you:') }}"
					arg-hideEveryone="{{true}}" />

				<xf:macro name="privacy_option"
					arg-user="{$xf.visitor}"
					arg-name="allow_view_identities"
					arg-label="{{ phrase('view_your_identities:') }}" />
			</xf:formrow>
		</div>
		<xf:submitrow icon="save" sticky="true" />
	</div>
</xf:form>

<xf:macro name="privacy_option" arg-user="!" arg-name="!" arg-label="!" arg-hideEveryone="{{ false }}" arg-hideFollowed="{{ false }}">
	<dl class="inputLabelPair">
		<dt>{$label}</dt>
		<dd>
			<xf:select name="privacy[{$name}]" value="{$user.Privacy.{$name}}">
				<xf:if is="!$hideEveryone">
					<xf:option style="color:black" value="everyone" style="color:black">{{ phrase('all_visitors') }}</xf:option>
				</xf:if>
				<xf:option style="color:black" value="members">{{ phrase('members_only') }}</xf:option>
				<xf:if is="!$hideFollowed">
					<xf:option style="color:black" value="followed">{{ phrase('people_you_follow') }}</xf:option>
				</xf:if>
				<xf:option style="color:black" value="none">{{ phrase('nobody') }}</xf:option>
			</xf:select>
		</dd>
	</dl>
</xf:macro>]]></template>
    <template title="account_visitor_menu" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[<xf:if contentcheck="true">
	<h4 class="menu-tabHeader tabs" data-xf-init="tabs" role="tablist">
		<span class="hScroller" data-xf-init="h-scroller">
			<span class="hScroller-scroll">
				<a href="{{ link('account') }}" class="tabs-tab is-active" role="tab" tabindex="0" aria-controls="{{ unique_id('accountMenu') }}">{{ phrase('your_account') }}</a>
			<xf:contentcheck>
				<xf:if is="$xf.visitor.canViewBookmarks()">
					<a href="{{ link('account/bookmarks') }}" class="tabs-tab" role="tab" tabindex="0" aria-controls="{{ unique_id('accountMenuBookmarks') }}">{{ phrase('bookmarks') }}</a>
				</xf:if>
				<!--[XF:account_tabs:bottom]-->
			</xf:contentcheck>
			</span>
		</span>
	</h4>
	<xf:set var="$hasTabs" value="{{ true }}" />
</xf:if>

<xf:set var="$accountHtml">
	<div class="menu-row menu-row--alt">
		<xf:macro name="visitor_panel_row" />
	</div>

	<xf:macro name="visitor_panel_row">
		<div class="contentRow">
			<div class="contentRow-figure">
				<span class="avatarWrapper">
					<xf:avatar user="{$xf.visitor}" size="m" href="" notooltip="true" />
					<xf:if is="$xf.visitor.canUploadAvatar()">
						<a class="avatarWrapper-update" href="{{ link('account/avatar') }}" data-xf-click="overlay"><span>{{ phrase('edit') }}</span></a>
					</xf:if>
				</span>
			</div>
			<div class="contentRow-main">
				<h3 class="contentRow-header"><xf:username user="$xf.visitor" rich="true" notooltip="true" /></h3>
				<div class="contentRow-lesser">
					<xf:usertitle user="$xf.visitor" />
				</div>

				<div class="contentRow-minor">
					<!--[XF:stats_pairs:above_messages]-->
					<dl class="pairs pairs--justified fauxBlockLink">
						<dt>{{ phrase('messages') }}</dt>
						<dd>
							<a href="{{ link('search/member', null, {'user_id': $xf.visitor.user_id}) }}" class="fauxBlockLink-linkRow u-concealed">
								{$xf.visitor.message_count|number}
							</a>
						</dd>
					</dl>
					<!--[XF:stats_pairs:above_reactions]-->
					<dl class="pairs pairs--justified fauxBlockLink">
						<dt>{{ phrase('reaction_score') }}</dt>
						<dd>
							<a href="{{ link('account/reactions') }}" class="fauxBlockLink-linkRow u-concealed">
								{$xf.visitor.reaction_score|number}
							</a>
						</dd>
					</dl>
					<!--[XF:stats_pairs:above_points]-->
					<xf:if is="$xf.options.enableTrophies">
						<dl class="pairs pairs--justified fauxBlockLink">
							<dt>{{ phrase('trophy_points') }}</dt>
							<dd>
								<a href="{{ link('members/trophies', $xf.visitor) }}" data-xf-click="overlay" class="fauxBlockLink-linkRow u-concealed">
									{$xf.visitor.trophy_points|number}
								</a>
							</dd>
						</dl>
					</xf:if>
					<xf:if is="{$xf.visitor.Profile.custom_fields.Server}">
						<dl class="pairs pairs--justified fauxBlockLink">
							<dt>Сервер</dt>
							<dd>
								<xf:if is="{$xf.visitor.Profile.custom_fields.Server} == 'Odin'">
									<a href="https://forum.namalsk-rp.ru/odin">{$xf.visitor.Profile.custom_fields.Server}</a>
								</xf:if>
								<xf:if is="{$xf.visitor.Profile.custom_fields.Server} == 'Poseidon'">
									<a href="https://forum.namalsk-rp.ru/poseidon">{$xf.visitor.Profile.custom_fields.Server}</a>
								</xf:if>
							</dd>
						</dl>
					</xf:if>
				</div>
			</div>
		</div>
	</xf:macro>

	<!--[XF:menu_separator:below_visitor_panel]-->
	<hr class="menu-separator menu-separator--hard" />

	<ul class="listPlain listColumns listColumns--narrow listColumns--together">
		<!--[XF:content_links:top]-->
		<xf:if is="$xf.options.enableNewsFeed">
			<li><a href="{{ link('whats-new/news-feed') }}" class="menu-linkRow">{{ phrase('news_feed') }}</a></li>
		</xf:if>
		<li><a href="{{ link('search/member', null, {'user_id': $xf.visitor.user_id}) }}" class="menu-linkRow">{{ phrase('your_content') }}</a></li>
		<li><a href="{{ link('account/reactions') }}" class="menu-linkRow">{{ phrase('reactions_received') }}</a></li>
		<!--[XF:content_links:bottom]-->
	</ul>

	<!--[XF:menu_separator:below_content_links]-->
	<hr class="menu-separator" />

	<ul class="listPlain listColumns listColumns--narrow listColumns--together">
		<!--[XF:account_links:top]-->
		<li><a href="{{ link('account/account-details') }}" class="menu-linkRow">{{ phrase('account_details') }}</a></li>
		<li><a href="{{ link('account/security') }}" class="menu-linkRow">{{ phrase('password_and_security') }}</a></li>
		<li><a href="{{ link('account/privacy') }}" class="menu-linkRow">{{ phrase('privacy') }}</a></li>
		<li><a href="{{ link('account/preferences') }}" class="menu-linkRow">{{ phrase('preferences') }}</a></li>
		<xf:if is="$xf.visitor.canEditSignature()">
			<li><a href="{{ link('account/signature') }}" class="menu-linkRow">{{ phrase('signature') }}</a></li>
		</xf:if>
		<xf:if is="$xf.app.userUpgradeCount">
			<li><a href="{{ link('account/upgrades') }}" class="menu-linkRow">{{ phrase('account_upgrades') }}</a></li>
		</xf:if>
		<xf:if is="$xf.app.connectedAccountCount">
			<li><a href="{{ link('account/connected-accounts') }}" class="menu-linkRow">{{ phrase('connected_accounts') }}</a></li>
		</xf:if>
		<li><a href="{{ link('account/following') }}" class="menu-linkRow">{{ phrase('following') }}</a></li>
		<li><a href="{{ link('account/ignored') }}" class="menu-linkRow">{{ phrase('ignoring') }}</a></li>
		<!--[XF:account_links:bottom]-->
	</ul>

	<!--[XF:menu_separator:below_account_links]-->
	<hr class="menu-separator" />

	<a href="{{ link('logout', null, {'t': csrf_token()}) }}" class="menu-linkRow">{{ phrase('log_out') }}</a>

	<xf:if is="$xf.visitor.canPostOnProfile()">
		<xf:form action="{{ link('members/post', $xf.visitor) }}" ajax="true"
			data-redirect="off"
			data-reset-complete="true"
			data-no-auto-focus="true"
			class="menu-footer">

			<span class="u-srOnly" id="ctrl_message">{{ phrase('update_your_status:') }}</span>
			<xf:textarea name="message" rows="1" autosize="true"
				maxlength="{$xf.options.profilePostMaxLength}"
				placeholder="{{ phrase('update_your_status...') }}"
				data-xf-init="focus-trigger user-mentioner emoji-completer" data-display="< :next" aria-labelledby="ctrl_message" />
			<div class="u-hidden u-hidden--transition u-inputSpacer">
				<xf:button type="submit" class="button--primary" icon="reply">{{ phrase('post_verb') }}</xf:button>
			</div>
		</xf:form>
	</xf:if>
</xf:set>

<xf:if is="$hasTabs">
	<ul class="tabPanes">
		<li class="is-active" role="tabpanel" id="{{ unique_id('accountMenu') }}">
			{$accountHtml|raw}
		</li>
		<xf:if is="$xf.visitor.canViewBookmarks()">
			<li role="tabpanel" id="{{ unique_id('accountMenuBookmarks') }}"
				data-href="{{ link('account/bookmarks-popup') }}"
				data-load-target=".js-bookmarksMenuBody">
				<div class="js-bookmarksMenuBody">
					<div class="menu-row">{{ phrase('loading...') }}</div>
				</div>
				<div class="menu-footer menu-footer--close">
					<a href="{{ link('account/bookmarks') }}">{{ phrase('show_all...') }}</a>
				</div>
			</li>
		</xf:if>
		<!--[XF:account_tab_panes:bottom]-->
	</ul>
<xf:else />
	{$accountHtml|raw}
</xf:if>]]></template>
    <template title="app.less" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[@_nav-elTransitionSpeed: @xf-animationSpeed;
@_navAccount-hPadding: @xf-paddingLarge;

.m-pageWidth(@min-width: @xf-pageEdgeSpacer)
{
	max-width: @xf-pageWidthMax;
	padding: 0 @xf-pageEdgeSpacer;
	margin: 0 auto;
}

.m-pageInset(@defaultPadding: @xf-pageEdgeSpacer)
{
	padding-left: @defaultPadding;
	padding-right: @defaultPadding;

	// iPhone X/Xr/Xs support
	@supports(padding: max(0px))
	{
		&
		{
			padding-left: ~"max(@{defaultPadding}, env(safe-area-inset-left))";
			padding-right: ~"max(@{defaultPadding}, env(safe-area-inset-right))";
		}
	}
}

.u-anchorTarget
{
	.m-stickyHeaderConfig(@xf-publicNavSticky);
	height: (@_stickyHeader-height + @_stickyHeader-offset);
	margin-top: -(@_stickyHeader-height + @_stickyHeader-offset);
}

.p-pageWrapper
{
	position: relative;
	display: flex;
	flex-direction: column;
	min-height: 100vh;
	background: #45494f url(styles/sense/img/main.jpg);
    background-repeat: no-repeat;
	background-size: cover !important;
    background-attachment: scroll !important;

	.is-modalOverlayOpen &
	{
		& when (unit(xf-default(@xf-overlayMaskBlur, 0)) > 0)
		{
			filter: blur(@xf-overlayMaskBlur);
		}
	}
}

// RESPONSIVE HEADER

.p-offCanvasAccountLink
{
	display: none;
}

@media (max-width: 359px)
{
	.p-offCanvasAccountLink
	{
		display: block;
	}
}

@media (max-width: 359px)
{
	.p-offCanvasRegisterLink
	{
		display: block;
	}
}

{{ include('app_staffbar.less') }}
{{ include('app_header.less') }}
{{ include('app_stickynav.less') }}
{{ include('app_nav.less') }}
{{ include('app_sectionlinks.less') }}
{{ include('app_body.less') }}
{{ include('app_breadcrumbs.less') }}
{{ include('app_title.less') }}
{{ include('app_footer.less') }}
{{ include('app_inlinemod.less') }}
{{ include('app_ignored.less') }}
{{ include('app_username_styles.less') }}
{{ include('app_user_banners.less') }}]]></template>
    <template title="app_body.less" type="public" addon_id="XF" version_id="2010070" version_string="2.1.0"><![CDATA[// ######################################### MAIN BODY #################################

.p-body
{
	display: flex;
	align-items: stretch;
	flex-grow: 1;
	min-height: 1px; // IE11 workaround - related to #139187
}

.p-body-inner
{
	display: flex;
	flex-direction: column;
	width: 100%;
}

.p-body-inner
{
	.m-pageWidth();
	.m-pageInset();
	.m-clearFix();

	padding-top: ((@xf-elementSpacer) / 2);
	padding-bottom: @xf-elementSpacer;
}

.p-body-header
{
	margin-bottom: @xf-elementSpacer;
}

.p-body-main
{
	display: table;
	table-layout: fixed;
	width: 100%;
	min-height: 1px; // IE11 workaround - related to #139187
	margin-bottom: auto;
	
	&--withSidebar {
		display: flex;
		align-items: flex-start;
	}
}

.p-body-content
{
	display: block;
	width: 100%;

	.p-body-main--withSideNav &
	{
		padding-left: @xf-sidebarSpacer;
	}

	.p-body-main--withSidebar &
	{
		flex: 1 1 auto;
		padding-right: @xf-sidebarSpacer;
	}

	.p-body-main--withSidebar &,
	.p-body-main--withSideNav &
	{
		// don't let the ad overflow the sidebar area -- this can happen due to how the Adsense JS works
		ins.adsbygoogle
		{
			// -10px gives a little buffer or helps account for no scrollbar being considered
			max-width: ~"calc(100vw - 10px - @{xf-pageEdgeSpacer} - @{xf-pageEdgeSpacer} - @{xf-sidebarWidth} - @{xf-sidebarSpacer})";

			@media (min-width: @xf-pageWidthMax)
			{
				// window wider than the max width, so limit to the display area without the sidebar
				max-width: ~"calc(@{xf-pageWidthMax} - @{xf-pageEdgeSpacer} - @{xf-pageEdgeSpacer} - @{xf-sidebarWidth} - @{xf-sidebarSpacer})";
			}

			@media (max-width: @xf-responsiveWide)
			{
				// sidebar/sidenav have been moved/hidden
				max-width: 100vw;
			}
		}
	}
}

.p-body-pageContent
{
	> .tabs--standalone:first-child
	{
		margin-bottom: (@xf-elementSpacer) / 2;
	}
}

.p-body-sideNav
{
	display: table-cell;
	vertical-align: top;
	width: @xf-sidebarWidth;
}

.p-body-sideNavTrigger
{
	display: none;
}

.p-body-sidebar
{
	flex: 0 0 auto;
	display: block;
	width: @xf-sidebarWidth;

	.contentRow-figure .avatar--m
	{
		// make these avatars a bit smaller in the sidebar so the content has more space
		.m-avatarSize(@avatar-m * 2 / 3);
	}
}

.p-body-content,
.p-body-pageContent,
.p-body-sideNav,
.p-body-sideNavContent,
.p-body-sidebar
{
	> :first-child
	{
		margin-top: 0;
	}

	> :last-child
	{
		margin-bottom: 0;
	}
}

@media (max-width: @xf-responsiveWide)
{
	.p-body-main,
	.p-body-content
	{
		display: block;
		overflow: hidden;
	}

	.p-body-sideNav
	{
		display: block;
		width: auto;
	}

	.p-body-sideNavTrigger
	{
		margin-bottom: ((@xf-elementSpacer) / 2);
		text-align: center;

		.button:before
		{
			.m-faBase();
			font-size: 120%;
			vertical-align: middle;
			display: inline-block;
			margin: -4px 6px -4px 0;
			.m-faContent(@fa-var-bars, .88em);
		}

		.has-js &
		{
			display: block;
		}
	}

	.has-js .p-body-sideNavInner:not(.offCanvasMenu)
	{
		display: none;

		.m-transitionFadeDown();
	}

	.has-no-js .p-body-sideNavInner
	{
		margin-bottom: @xf-elementSpacer;
	}

	.p-body-sidebar
	{
		display: flex;
		flex-wrap: wrap;
		align-items: stretch;
		margin: (@xf-elementSpacer) -((@xf-pageEdgeSpacer) / 2) -(@xf-elementSpacer);
		width: auto;

		> *
		{
			margin: 0 ((@xf-pageEdgeSpacer) / 2) @xf-elementSpacer;
			min-width: @xf-sidebarWidth;
			flex: 1 1 @xf-sidebarWidth;

			&:last-child
			{
				margin-bottom: @xf-elementSpacer;
			}
		}

		// add an invisible block to ensure that the last row has the correct widths
		&:after
		{
			display: block;
			content: '';
			height: 0;
			margin: 0 ((@xf-pageEdgeSpacer) / 2);
			min-width: @xf-sidebarWidth;
			flex: 1 1 @xf-sidebarWidth;
		}

		.block-container
		{
			display: flex;
			flex-direction: column;
			height: 100%;

			.block-footer
			{
				margin-top: auto;
			}
		}
	}

	.p-body-main--withSideNav,
	.p-body-main--withSidebar
	{
		.p-body-content {
			width: 100%;
			max-width: 100%;
			padding: 0; 
		}
	}
}

@media (max-width: @xf-responsiveEdgeSpacerRemoval)
{
	.p-body-sideNavContent
	{
		// this is likely to contain blocks that overflow the container so account for that
		margin: 0 -@xf-pageEdgeSpacer;
		padding: 0 @xf-pageEdgeSpacer;

		.offCanvasMenu &
		{
			margin: 0;
			padding: 0;
		}
	}

	.p-body-sidebar
	{
		display: block;
		width: 100%;
		margin-left: 0;
		margin-right: 0;

		> *
		{
			margin-left: 0;
			margin-right: 0;
			min-width: 0;
		}
	}
}]]></template>
    <template title="app_breadcrumbs.less" type="public" addon_id="XF" version_id="2010270" version_string="2.1.2"><![CDATA[.p-breadcrumbs
{
	.m-listPlain();
	.m-clearFix();

	margin-bottom: 5px;
	line-height: 1.5;

	&.p-breadcrumbs--bottom
	{
		margin-top: @xf-elementSpacer;
		margin-bottom: 0;
	}

	> li
	{
		float: left;
		margin-right: .5em;
		font-size: @xf-fontSizeSmall;

		a
		{
			display: inline-block;
			vertical-align: bottom;
			max-width: 300px;
			.m-overflowEllipsis();
		}

		&:after,
		&:before
		{
			.m-faBase();
			font-size: 90%;
			color: @xf-textColorMuted;
		}

		&:after
		{
			.m-faContent(@fa-var-angle-right, false ltr);
			.m-faContent(@fa-var-angle-left, false, rtl);
			color: @xf-paletteColor1;
			margin-left: .5em;
		}
		
		&:first-child {
			&:before {
				.m-faContent(@fa-var-home);
				font-size: @xf-fontSizeSmall;
				margin-right: .5em;
			}
		}

		&:last-child
		{
			margin-right: 0;

			a
			{
				font-weight: @xf-fontWeightHeavy;
			}
		}
	}
}

@media (max-width: @xf-responsiveMedium)
{
	.p-breadcrumbs > li a
	{
		max-width: 200px;
	}
}

@media (max-width: @xf-responsiveNarrow)
{
	.p-breadcrumbs
	{
		> li
		{
			display: none;

			&:last-child
			{
				display: block;
			}

			a
			{
				max-width: 90vw;
			}

			&:after
			{
				display: none;
			}

			&:before
			{
				.m-faContent(@fa-var-chevron-left, false, ltr);
				.m-faContent(@fa-var-chevron-right, false, rtl);
				margin-right: .5em;
			}
		}
	}
}]]></template>
    <template title="app_footer.less" type="public" addon_id="XF" version_id="2010270" version_string="2.1.2"><![CDATA[.p-footer
{
}

.p-footer-inner
{
	.m-pageWidth();
	.m-pageInset();
	
	.xf-publicFooter();

	a
	{
		.xf-publicFooterLink();
	}

	padding-top: @xf-paddingLarge;
	padding-bottom: @xf-paddingLarge;
}

.p-footer-row
{
	.m-clearFix();

	margin-bottom: -@xf-paddingLarge;
}

.p-footer-row-main
{
	float: left;
	margin-bottom: @xf-paddingLarge;
}

.p-footer-row-opposite
{
	float: right;
	margin-bottom: @xf-paddingLarge;
}

.p-footer-linkList
{
	.m-listPlain();
	.m-clearFix();

	> li
	{
		float: left;
		margin-right: .5em;

		&:last-child
		{
			margin-right: 0;
		}

		a
		{
			padding: 2px 4px;
			border-radius: @xf-borderRadiusSmall;

			&:hover
			{
				text-decoration: none;
				background-color: fade(@xf-publicFooterLink--color, 10%);
			}
		}
	}
}

.p-footer-rssLink
{
	> span
	{
		position: relative;
		top: -1px;

		display: inline-block;
		width: 1.44em;
		height: 1.44em;
		line-height: 1.44em;
		text-align: center;
		font-size: .8em;
		background-color: #FFA500;
		border-radius: 2px;
	}

	.fa-rss
	{
		color: white;
	}
}

.p-footer-copyright
{
	text-align: center;
	font-size: @xf-fontSizeSmallest;
}

.p-footer-debug
{
	margin-top: @xf-paddingLarge;
	text-align: right;
	font-size: @xf-fontSizeSmallest;

	.pairs > dt { color: inherit; }
}

@media (max-width: @xf-responsiveMedium)
{
	.p-footer-row-main,
	.p-footer-row-opposite
	{
		float: none;
	}

	.p-footer-copyright
	{
		text-align: left;
		padding: 0 4px; // aligns with other links
	}
}]]></template>
    <template title="app_header.less" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[// MAIN HEADER ROW

.p-header
{
	.xf-publicHeader();

	a
	{
		color: inherit;
	}
}

.p-header-inner
{
	.m-pageWidth();
	.m-pageInset();
}

.p-header-content
{
	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;
	align-items: center;
	max-width: 100%;
	padding: 40px 0;
	overflow: hidden;
	
}

.update
{
	cursor: pointer;
	height: 24px;
    transform: translate(50%,-50%);
    text-transform: uppercase;
    font-family: verdana;
	margin-top: -55px;
	margin-right: 12%;
    font-size: 4em;
    font-weight: 700;
    color: #f5f5f5;
    text-shadow: 1px 1px 1px #919191,
        1px 2px 1px #919191,
        1px 3px 1px #919191,
        1px 4px 1px #919191,
        1px 5px 1px #919191,
        1px 6px 1px #919191,
        1px 7px 1px #919191,
        1px 8px 1px #919191,
        1px 9px 1px #919191,
        1px 10px 1px #919191,
    1px 18px 6px rgba(16,16,16,0.4),
    1px 22px 10px rgba(16,16,16,0.2),
    1px 25px 35px rgba(16,16,16,0.2),
    1px 30px 60px rgba(16,16,16,0.4);
}

.p-header-logo
{
	vertical-align: middle;
	margin-right: auto;

	a
	{
		color: inherit;
		text-decoration: none;
	}

	&.p-header-logo--text
	{
		.xf-dt_text_logo_css();
	}

	&.p-header-logo--image
	{
		img
		{
			vertical-align: bottom;
			max-width: {{ property('dt_logo_max_width') }};
			max-height: {{ property('dt_logo_max_height') }};
		}
	}
}

@media (max-width: @xf-publicNavCollapseWidth)
{
	.has-js .p-header
	{
		display: none;
	}
}

@media (max-width: @xf-responsiveNarrow)
{
	.p-header-logo
	{
		max-width: 100px;

		&.p-header-logo--text
		{
			font-size: @xf-fontSizeLarge;
			font-weight: @xf-fontWeightNormal;
			.m-overflowEllipsis();
		}
	}
}]]></template>
    <template title="app_nav.less" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[// navEl / Navigation Elements for header navigation

.m-navElHPadding(@padding)
{
	.p-navEl-link
	{
		padding: 0 @padding;

		&.p-navEl-link--splitMenu
		{
			padding-right: ((@padding) / 4);
		}

		&.p-navEl-link--menuTrigger
		{
			padding-right: ((@padding) / 3); // equal to splitTrigger padding-right

			&:after
			{
				padding-left: ((@padding) / 4 + (@padding) / 3); // equal to splitMenu padding-right + splitTrigger padding-left
			}
		}
	}

	.p-navEl-splitTrigger
	{
		padding: 0 ((@padding) / 3);
	}
}

.p-navEl
{
	.m-clearFix();
}

.p-navEl-linkHolder
{
	float: left;
}

.p-navEl-link
{
	float: left;
	.m-transition(opacity, background; @_nav-elTransitionSpeed);

	&.p-navEl-link--menuTrigger
	{
		cursor: pointer;

		&:after
		{
			.m-menuGadget(); // .58em
			opacity: .5;
			.m-transition(opacity; @_nav-elTransitionSpeed);
		}

		&:hover:after
		{
			opacity: 1;
		}
	}
}

.p-navEl-splitTrigger
{
	float: left;
	opacity: .5;
	cursor: pointer;
	text-decoration: none;
	.m-transition(all; @_nav-elTransitionSpeed);

	&:after
	{
		.m-menuGadget(); // .58em
		line-height: 1;
	}

	&:hover
	{
		opacity: 1;
		text-decoration: none;
	}
}

// HEADER NAV ROW

.p-nav
{
	.p-navSticky.is-sticky &
	{
		.p-nav-list .p-navEl.is-selected,
		.p-account
		{
			border-radius: 0;
		}
	}
}

.p-nav-inner
{
	.m-pageWidth();
	.m-pageInset(0px);
	.m-clearFix();
	display: flex;
	align-items: flex-end;
	
	.xf-publicNav();

	a
	{
		color: inherit;
	}
}

.p-nav .p-nav-menuTrigger
{
	display: none;
	vertical-align: middle;
	align-self: center;
	margin-left: max(0px, @xf-pageEdgeSpacer - 6px);
	margin-right: 5px;
	padding: @xf-publicNavPaddingV 8px;

	&:hover
	{
		text-decoration: none;
	}

	i:after
	{
		.m-faBase();
		font-size: @xf-fontSizeLargest;
		.m-faContent(@fa-var-bars, .88em);
		vertical-align: bottom;
	}

	.p-nav-menuText
	{
		display: none;
	}
}

.p-nav-smallLogo
{
	display: none;
	max-width: 100px;
	align-self: center;

	img
	{
		display: block;
		max-height: @header-navHeight;
	}
}

.p-nav-scroller
{
	margin-right: auto;
	max-width: 100%;

	.hScroller-scroll:not(.is-calculated)
	{
		// IE11 seems to want to flash a vertical scrollbar without this here
		overflow: hidden;
	}

	.hScroller-action
	{
		.m-hScrollerActionColorVariation(
			xf-default(@xf-publicNav--background-color, transparent),
			xf-default(@xf-publicNav--color, ~""),
			xf-intensify(@xf-publicNav--color, 10%)
		);
	}
}

.p-nav-list
{
	.m-listPlain();
	.m-clearFix();

	font-size: 0;

	// this applies padding that will be contained within the scroller.
	// it needs font-size 0 to not create extra space though
	&:before,
	&:after
	{
		display: inline-block;
		width: @xf-pageEdgeSpacer;
		content: '';
	}

	> li
	{
		display: inline-block;
		vertical-align: bottom;
		font-size: @xf-fontSizeNormal;

		&:first-child
		{
			margin-left: 0;
		}
	}

	.m-navElHPadding(@xf-publicNavPaddingH);

	.p-navEl
	{
		.xf-publicNavTab();
		.m-transition(all; @_nav-elTransitionSpeed);

		&.is-selected
		{
			.xf-publicNavSelected();
			background: #378ae7;

			.p-navEl-link
			{
				padding-right: @xf-publicNavPaddingH; // since the split trigger is hidden

				&:hover
				{
					background: none;
					text-decoration: none;
				}
			}

			.p-navEl-splitTrigger
			{
				display: none;
			}
		}

		&:not(.is-selected):not(.is-menuOpen)
		{
			&:hover,
			.p-navEl-link:hover,
			.p-navEl-splitTrigger:hover
			{
				.xf-publicNavTabHover();
			}
		}

		&.is-menuOpen
		{
			.xf-publicNavTabMenuOpen();

			a
			{
				text-decoration: none;
				opacity: 1;
			}
		}
	}

	.p-navEl-link,
	.p-navEl-splitTrigger
	{
		padding-top: @xf-publicNavPaddingV;
		padding-bottom: @xf-publicNavPaddingV;
	}
}

.p-navSticky--primary.is-sticky
{
	.p-nav-list
	{
		.p-navEl-link.p-navEl-link--splitMenu
		{
			padding-right: ((@xf-publicNavPaddingH) / 4);
		}

		.p-navEl.is-selected .p-navEl-splitTrigger
		{
			display: inline;
			background: #005ce1 !important;
		}
	}
}

@media (max-width: @xf-publicNavCollapseWidth)
{
	.has-js
	{
		.p-nav-inner
		{
			background: rgba(31, 35, 38, 0.95);
			min-height: 45px;
			border-radius: 0;
		}

		.p-nav .p-nav-menuTrigger
		{
			display: inline-block;
		}

		.p-nav-smallLogo
		{
			display: inline-block;
			vertical-align: middle;
		}

		.p-nav-scroller
		{
			display: none;
		}
	}
}

// ACCOUNT/VISITOR/SEARCH SECTION

.p-nav-opposite
{
	margin-left: auto;
	text-align: right;
	flex-shrink: 0;
	z-index: 1;
}

.p-navgroup
{
	float: left;
	.m-clearFix();
	color: @xf-textColorEmphasized;
}

.p-navgroup-link
{
	float: left;
	padding: @xf-publicNavPaddingV @_navAccount-hPadding;

	&:hover
	{
		text-decoration: none;
	}

	&.p-navgroup-link--user
	{
		.m-overflowEllipsis();
		min-width: 72px;
		max-width: 150px;
		text-align: center;

		.avatar
		{
			.m-avatarSize(26px);
		}
	}

	&.badgeContainer
	{
		opacity: .6;
		position: relative;

		&:after
		{
			position: absolute;
			left: (@_navAccount-hPadding - 6px);
			top: (@xf-publicNavPaddingV - 2px);
			margin: 0;
			font-size: 10px;
		}

		&:hover,
		&.badgeContainer--highlighted
		{
			opacity: 1;
		}
	}

	&.is-menuOpen
	{
		.xf-publicNavTabMenuOpen();
		opacity: 1;
	}

	&.p-navgroup-link--iconic
	{
		i {
			position: relative;
			
			&:after
			{
				.m-faBase();
				display: inline-block;
				min-width: 1.2em;
				font-size: @xf-fontSizeNormal;
				text-align: center;
			}
		}
	}

	&.p-navgroup-link--conversations i:after
	{
		.m-faContent(@fa-var-envelope, 1em);
	}

	&.p-navgroup-link--alerts i:after
	{
		.m-faContent(@fa-var-bell, 1em);
	}
	
	&.p-navgroup-link--logIn i:after
	{
		.m-faContent(@fa-var-sign-in, 1em);
	}
	
	&.p-navgroup-link--register i:after
	{
		.m-faContent(@fa-var-user-plus, 1em);
	}

	&.p-navgroup-link--bookmarks i:after
	{
		.m-faContent(@fa-var-bookmark, .75em);
	}

	&.p-navgroup-link--whatsnew i:after
	{
		.m-faContent(@fa-var-bolt, .63em);
	}

	&.p-navgroup-link--search i:after
	{
		.m-faContent(@fa-var-search, 1em);
	}
}

.p-navgroup-link--whatsnew
{
	display: none;

	.p-navgroup-link:first-of-type& + .p-navgroup-link
	{
		border-top-left-radius: @xf-borderRadiusMedium;
		border-left: none;
	}
}

@media (max-width: @xf-responsiveWide)
{
	.p-navgroup-link
	{
		&.p-navgroup-link--iconic .p-navgroup-linkText,
		&.p-navgroup-link--textual i
		{
			display: none;
		}

		&.p-navgroup-link--textual
		{
			.m-overflowEllipsis();
			max-width: 110px;
		}

		&.p-navgroup-link--iconic i:after
		{
			text-align: center;
		}
	}
}

@media (max-width: @xf-publicNavCollapseWidth)
{
	.p-navgroup-link--whatsnew
	{
		display: block;
	}

	.has-js
	{
		.p-nav-opposite
		{
			align-self: center;
			margin-right: max(0px, @xf-pageEdgeSpacer - 6px);

			.p-navgroup
			{
				background: none;
				margin-left: 0;
			}

			.p-navgroup-link
			{
				border: none;
				border-radius: @xf-borderRadiusMedium;

				&.is-menuOpen
				{
					.m-borderBottomRadius(0);
				}

				&.badgeContainer
				{
					opacity: 1;
				}
			}
		}
	}
}

@media (max-width: 359px)
{
	.p-navgroup-link&.p-navgroup-link--user
	{
		display: none;
	}
}

@media (max-width: 374px)
{
	.p-navgroup-link.p-navgroup-link--register
	{
		display: none;
	}
}]]></template>
    <template title="app_sectionlinks.less" type="public" addon_id="XF" version_id="2010270" version_string="2.1.2"><![CDATA[// SUB SECTION LINKS

.p-sectionLinks
{
	.hScroller-action
	{
		.m-hScrollerActionColorVariation(
			xf-default(@xf-publicSubNav--background-color, transparent),
			xf-default(@xf-publicSubNav--color, ~""),
			xf-default(@xf-publicSubNavElHover--color, ~"")
		);
	}

	&.p-sectionLinks--empty
	{
		height: 10px;
	}
}

.p-sectionLinks-inner
{
	.m-clearFix();
	.m-pageWidth();

	@defaultPadding:  max(0px, @xf-pageEdgeSpacer - @xf-publicSubNavPaddingH);
	.m-pageInset(@defaultPadding);
	
	.xf-publicSubNav();
}

.p-sectionLinks-list
{
	.m-listPlain();

	font-size: 0;

	a
	{
		color: inherit;
	}

	> li
	{
		display: inline-block;
	}

	.m-navElHPadding(@xf-publicSubNavPaddingH);

	.p-navEl
	{
		font-size: @xf-publicSubNav--font-size;

		&:hover
		{
			.xf-publicSubNavElHover();

			a
			{
				text-decoration: @xf-publicSubNavElHover--text-decoration;
			}
		}

		&.is-menuOpen
		{
			.xf-publicSubNavElMenuOpen();
		}
	}

	.p-navEl-link,
	.p-navEl-splitTrigger
	{
		padding-top: @xf-publicSubNavPaddingV;
		padding-bottom: @xf-publicSubNavPaddingV;
	}
}

@media (max-width: @xf-publicNavCollapseWidth)
{
	.has-js .p-sectionLinks
	{
		display: none;
	}
}]]></template>
    <template title="app_staffbar.less" type="public" addon_id="XF" version_id="2010270" version_string="2.1.2"><![CDATA[// ######################################### STAFF BAR #################################

.p-staffBar
{
	.xf-publicStaffBar();

	a { color: inherit;	}

	.hScroller-action
	{
		.m-hScrollerActionColorVariation(
			xf-default(@xf-publicStaffBar--background-color, transparent),
			xf-default(@xf-publicStaffBar--color, ~""),
			xf-intensify(@xf-publicStaffBar--color, 10%)
		);
	}
}

.p-staffBar-inner
{
	.m-pageWidth();
	.m-pageInset();
	.m-clearFix();

	display: flex;
	align-items: center;
}

.p-staffBar-link
{
	display: inline-block;
	vertical-align: top;
	color: inherit;
	padding: 4px @xf-paddingMedium;
	margin-right: .35em;

	&:last-child
	{
		margin-right: 0;
	}

	&:hover
	{
		text-decoration: none;
		background: xf-diminish(@xf-publicStaffBar--background-color, 6%);
		border-radius: @xf-borderRadiusSmall;
	}
}]]></template>
    <template title="app_stickynav.less" type="public" addon_id="XF" version_id="2010270" version_string="2.1.2"><![CDATA[// STICKY NAV SETUP

.p-navSticky
{
	z-index: @zIndex-1;

	&.is-sticky
	{
		z-index: @zIndex-4;
		.p-nav-inner {
			background: @xf-contentBg;
		}
	}

	@supports (position: sticky) or (position: -webkit-sticky)
	{
		&
		{
			position: -webkit-sticky;
			position: sticky;
			top: 0;

			&.is-sticky-broken,
			&.is-sticky-disabled
			{
				position: static;
				top: auto;
			}
		}
	}
}]]></template>
    <template title="app_user_banners.less" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[.m-userBannerVariation(@color; @bg; @border: false)
{
	color: @color;
	background: @bg;
	border-color: xf-intensify(@bg, 10%);

	& when (iscolor(@border))
	{
		border-color: @border;
	}
}

.userBanner
{
	font-size: 75%;
	font-size: 10px;
	font-weight: @xf-fontWeightNormal;
	font-style: normal;
	padding: 1px @xf-paddingMedium;
	border: 1px solid transparent;
	border-radius: 30px;
	text-align: center;
	display: inline-block;

	strong
	{
		font-weight: inherit;
	}

	// variations
	&.userBanner--hidden
	{
		background: none;
		border: none;
		box-shadow: none;
	}
	&.userBanner--primary
	{
		.m-userBannerVariation(@xf-textColorEmphasized, @xf-paletteColor1, @xf-paletteColor1);
	}

	&.userBanner--accent
	{
		.m-userBannerVariation(@xf-textColorEmphasized, @xf-paletteAccent1, @xf-paletteAccent1);
	}

    &.userBanner--red { .m-userBannerVariation(white, #d80000); }
	&.userBanner--green { .m-userBannerVariation(white, green); }
	&.userBanner--olive { .m-userBannerVariation(white, olive); }
	&.userBanner--lightGreen { .m-userBannerVariation(black, #ccf9c8, #bee8ba); }
	&.userBanner--blue { .m-userBannerVariation(white, #0008e3); }
	&.userBanner--royalBlue { .m-userBannerVariation(white, royalblue); }
	&.userBanner--skyBlue { .m-userBannerVariation(white, #7cc3e0); }
	&.userBanner--gray { .m-userBannerVariation(white, gray); }
	&.userBanner--silver { .m-userBannerVariation(black, silver); }
	&.userBanner--yellow { .m-userBannerVariation(black, #ffff91, #e6e687); }
	&.userBanner--orange { .m-userBannerVariation(black, #ffcb00); }
	&.userBanner--purple { .m-userBannerVariation(white, #a000a0); }
	&.userBanner--blackbly { .m-userBannerVariation(white, #6642cc); }
	&.userBanner--staff { .m-userBannerVariation(white, black); }
	&.userBanner--tx { .m-userBannerVariation(white, #0095dd, #bee8ba); }
	&.userBanner--leader { .m-userBannerVariation(black, #fc9a2b); }
	&.userBanner--3lvl { .m-userBannerVariation(black, #ffcb00); }
	&.userBanner--4lvl { .m-userBannerVariation(white, #1f7e28); }
	&.userBanner--6lvl { .m-userBannerVariation(black, #87ed8b); }
	&.userBanner--odin { .m-userBannerVariation(white, #2b3260); }
	&.userBanner--poseidon { .m-userBannerVariation(white, #7045b1); }
	&.userBanner--discord { .m-userBannerVariation(white, #7289da); }
}

.gradientBanner {
	font-weight: @xf-fontWeightNormal;
	font-style: normal;
	padding: 1px @xf-paddingMedium;
	border: 1px solid transparent;
	border-radius: @xf-borderRadiusSmall;
	text-align: center;
	display: inline-block;
}

.gradientBanner--bot {
	color: white;
	border: none;
	box-shadow: none;
	background-size: 300% 20%;
	background-image: -webkit-linear-gradient(left, #0095dd, #f1094b);
	background-image: -moz-linear-gradient(left, #0095dd, #f1094b);
	background-image: linear-gradient(90deg, #0095dd 0%, #f1094b 100%);
	animation: animation 3s ease infinite;
}]]></template>
    <template title="approval_item_profile_post" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[<xf:macro template="approval_queue_macros" name="item_message_type"
	arg-content="{$content}"
	arg-user="{$content.User}"
	arg-messageHtml="{{ bb_code($content.message, 'profile_post', $content) }}"
	arg-typePhraseHtml="{{ phrase('profile_post') }}"
	arg-spamDetails="{$spamDetails}"
	arg-unapprovedItem="{$unapprovedItem}"
	arg-handler="{$handler}"
	arg-headerPhraseHtml="{{ phrase('posted_on_profile_x', {
		'profilePostLink': link('profile-posts', $content),
		'user': $content.ProfileUser.username
	}) }}"/>]]></template>
    <template title="approval_item_user" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<xf:set var="$userIp" value="{{ $user.getIp('register') }}" />
<xf:set var="$headerPhraseHtml"><xf:trim>
	<xf:if is="$xf.visitor.canViewIps() AND $userIp">
		<a href="{{ link('misc/ip-info', null, {'ip': $userIp|ip}) }}" target="_blank">{$userIp|ip}</a>
	</xf:if>
	<xf:if is="$xf.visitor.canBypassUserPrivacy() AND $user.email">
		{$user.email}
	</xf:if>
</xf:trim></xf:set>

<xf:set var="$messageHtml"><xf:trim>

	<xf:macro template="custom_fields_macros" name="custom_fields_view"
		arg-type="users" arg-group="{{ null }}"
		arg-set="{$user.Profile.custom_fields}"
		arg-additionalFilters="{{ ['registration'] }}" />

	<xf:if is="$changesGrouped">
		<br />
		<xf:datalist data-xf-init="responsive-data-list" class="dataList--separated">
			<thead>
			<xf:datarow rowtype="subSection">
				<xf:cell colspan="3">{{ phrase('change_log') }}</xf:cell>
			</xf:datarow>
			<xf:datarow rowtype="header">
				<xf:cell>{{ phrase('field_name') }}</xf:cell>
				<xf:cell>{{ phrase('old_value') }}</xf:cell>
				<xf:cell>{{ phrase('new_value') }}</xf:cell>
			</xf:datarow>
			</thead>
			<xf:foreach loop="$changesGrouped" value="$group">
				<tbody class="dataList-rowGroup">
				<xf:foreach loop="$group.changes" value="$change">
					<xf:datarow>
						<xf:cell>{$change.label}</xf:cell>
						<xf:cell>{$change.old}</xf:cell>
						<xf:cell>{$change.new}</xf:cell>
					</xf:datarow>
				</xf:foreach>
				</tbody>
			</xf:foreach>
		</xf:datalist>
	</xf:if>

</xf:trim></xf:set>

<xf:set var="$actionsHtml">

	<xf:radio name="queue[{$unapprovedItem.content_type}][{$unapprovedItem.content_id}]">

		<xf:option value="" checked="checked" label="{{ phrase('do_nothing') }}" data-xf-click="approval-control" />
		<xf:option value="approve" label="{{ phrase('approve') }}" data-xf-click="approval-control" />
		<xf:if is="$unapprovedItem.Content.isPossibleSpammer()">
			<xf:option value="spam_clean" label="{{ phrase('spam_clean') }}" data-xf-click="approval-control" />
		</xf:if>
		<xf:option value="reject" label="{{ phrase('reject_with_reason:') }}"
			title="{{ phrase('rejected_users_will_not_be_deleted_user_state_will_be_set_to_rejected') }}"
			data-xf-init="tooltip"
			data-xf-click="approval-control">
			<xf:textbox name="reason[{$unapprovedItem.content_type}][{$unapprovedItem.content_id}]"
				maxlength="{{ max_length('XF:UserReject', 'reject_reason') }}"
				placeholder="{{ phrase('optional') }}" />
			<xf:html>
				<div class="formRow-explain"></div>
			</xf:html>
		</xf:option>
	</xf:radio>

	<xf:checkbox>
		<xf:option name="notify[{$unapprovedItem.content_type}][{$unapprovedItem.content_id}]" value="1" checked="{{ !$spamDetails }}">
			{{ phrase('notify_user_if_action_was_taken') }}
		</xf:option>
	</xf:checkbox>

</xf:set>

<xf:macro template="approval_queue_macros" name="item_message_type"
	arg-content="{$content}"
	arg-contentDate="{$user.register_date}"
	arg-user="{$user}"
	arg-messageHtml="{$messageHtml}"
	arg-typePhraseHtml="{{ phrase('user') }}"
	arg-actionsHtml="{$actionsHtml}"
	arg-spamDetails="{$spamDetails}"
	arg-headerPhraseHtml="{$headerPhraseHtml}"/>]]></template>
    <template title="bookmark_macros" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<xf:macro name="link"
	arg-content="!"
	arg-confirmUrl="!"
	arg-editText="{{ phrase('edit_bookmark') }}"
	arg-addText="{{ phrase('add_bookmark') }}"
	arg-showText="{{ true }}"
	arg-class="actionBar-action actionBar-action--bookmarkLink">

	<xf:if is="$content.canBookmark()">
		<a href="{$confirmUrl}" class="bookmarkLink {$class} {{ $content.isBookmarked() ? 'is-bookmarked' : '' }}"
			title="{{ $showText ? '' : phrase('bookmark')|for_attr }}"
			data-xf-click="bookmark-click"
			data-label=".js-bookmarkText"
			data-sk-bookmarked="addClass:is-bookmarked, {$editText|for_attr}"
			data-sk-bookmarkremoved="removeClass:is-bookmarked, {$addText|for_attr}"><xf:trim>
			<span class="js-bookmarkText {{ $showText ? '' : 'u-srOnly' }}"><xf:if is="$content.isBookmarked()">{$editText}<xf:else/>{$addText}</xf:if></span>
		</xf:trim></a>
	</xf:if>
</xf:macro>

<xf:macro name="button"
	arg-content="!"
	arg-confirmUrl="!"
	arg-class="button--link"
	arg-showText="{{ false }}"
	arg-editText="{{ phrase('edit_bookmark') }}"
	arg-addText="{{ phrase('add_bookmark') }}">

	<xf:if is="$content.canBookmark()">
		<xf:button href="{$confirmUrl}" icon="bookmark" class="{{ $showText ? '' : 'button--iconOnly' }} {$class} {{ $content.isBookmarked() ? 'is-bookmarked' : '' }}"
			title="{{ $showText ? '' : phrase('bookmark') }}"
			data-xf-click="bookmark-click"
			data-label=".js-bookmarkText"
			data-sk-bookmarked="addClass:is-bookmarked, {$editText}"
			data-sk-bookmarkremoved="removeClass:is-bookmarked, {$addText}"><xf:trim>
			<span class="js-bookmarkText {{ $showText ? '' : 'u-srOnly' }}"><xf:if is="$content.isBookmarked()">{$editText}<xf:else/>{$addText}</xf:if></span>
		</xf:trim></xf:button>
	</xf:if>
</xf:macro>

<xf:macro name="row"
	arg-bookmark="!"
	arg-content="!">

	<div class="contentRow">
		<xf:if is="$bookmark.has_custom_icon">
			{$bookmark.renderCustomIcon()|raw}
		<xf:elseif is="$bookmark.content_user" />
			<div class="contentRow-figure contentRow-figure--fixedBookmarkIcon">
				<xf:avatar user="$bookmark.content_user" href="" size="s" defaultname="{$bookmark.content_user.username}" />
			</div>
		</xf:if>

		<div class="contentRow-main">
			<xf:macro name="item_buttons" arg-bookmark="{$bookmark}" />

			<div class="contentRow-title">
				<a href="{$bookmark.content_link}">{$bookmark.content_title}</a>
			</div>

			<div class="contentRow-snippet">
				<xf:if is="$bookmark.message">
					{{ structured_text($bookmark.message) }}
				<xf:else />
					<xf:if contentcheck="true">
						<xf:contentcheck>
							{$bookmark.renderMessageFallback()|raw}
						</xf:contentcheck>
					<xf:else />
						{{ phrase('no_bookmark_note') }}
					</xf:if>
				</xf:if>
			</div>

			<xf:macro name="item_footer"
				arg-bookmark="{$bookmark}"
				arg-content="{$content}" />
		</div>
	</div>
</xf:macro>

<xf:macro name="item_buttons" arg-bookmark="!">

	<div class="contentRow-extra">
		<xf:button class="button--link button--smaller menuTrigger"
			data-xf-click="menu"
			aria-label="{{ phrase('more_options') }}"
			aria-expanded="false"
			aria-haspopup="true">
			<xf:fa icon="fa-cog" />
		</xf:button>

		<div class="menu" data-menu="menu" aria-hidden="true">
			<div class="menu-content">
				<h3 class="menu-header">{{ phrase('bookmark_tools') }}</h3>
				<a class="menu-linkRow" role="button" tabindex="0" data-menu-closer="on" data-xf-init="copy-to-clipboard" data-copy-text="{$bookmark.content_link}">{{ phrase('copy_link') }}</a>
				<a href="{$bookmark.edit_link}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('edit') }}</a>
				<a href="{$bookmark.delete_link}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('delete') }}</a>
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="item_footer" arg-bookmark="!" arg-content="!">
	<div class="contentRow-minor contentRow-minor--hideLinks contentRow-minor--smaller">
		<ul class="listInline listInline--bullet">
			<xf:if is="$bookmark.content_user OR $content.isValidKey('username')">
				<li>
					<xf:fa icon="fa-user" title="{{ phrase('user') }}" />
					<span class="u-srOnly">{{ phrase('user') }}</span>
					<xf:username user="{$bookmark.content_user}" defaultname="{{ $content.isValidKey('username') ? $content.username : '' }}" rich="true" />
				</li>
			</xf:if>
			<li>
				<xf:fa icon="fa-clock" title="{{ phrase('bookmarked') }}" />
				<span class="u-srOnly">{{ phrase('bookmarked') }}</span>
				<xf:date time="$bookmark.bookmark_date" />
			</li>
			<xf:if is="$bookmark.labels">
				<li class="tagList">
					<span class="u-srOnly">{{ phrase('labels') }}</span>
					<xf:foreach loop="$bookmark.labels" value="$label">
						<a href="{{ link('account/bookmarks', null, {'label': $label.label}) }}" class="tagItem" dir="auto">{$label.label}</a>
					</xf:foreach>
				</li>
			</xf:if>
		</ul>
	</div>
</xf:macro>

<xf:macro name="filter"
	arg-label="{$label}"
	arg-allLabels="{{ [] }}"
	arg-name="labels"
	arg-minLength="0"
	arg-maxTokens="1"
	arg-placeholder="{{ phrase('filter_by_label...') }}">
	<xf:tokeninput inputclass="js-labelFilter"
		name="{$name}"
		value="{$label}"
		min-length="{$minLength}"
		max-tokens="{$maxTokens}"
		list-data="{$allLabels|json}"
		placeholder="{$placeholder}" />
</xf:macro>]]></template>
    <template title="conversation_list_macros" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<xf:macro name="item"
	arg-userConv="!"
	arg-allowInlineMod="{{ true }}">

	<xf:css src="structured_list.less" />

	<div class="structItem structItem--conversation {{ $userConv.isUnread() ? 'is-unread' : '' }} js-inlineModContainer" data-author="{{ $userConv.Master.Starter.username ?: $userConv.Master.username }}">
		<div class="structItem-cell structItem-cell--icon">
			<div class="structItem-iconContainer">
				<xf:avatar user="$userConv.Master.Starter" size="s" defaultname="{$userConv.Master.username}" />
			</div>
		</div>
		<div class="structItem-cell structItem-cell--main" data-xf-init="touch-proxy">
			<xf:if contentcheck="true">
				<ul class="structItem-statuses">
				<xf:contentcheck>
					<xf:if is="$userConv.is_starred">
						<li>
							<i class="structItem-status structItem-status--starred" aria-hidden="true" title="{{ phrase('starred')|for_attr }}"></i>
							<span class="u-srOnly">{{ phrase('starred') }}</span>
						</li>
					</xf:if>
					<xf:if is="!$userConv.Master.conversation_open">
						<li>
							<i class="structItem-status structItem-status--locked" aria-hidden="true" title="{{ phrase('locked')|for_attr }}"></i>
							<span class="u-srOnly">{{ phrase('locked') }}</span>
						</li>
					</xf:if>
				</xf:contentcheck>
				</ul>
			</xf:if>

			<a href="{{ link('conversations/unread', $userConv) }}" class="structItem-title" data-tp-primary="on">{$userConv.title}</a>

			<div class="structItem-minor">
				<xf:if contentcheck="true">
					<ul class="structItem-extraInfo">
					<xf:contentcheck>
						<xf:if is="$allowInlineMod">
							<li><xf:checkbox standalone="true">
								<xf:option value="{$userConv.conversation_id}" class="js-inlineModToggle" />
							</xf:checkbox></li>
						</xf:if>
					</xf:contentcheck>
					</ul>
				</xf:if>

				<ul class="structItem-parts">
					<li>
						<ul class="listInline listInline--comma listInline--selfInline">
							<li><xf:username user="$userConv.Master.Starter" rich="true" defaultname="{$userConv.Master.username}" title="{{ phrase('conversation_starter') }}" /></li><xf:trim>
							</xf:trim><xf:foreach loop="$userConv.Master.recipients" value="$recipient" if="{$recipient.user_id} != {$userConv.Master.user_id}"><xf:trim>
								<li><xf:username user="{$recipient}" rich="true" defaultname="{{ phrase('unknown_member') }}" /></li>
							</xf:trim></xf:foreach>
						</ul>
					</li>
					<li class="structItem-startDate"><a href="{{ link('conversations', $userConv) }}" rel="nofollow"><xf:date time="{$userConv.Master.start_date}" /></a></li>
				</ul>

				<xf:if is="$userConv.reply_count >= $xf.options.messagesPerPage">
					<span class="structItem-pageJump">
					<xf:foreach loop="{{ last_pages($userConv.reply_count + 1, $xf.options.messagesPerPage, $xf.options.lastPageLinks) }}" value="$p">
						<a href="{{ link('conversations', $userConv, {'page': $p}) }}">{$p}</a>
					</xf:foreach>
					</span>
				</xf:if>
			</div>
		</div>
		<div class="structItem-cell structItem-cell--meta">
			<dl class="pairs pairs--justified">
				<dt>{{ phrase('replies') }}</dt>
				<dd>{$userConv.reply_count|number}</dd>
			</dl>
			<dl class="pairs pairs--justified structItem-minor">
				<dt>{{ phrase('participants') }}</dt>
				<dd>{$userConv.Master.recipient_count|number}</dd>
			</dl>
		</div>
		<div class="structItem-cell structItem-cell--latest">
			<a href="{{ link('conversations/latest', $userConv) }}" rel="nofollow"><xf:date time="{$userConv.last_message_date}" class="structItem-latestDate" /></a>
			<div class="structItem-minor"><xf:username user="{$userConv.Master.last_message_cache}" /></div>
		</div>
	</div>
</xf:macro>]]></template>
    <template title="conversation_view" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<xf:title page="{$page}">{$conversation.title}</xf:title>

<xf:description meta="false">
	<ul class="listInline listInline--bullet">
		<li>
			<xf:fa icon="fa-users" title="{{ phrase('participants')|for_attr }}" />
			<span class="u-srOnly">{{ phrase('participants') }}</span>

			<ul class="listInline listInline--selfInline listInline--comma">
				<li><xf:username user="$conversation.Starter" rich="true" defaultname="{$conversation.username}" title="{{ phrase('conversation_starter') }}" href="" /></li><xf:trim>
				</xf:trim><xf:foreach loop="$conversation.recipients" value="$recipient" if="{$recipient.user_id} != {$conversation.user_id} AND $i < 4" i="$i"><xf:trim>
					<li><xf:username user="{$recipient}" rich="true" defaultname="{{ phrase('unknown_member') }}" href="" /></li>
				</xf:trim></xf:foreach>
			</ul>
			<xf:if is="$conversation.recipient_count > 5">
				{{ phrase('ellipsis_and_x_more', {'count': ($conversation.recipient_count - 5)|number}) }}
			</xf:if>
		</li>
		<li>
			<xf:fa icon="fa-clock" title="{{ phrase('start_date')|for_attr }}" />
			<span class="u-srOnly">{{ phrase('start_date') }}</span>

			<a href="{{ link('conversations', $conversation) }}" class="u-concealed"><xf:date time="{$conversation.start_date}" /></a>
		</li>
	</ul>
</xf:description>

<xf:breadcrumb href="{{ link('conversations') }}">{{ phrase('conversations') }}</xf:breadcrumb>

<xf:sidebar key="conversationInfo">
	<div class="block">
		<div class="block-container">
			<h3 class="block-minorHeader">{{ phrase('conversation_info') }}</h3>
			<div class="block-body block-row block-row--minor">
				<dl class="pairs pairs--justified"><dt>{{ phrase('participants') }}</dt> <dd>{$conversation.recipient_count|number}</dd></dl>
				<dl class="pairs pairs--justified"><dt>{{ phrase('replies') }}</dt> <dd>{$conversation.reply_count|number}</dd></dl>
				<dl class="pairs pairs--justified"><dt>{{ phrase('last_reply_date') }}</dt> <dd><xf:date time="$conversation.last_message_date" /></dd></dl>
				<dl class="pairs pairs--justified"><dt>{{ phrase('last_reply_from') }}</dt> <dd><xf:username user="$conversation.LastMessageUser" /></dd></dl>
			</div>
		</div>
	</div>
</xf:sidebar>

<xf:sidebar key="conversationParticipants">
	<div class="block">
		<div class="block-container">
			<h3 class="block-minorHeader">{{ phrase('conversation_participants') }}</h3>
			<ol class="block-body">
				<xf:foreach loop="$recipients" value="$recipient">
					<li class="block-row">
						<div class="contentRow">
							<xf:if is="$recipient.User">
								<div class="contentRow-figure">
									<xf:avatar user="$recipient.User" size="xs" />
								</div>
								<div class="contentRow-main">
									<xf:username user="$recipient.User" rich="true" />
									<div class="contentRow-minor"><xf:usertitle user="$recipient.User" /></div>
								</div>
							<xf:else />
								<div class="contentRow-figure">
									<xf:avatar user="{{ null }}" size="xs" />
								</div>
								<div class="contentRow-main">
									{{ phrase('unknown_member') }}
								</div>
							</xf:if>
						</div>
					</li>
				</xf:foreach>
			</ol>
			<xf:if is="$conversation.canInvite()">
				<div class="block-footer">
					<span class="block-footer-controls">
						<a href="{{ link('conversations/invite', $conversation) }}" data-xf-click="overlay">{{ phrase('invite_more') }}</a>
					</span>
				</div>
			</xf:if>
		</div>
	</div>
</xf:sidebar>

<div class="block block--messages">
	<div class="block-outer">
		<xf:pagenav
			page="{$page}" perpage="{$perPage}" total="{{ $conversation.reply_count + 1 }}"
			link="conversations" data="{$conversation}"
			wrapperclass="block-outer-main" />
		<div class="block-outer-opposite">
			<div class="buttonGroup">
				<xf:if is="$conversation.canEdit()">
					<xf:button href="{{ link('conversations/edit', $conversation) }}" class="button--link"
						icon="edit" overlay="true" />
				</xf:if>
				<xf:button href="{{ link('conversations/star', $conversation) }}" class="button--link"
					data-xf-click="switch"
					data-sk-star="{{ phrase('star') }}"
					data-sk-unstar="{{ phrase('unstar') }}">
					{{ {$userConv.is_starred} ? phrase('unstar') : phrase('star') }}
				</xf:button>
				<xf:button href="{{ link('conversations/mark-unread', $conversation) }}" class="button--link"
					data-xf-click="switch"
					data-sk-read="{{ phrase('mark_read') }}"
					data-sk-unread="{{ phrase('mark_unread') }}">
					{{ {$userConv.is_unread} ? phrase('mark_read') : phrase('mark_unread') }}
				</xf:button>
				<xf:button href="{{ link('conversations/leave', $conversation) }}" class="button--link" overlay="true">
					{{ phrase('leave') }}
				</xf:button>
			</div>
		</div>
	</div>

	<div class="block-container lbContainer"
		data-xf-init="lightbox{{ $xf.options.selectQuotable ? ' select-to-quote' : '' }}"
		data-message-selector=".js-message"
		data-lb-id="conversation-{$conversation.conversation_id}"
		data-lb-universal="{$xf.options.lightBoxUniversal}">

		<div class="block-body js-replyNewMessageContainer">
			<xf:foreach loop="$messages" value="$message">
				<xf:macro template="conversation_message_macros" name="message"
					arg-message="{$message}" arg-conversation="{$conversation}"
					arg-lastRead="{$lastRead}" />
			</xf:foreach>
		</div>
	</div>

	<div class="block-outer block-outer--after">
		<xf:pagenav
			page="{$page}" perpage="{$perPage}" total="{{ $conversation.reply_count + 1 }}"
			link="conversations" data="{$conversation}"
			wrapperclass="block-outer-main" />
		<xf:showignored wrapperclass="block-outer-opposite" />
	</div>

	<xf:if is="!$conversation.conversation_open">
		<div class="block-outer block-outer--after">
			<dl class="blockStatus">
				<dt>{{ phrase('status') }}</dt>
				<dd class="blockStatus-message blockStatus-message--locked">
					{{ phrase('this_conversation_is_closed_for_new_replies') }}
				</dd>
			</dl>
		</div>
	</xf:if>
</div>

<xf:if is="$conversation.canReply()">
	<xf:form action="{{ link('conversations/add-reply', $conversation) }}"
		ajax="true"
		draft="{{ link('conversations/draft', $conversation) }}"
		class="block js-quickReply"
		data-xf-init="attachment-manager quick-reply"
		data-preview-url="{{ link('conversations/reply-preview', $conversation, {'quick_reply': 1}) }}">

		<xf:js src="xf/message.js" min="1" />
		<xf:set var="$lastMessage" value="{$messages|last}" />

		<div class="block-container">
			<div class="block-body">
				<xf:macro template="quick_reply_macros" name="body"
					arg-message="{$conversation.draft_reply.message}"
					arg-attachmentData="{$attachmentData}"
					arg-forceHash="{$conversation.draft_reply.attachment_hash}"
					arg-messageSelector=".js-message"
					arg-supportsMultiQuote="{$xf.options.multiQuote}"
					arg-multiQuoteHref="{{ link('conversations/multi-quote', $conversation) }}"
					arg-multiQuoteStorageKey="multiQuoteConversation"
					arg-lastDate="{$lastMessage.message_date}" />
			</div>
		</div>
	</xf:form>
</xf:if>

<xf:widgetpos id="conversation_view_sidebar" context-conversation="{$conversation}" position="sidebar" />]]></template>
    <template title="conversations_popup" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<xf:if is="$unreadConversations is not empty OR $readConversations is not empty">
	<div class="menu-scroller">
		<ol class="listPlain">
			<xf:foreach loop="$unreadConversations" value="$userConv">
				<xf:macro name="popup_item" arg-userConv="{$userConv}" />
			</xf:foreach>
			<xf:foreach loop="$readConversations" value="$userConv">
				<xf:macro name="popup_item" arg-userConv="{$userConv}" />
			</xf:foreach>
		</ol>
	</div>
<xf:else />
	<div class="menu-row">{{ phrase('you_have_no_recent_conversations') }}</div>
</xf:if>

<xf:macro name="popup_item" arg-userConv="!">
	<li class="menu-row menu-row--separated menu-row--clickable {{ $userConv.isUnread() ? 'menu-row--highlighted' : '' }}">
		<div class="fauxBlockLink">
			<div class="contentRow">
				<div class="contentRow-figure">
					<xf:avatar user="$userConv.Master.LastMessageUser" size="xxs" defaultname="{$userConv.Master.last_message_username}" />
				</div>
				<div class="contentRow-main contentRow-main--close">
					<a href="{{ link('conversations/unread', $userConv) }}" class="fauxBlockLink-blockLink">{$userConv.Master.title}</a>
					<div class="contentRow-minor contentRow-minor--smaller contentRow-minor--hideLinks">
						{{ phrase('with_people:') }}
						<ul class="listInline listInline--selfInline listInline--comma">
							<li><xf:username user="$userConv.Master.Starter" rich="true" defaultname="{$userConv.Master.username}" title="{{ phrase('conversation_starter') }}" href="" /></li><xf:trim>
							</xf:trim><xf:foreach loop="$userConv.Master.recipients" value="$recipient" if="{$recipient.user_id} != {$userConv.Master.user_id}"><xf:trim>
								<li><xf:username user="{$recipient}" rich="true" defaultname="{{ phrase('unknown_member') }}" href="" /></li>
							</xf:trim></xf:foreach>
						</ul>
					</div>
					<div class="contentRow-minor contentRow-minor--smaller">
						<xf:date time="$userConv.Master.last_message_date" />
					</div>
				</div>
			</div>
		</div>
	</li>
</xf:macro>]]></template>
    <template title="core.less" type="public" addon_id="XF" version_id="2010070" version_string="2.1.0"><![CDATA[// ########################## GLOBAL BASE SETUP #######################

html
{
	font: @xf-fontSizeNormal / @xf-lineHeightDefault sans-serif;
	font-family: @xf-fontFamilyUi;
	font-weight: @xf-fontWeightNormal;
	color: @xf-textColor;
	margin: 0;
	padding: 0;
	word-wrap: break-word;
	background-color: @xf-pageBg;

	/* // just a reminder that we *might* want this at some point
	-ms-text-size-adjust: none;
	-webkit-text-size-adjust: none;*/
}

button, input, optgroup, select, textarea
{
	font-family: @xf-fontFamilyUi;
	line-height: @xf-lineHeightDefault;
}

img
{
	max-width: 100%;
	height: auto;
}

b, strong
{
	font-weight: @xf-fontWeightHeavy;
}

a
{
	.xf-link();

	&:hover
	{
		.xf-linkHover();
	}
}

{{ include('core_setup.less') }}
{{ include('core_utilities.less') }}
{{ include('core_list.less') }}
{{ include('core_categorylist.less') }}
{{ include('core_block.less') }}
{{ include('core_blockmessage.less') }}
{{ include('core_blockstatus.less') }}
{{ include('core_blocklink.less') }}
{{ include('core_blockend.less') }}
{{ include('core_fixedmessage.less') }}
{{ include('core_button.less') }}
{{ include('core_meter_bar.less') }}

// ################################# INPUTS & FORMS #####################

.m-formElementExplain()
{
	display: block;
	font-style: normal;
	.xf-formExplain();

	.m-textColoredLinks();
}

{{ include('core_input.less') }}
{{ include('core_formrow.less') }}

{{ include('core_collapse.less') }}
{{ include('core_badge.less') }}
{{ include('core_tooltip.less') }}
{{ include('core_menu.less') }}
{{ include('core_offcanvas.less') }}
{{ include('core_tab.less') }}
{{ include('core_overlay.less') }}
{{ include('core_globalaction.less') }}
{{ include('core_avatar.less') }}
{{ include('core_datalist.less') }}
{{ include('core_filter.less') }}
{{ include('core_contentrow.less') }}
{{ include('core_pagenav.less') }}
{{ include('core_hscroller.less') }}

// FLASH MESSAGES
.flashMessage
{
	display: none;
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	z-index: @zIndex-9;
	.xf-flashMessage();

	.m-transitionFadeDown();
}

// AUTOCOMPLETE
.autoCompleteList
{
	.m-autoCompleteList();
	margin-top: 2px;
}

// #################################### TAGS ##############################
// note that while this is related to tags, it's commonly used so just include it

.tagList,
.tagList > dt,
.tagList > dd
{
	display: inline;
	padding: 0;
	margin: 0;
}

.tagItem
{
	display: inline-block;
	max-width: 100%;
	padding: 0 6px 1px;
	margin: 0 0 2px;
	border-radius: @xf-borderRadiusMedium;
	font-size: @xf-fontSizeSmaller;
	.xf-chip();

	&:hover
	{
		text-decoration: none;
		color: @xf-chip--color;
		.xf-chipHover();
	}
}

// ############################# MISC #########################

.recaptcha
{
	&.input
	{
		box-sizing: content-box;
		max-width: 100%;
	}

	img
	{
		max-width: 100%;
	}
}

.likesBar
{
	.m-transitionFadeDown();
	.xf-minorBlockContent();
	border-left: @xf-borderSizeMinorFeature solid @xf-borderColorFeature;
	padding: @xf-paddingMedium;
	font-size: @xf-fontSizeSmaller;
	margin-top: @xf-paddingMedium;
}

.likeIcon
{
	&:before
	{
		.m-faBase();
		.m-faContent(@fa-var-thumbs-up, 1em);
		color: @xf-textColorFeature;
		margin-right: .2em;
	}
}

.reactionsBar
{
	.m-transitionFadeDown();
	.xf-minorBlockContent();
	border-left: @xf-borderSizeMinorFeature solid @xf-borderColorFeature;
	padding: @xf-paddingMedium;
	font-size: @xf-fontSizeSmaller;
	margin-top: @xf-paddingMedium;
}

.reactionSummary
{
	display: inline-block;
	.m-listPlain();
	line-height: 16px;
	height: 16px;
	margin: 0 -2px;
	vertical-align: text-top;

	> li
	{
		display: inline-block;
		height: 20px;
		width: 20px;
		padding: 2px;
		margin: -2px 0;
		background: @xf-contentBg;
		border-radius: 50%;
		position: relative;
		margin-left: -6px;

		&:nth-child(1)
		{
			z-index: 3;
			margin-left: 0;
		}

		&:nth-child(2)
		{
			z-index: 2;
		}

		&:nth-child(3)
		{
			z-index: 1;
		}
	}

	.reaction
	{
		position: absolute;
		top: 0;

		&.reaction
		{
			// increase specificity to override .reaction.reaction--<size>
			display: block;
		}
	}
}

.reactionsBar,
.message-responseRow
{
	.reactionSummary
	{
		> li
		{
			background: @xf-contentAltBg;
		}

		.reaction
		{
			top: 2px;
		}
	}
}

.reactTooltip
{
	padding: 0;
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
	max-width: 100%;

	.reaction
	{
		margin: @xf-paddingSmall;
		.m-transition(transform);

		&:hover
		{
			.m-transform(scale(1.2));
		}
	}
}

.colorChip
{
	display: inline-block;
	border: @xf-borderSize solid @xf-borderColor;
	border-radius: @xf-borderRadiusMedium;
	padding: 1px;
	width: 100px;
}

.colorChip-inner
{
	display: block;
	background-color: transparent;
	border-radius: @xf-borderRadiusSmall;
	height: 1em;
}

.colorChip-value
{
	display: none;
}

pre.sf-dump
{
	// not ideal, but then again neither is the default of 99999...
	z-index: @zIndex-1 !important;
}

.grecaptcha-badge
{
	z-index: @zIndex-5;
}

// Bookmarking links for 2.1
.bookmarkLink
{
	&:before
	{
		.m-faBase();
		.m-faContent(@fa-var-bookmark);
		font-weight: min(@xf-fontAwesomeWeight, @faWeight-regular);
	}
	&.is-bookmarked
	{
		&:before
		{
			font-weight: @faWeight-solid;
		}
	}

	&.bookmarkLink--highlightable.is-bookmarked
	{
		color: @xf-textColorAttention;

		&:hover
		{
			color: @xf-textColorAccentContent;
		}
	}

	span
	{
		margin-left: .35em;
	}
}

.dragHandle
{
	cursor: move;

	&:before
	{
		.m-faBase();
		.m-faContent(@fa-var-bars);
	}

	.is-undraggable &
	{
		visibility: hidden;
		cursor: default;
	}
}

{{ include('core_action_bar.less') }}
{{ include('core_labels.less') }}
{{ include('core_pikaday.less') }}
{{ include('core_reaction.less') }}
{{ include('core_smilie.less') }}
{{ include('core_bbcode.less') }}
{{ include('core_fa.less') }}
{{ include('core_dt_extra.less') }}
{{ include('core_dt_proprties.less') }}
{{ include('dt_extra.less') }}

// RESOLUTION OUTPUT

.debugResolution
{
	.debugResolution-output:before
	{
		content: "Full @{xf-responsiveWide} - @{xf-pageWidthMax}";
		@media (min-width: @xf-pageWidthMax) { content: "Max > @{xf-pageWidthMax}"; }
		@media (max-width: @xf-responsiveWide) { content: "Wide < @{xf-responsiveWide}"; }
		@media (max-width: @xf-responsiveMedium) { content: "Medium < @{xf-responsiveMedium}"; }
		@media (max-width: @xf-responsiveNarrow) { content: "Narrow < @{xf-responsiveNarrow}"; }
	}
}]]></template>
    <template title="core_badge.less" type="public" addon_id="XF" version_id="2000470" version_string="2.0.4"><![CDATA[// #################################################### BADGES ###########################

.badge,
.badgeContainer:after
{
	display: inline-block;
	min-width: 12px;
	height: 16px;
	line-height: 16px;
	font-size: 80%;
	text-align: center;
	white-space: nowrap;
	word-wrap: normal;
	font-weight: @xf-fontWeightNormal;
	padding: 0 2px;
	margin: -2px 0;
	.xf-badge();
}

.badgeContainer
{
	&:after
	{
		content: attr(data-badge);
		display: none;
	}

	&.badgeContainer--visible:after
	{
		display: inline-block;
	}
}

.badge.badge--highlighted,
.badgeContainer.badgeContainer--highlighted:after
{
	display: inline-block;
	.xf-badgeHighlighted();
}]]></template>
    <template title="core_bbcode.less" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[.bbWrapper
{
	// This approach is needed to normalize browser differences that normalize.css won't handle within BB code/rich text
	// sections. You may need higher specificity to override some situations because of this.
	white-space: initial;
	ol:not(.is-structureList),
	ul:not(.is-structureList)
	{
		margin-top: 1em;
		margin-bottom: 1em;
		overflow: hidden;
	}

	ol:not(.is-structureList) ol:not(.is-structureList),
	ol:not(.is-structureList) ul:not(.is-structureList),
	ul:not(.is-structureList) ol:not(.is-structureList),
	ul:not(.is-structureList) ul:not(.is-structureList)
	{
		margin-top: 0;
		margin-bottom: 0;
	}
}

.bbImage
{
	max-width: 100%;
}

// classes to handle images being floated left and right via BB code attributes
.bbImage,
.lbContainer--inline
{
	&.bbImageAligned--left
	{
		float: left;
		margin: @xf-bbCodeImgFloatMargin @xf-bbCodeImgFloatMargin @xf-bbCodeImgFloatMargin 0;
	}

	&.bbImageAligned--right
	{
		float: right;
		margin: @xf-bbCodeImgFloatMargin 0 @xf-bbCodeImgFloatMargin @xf-bbCodeImgFloatMargin;
	}
}

.bbMediaWrapper,
.bbMediaJustifier
{
	width: 560px;
	max-width: 100%;
	margin: 0;

	&.fb_iframe_widget
	{
		display: block;
	}

	// we want this to still be a block element but to inherit the alignment a user has set - this approximates that
	[style="text-align: center"] &
	{
		margin-left: auto;
		margin-right: auto;
	}

	[style="text-align: left"] &
	{
		-ltr-rtl-margin-left: 0;
		-ltr-rtl-margin-right: auto;
	}

	[style="text-align: right"] &
	{
		-ltr-rtl-margin-left: auto;
		-ltr-rtl-margin-right: 0;
	}

	&.bbImageAligned--left
	{
		float: left;
		margin: @xf-bbCodeImgFloatMargin @xf-bbCodeImgFloatMargin @xf-bbCodeImgFloatMargin 0;
	}

	&.bbImageAligned--right
	{
		float: right;
		margin: @xf-bbCodeImgFloatMargin 0 @xf-bbCodeImgFloatMargin @xf-bbCodeImgFloatMargin;
	}
}

.bbMediaWrapper-inner
{
	position: relative;
	padding-bottom: 56.25%; /* 16:9 ratio */
	height: 0;

	&.bbMediaWrapper-inner--4to3
	{
		padding-bottom: 75%; /* 4:3 ratio */
	}

	&.bbMediaWrapper-inner--104px
	{
		padding-bottom: 104px;
	}

	&.bbMediaWrapper-inner--110px
	{
		padding-bottom: 110px;
	}

	&.bbMediaWrapper-inner--500px
	{
		padding-bottom: 500px;
	}

	iframe,
	object,
	embed,
	video,
	audio,
	.bbMediaWrapper-fallback
	{
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
	}
}

.bbMediaWrapper-fallback
{
	display: flex;
	justify-content: center;
	align-items: center;
	max-width: 100%;
	.xf-minorBlockContent();
}

.bbOembed
{
	margin: auto;
	width: 500px;
	max-width: 100%;

	&.bbOembed--loaded
	{
		display: block;
	}

	.reddit-card
	{
		margin: 0;
	}
}

.bbTable
{
	max-width: 100%;
	overflow: auto;

	.m-tableBase();
}

.bbCodePlainUnfurl
{
	&.link
	{
		display: block;
	}
}]]></template>
    <template title="core_block.less" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[// ################################# BLOCKS ##################

.blocks
{
	margin-bottom: @xf-elementSpacer;

	&:last-child
	{
		margin-bottom: 0;
	}

	.block
	{
		margin-bottom: (@xf-elementSpacer / 2);

		&:last-child
		{
			margin-bottom: 0;
		}
	}

	&.blocks--close .block
	{
		margin-bottom: (@xf-elementSpacer / 4);
	}

	&.blocks--separated
	{
		+ .blocks
		{
			padding-top: @xf-elementSpacer;
			border-top: @xf-borderSize solid @xf-borderColor;
		}
	}
}

.blocks-header
{
	font-size: @xf-fontSizeLarger;
	font-weight: @xf-fontWeightNormal;
	color: @xf-textColorMuted;

	margin: 0;
	padding: 0;
	margin-bottom: 5px;

	&.blocks-header--strong
	{
		color: @xf-textColorDimmed;

		.blocks-desc
		{
			color: @xf-textColorMuted;
		}
	}
}

.blocks-textJoiner
{
	display: table;
	width: 100%;
	margin-bottom: (@xf-elementSpacer / 2);
	padding: 0 @xf-paddingMedium;
	> span
	{
		display: table-cell;
		position: relative;

		&:before
		{
			content: '';
			position: absolute;
			left: 0;
			right: 0;
			top: 50%;
			border-top: @xf-borderSize solid @xf-borderColor;
		}
	}

	> em
	{
		display: table-cell;
		padding: 0 @xf-paddingLarge;
		width: 1%;
		white-space: normal;
		font-size: @xf-fontSizeLargest;
		line-height: 1;
		font-style: normal;
		text-align: center;
	}
}

.block
{
	margin-bottom: @xf-elementSpacer;

	&.block--close
	{
		margin-bottom: 5px;
	}

	&.block--treeEntryChooser
	{
		.block-header
		{
			font-size: @xf-fontSizeLarge;

			.block-desc
			{
				font-size: @xf-fontSizeSmallest;
			}
		}

		.block-row
		{
			padding-top: 6px;
			padding-bottom: 6px;
		}

		.contentRow
		{
			&.is-disabled
			{
				opacity: 0.5;
			}
		}

		.contentRow-title
		{
			font-size: @xf-fontSizeNormal;
		}

		.contentRow-minor
		{
			font-size: @xf-fontSizeSmaller;
		}

		.contentRow-suffix
		{
			font-size: @xf-fontSizeSmall;
		}
	}
}

.block-outer
{
	padding-bottom: @xf-blockPaddingV;
	.m-clearFix();

	&:empty
	{
		display: none;
	}

	&.block-outer--after
	{
		padding-top: @xf-blockPaddingV;
		padding-bottom: 0;
	}

	.block-outer-hint
	{
		font-size: @xf-fontSizeSmall;
		color: @xf-textColorMuted;
	}
}
.block-outer-main { float: left; }
.block-outer-opposite { float: right; }
.block-outer-middle { text-align: center; }

.block-container
{
	.xf-contentBase();
	.xf-blockBorder();
	border-radius: @xf-blockBorderRadius;

	&.block-container--none
	{
		background: none;
		border: none;
		color: @xf-textColor;
		padding: 0;
	}
}

@media (min-width: @xf-responsiveEdgeSpacerRemoval)
{
	@{block-noStripSel} > :first-child,
	.block-topRadiusContent,
	@{block-noStripSel} > .block-body:first-child > .blockLink:first-child
	{
		border-top-left-radius: @block-borderRadius-inner;
		border-top-right-radius: @block-borderRadius-inner;
	}

	@{block-noStripSel} > :last-child,
	.block-bottomRadiusContent,
	@{block-noStripSel} > .block-body:last-child > .blockLink:last-child,
	@{block-noStripSel} > .tabPanes:last-child > [role=tabpanel] > :last-child
	{
		border-bottom-left-radius: @block-borderRadius-inner;
		border-bottom-right-radius: @block-borderRadius-inner;
	}

	@{block-noStripSel} > .block-body:first-child > .dataList:first-child,
	.block-topRadiusContent.dataList,
	.block-topRadiusContent > .dataList:first-child
	{
		tbody:first-child .dataList-row:first-child,
		thead:first-child .dataList-row:first-child
		{
			> .dataList-cell:first-child { border-top-left-radius: @block-borderRadius-inner; }
			> .dataList-cell:last-child { border-top-right-radius: @block-borderRadius-inner; }
		}
	}

	@{block-noStripSel} > .block-body:first-child > .formRow:first-child,
	.block-topRadiusContent.formRow,
	.block-topRadiusContent > .formRow:first-child
	{
		> dt { border-top-left-radius: @block-borderRadius-inner; }
		> dd { border-top-right-radius: @block-borderRadius-inner; }
	}

	@{block-noStripSel} > .block-body:last-child > .dataList:last-child,
	.block-bottomRadiusContent.dataList,
	.block-bottomRadiusContent > .dataList:last-child
	{
		tbody:last-child .dataList-row:last-child
		{
			> .dataList-cell:first-child { border-bottom-left-radius: @block-borderRadius-inner; }
			> .dataList-cell:last-child { border-bottom-right-radius: @block-borderRadius-inner; }
		}
	}

	@{block-noStripSel} > .block-body:last-child > .formRow:last-child,
	.block-bottomRadiusContent.formRow,
	.block-bottomRadiusContent > .formRow:last-child
	{
		> dt { border-bottom-left-radius: @block-borderRadius-inner; }
		> dd { border-bottom-right-radius: @block-borderRadius-inner; }
	}

	@{block-noStripSel} > .block-body:last-child .formSubmitRow:not(.is-sticky),
	@{block-noStripSel} > .formSubmitRow:not(.is-sticky):last-child,
	.block-bottomRadiusContent > .formSubmitRow:not(.is-sticky)
	{
		> dt { border-bottom-left-radius: @block-borderRadius-inner; }
		> dd { border-bottom-right-radius: @block-borderRadius-inner; }

		.formSubmitRow-bar
		{
			border-bottom-left-radius: @block-borderRadius-inner;
			border-bottom-right-radius: @block-borderRadius-inner;
		}
	}
}

.block-header
{
	padding: @xf-blockPaddingV @xf-blockPaddingH;
	margin: 0;
	font-weight: @xf-fontWeightNormal;
	text-decoration: none;
	.xf-blockHeader();

	.m-clearFix();
	.m-hiddenLinks();

	&.block-header--separated
	{
		border-top: @xf-borderSize solid @xf-borderColorLight;
	}

	.block-desc
	{
		color: fade(@xf-blockHeader--color, 70);
		.m-textColoredLinks();
	}
}

.block-minorHeader
{
	padding: @xf-blockPaddingV @xf-blockPaddingH;
	margin: 0;
	font-weight: @xf-fontWeightNormal;
	text-decoration: none;
	.xf-blockMinorHeader();

	.m-clearFix();
	.m-hiddenLinks();

	.block-body + &
	{
		border-top: @xf-borderSize solid @xf-borderColorLight;
	}

	.block-desc
	{
		.m-textColoredLinks();
	}

	&--spaced
	{
		margin-top: @xf-paddingSmall;
	}

	&--small
	{
		font-size: @xf-fontSizeSmall;
	}
}

.block-tabHeader
{
	padding: 0;
	margin: 0;
	font-weight: @xf-fontWeightNormal;
	.xf-blockTabHeader();
	.m-tabsTogether(xf-default(@xf-blockTabHeader--font-size, @xf-fontSizeNormal));

	.tabs-tab
	{
		padding: @xf-blockPaddingV @xf-blockPaddingH;
		border-bottom: @xf-borderSizeFeature solid transparent;

		&:hover
		{
			color: @xf-blockTabHeaderSelected--color;
			background: fade(@xf-blockTabHeaderSelected--color, 2%);
		}

		&.is-active
		{
			background: none;
			.xf-blockTabHeaderSelected();
		}
	}

	.block-tabHeader-extra
	{
		float: right;
		color: inherit;
		font-size: @xf-blockTabHeader--font-size;
		padding: @xf-blockPaddingV @xf-blockPaddingH;
	}

	.hScroller-action
	{
		.m-hScrollerActionColorVariation(
			xf-default(@xf-blockTabHeader--background-color, transparent),
			xf-default(@xf-blockTabHeader--color, ~""),
			xf-default(@xf-blockTabHeaderSelected--color, ~"")
		);
	}
}

.block-minorTabHeader
{
	padding: 0;
	margin: 0;
	font-weight: @xf-fontWeightNormal;
	.xf-blockMinorTabHeader();
	.m-tabsTogether(xf-default(@xf-blockMinorTabHeader--font-size, @xf-fontSizeNormal));

	.tabs-tab
	{
		padding: @xf-blockPaddingV @xf-blockPaddingH max(0px, @xf-blockPaddingV - @xf-borderSizeFeature);
		border-bottom: @xf-borderSizeFeature solid transparent;

		&:hover
		{
			color: @xf-blockMinorTabHeaderSelected--color;
		}

		&.is-active
		{
			background: none;
			.xf-blockMinorTabHeaderSelected();
		}
	}

	.hScroller-action
	{
		.m-hScrollerActionColorVariation(
			xf-default(@xf-blockMinorTabHeader--background-color, transparent),
			xf-default(@xf-blockMinorTabHeader--color, ~""),
			xf-default(@xf-blockMinorTabHeaderSelected--color, ~"")
		);
	}
}

.block-filterBar
{
	padding: @xf-blockPaddingV @xf-blockPaddingH;
	.xf-blockFilterBar();

	&.block-filterBar--standalone
	{
		padding: @xf-paddingLarge @xf-blockPaddingH;
		border: @xf-borderSize solid @xf-borderColor;
		border-radius: @block-borderRadius-inner;

		@media (max-width: @xf-responsiveEdgeSpacerRemoval)
		{
			border-radius: 0;
			border-left: none;
			border-right: none;
		}
	}

	.filterBar-filterToggle
	{
		background: mix(
			xf-default(@xf-blockFilterBar--color, @xf-linkColor),
			xf-default(@xf-blockFilterBar--background-color, transparent),
			8%
		);
	}

	.filterBar-filterToggle,
	.filterBar-menuTrigger
	{
		&:hover
		{
			text-decoration: none;
			background: mix(
				xf-default(@xf-blockFilterBar--color, @xf-linkColor),
				xf-default(@xf-blockFilterBar--background-color, transparent),
				16%
			);
		}
	}

	.filterBar-menuTrigger
	{
		margin-right: -5px;
	}
}

.block-textHeader
{
	margin: @xf-blockPaddingV/2 0;
	padding: 0;
	font-weight: @xf-fontWeightNormal;
	.xf-blockTextHeader();

	.m-clearFix();
	.m-hiddenLinks();

	&.block-textHeader--scaled
	{
		font-size: inherit;
	}

	.block-textHeader-highlight
	{
		color: @xf-textColor;
	}

	.block-desc
	{
		.m-textColoredLinks();
	}

	&:first-child
	{
		margin-top: 0;
	}
}

.block-formSectionHeader
{
	padding: @xf-blockPaddingV @xf-blockPaddingH;
	margin: 0;
	font-weight: @xf-fontWeightNormal;
	text-decoration: none;
	.xf-formSectionHeader();

	.m-clearFix();
	.m-hiddenLinks();

	.block-desc
	{
		.m-textColoredLinks();
	}

	.block-container > &:first-child,
	.block-body--collapsible &:first-child,
	.block-header + &
	{
		border-top: none;
	}

	.block-formSectionHeader-aligner
	{
		@_blockPaddingShift: (unit(@xf-formLabelWidth) / 100) * (@xf-blockPaddingH);

		display: inline-block;
		text-align: right;
		min-width: @xf-formLabelWidth;
		min-width: ~"calc((@{xf-formLabelWidth}) - (@{_blockPaddingShift}) - (@{xf-formRowPaddingHInner}) - (@{xf-borderSize}))";
		max-width: 100%;

		@media (max-width: @xf-formResponsive)
		{
			display: inline;
			text-align: left;
			min-width: 0;
			padding-left: 0;
		}
	}

	@media (max-width: @xf-formResponsive)
	{
		padding-left: @xf-formRowPaddingHOuter;
	}

	.block-formSectionHeader-multiChecker
	{
		float: right;
	}

	&--small
	{
		font-size: @xf-fontSizeNormal;
	}
}

.block-desc,
.blocks-desc
{
	display: block;
	font-size: @xf-fontSizeSmaller;
	font-weight: @xf-fontWeightNormal;
}

.block-body
{
	.m-listPlain();

	&.block-body--collapsible
	{
		.has-no-js & { display: block; }

		.m-transitionFadeDown();
	}

	&.block-body--contained
	{
		overflow: auto;
		max-height: 300px;
		max-height: 70vh;
	}

	&.block-body--containedFixed
	{
		overflow-x: auto;
		max-height: 300px;
	}
}

.block-row
{
	margin: 0;
	padding: @xf-blockPaddingV @xf-blockPaddingH;
	.m-clearFix();

	&.block-row--alt
	{
		.xf-contentAltBase();
	}

	&.block-row--minor
	{
		font-size: @xf-fontSizeSmall;
	}

	&.block-row--separated
	{
		padding-top: (@xf-blockPaddingV) * 2;
		padding-bottom: (@xf-blockPaddingV) * 2;

		+ .block-row
		{
			border-top: @xf-borderSize solid @xf-borderColorLight;
		}
	}

	&.block-row--connectAbove
	{
		padding-bottom: (@xf-blockPaddingV) * 2;

		.block-body > &:last-child
		{
			padding-bottom: @xf-blockPaddingV;
		}
	}

	&.block-row--highlighted
	{
		.xf-contentHighlightBase();
	}

	&.block-row--clickable:hover
	{
		.xf-contentAccentBase();
	}

	&.is-mod-selected
	{
		background: @xf-inlineModHighlightColor;
	}

	> pre
	{
		&:first-child { margin-top: 0; }
		&:last-child { margin-bottom: 0; }
	}
}

.block-separator
{
	margin: 0;
	padding: 0;
	border: none;
	border-top: @xf-borderSize solid @xf-borderColorLight;
}

.block-footer
{
	padding: @xf-blockPaddingV @xf-blockPaddingH;
	.xf-blockFooter();
	.m-clearFix();

	&:first-child
	{
		border: none;
	}

	[data-app=admin] &
	{
		.block-footer-counter,
		.block-footer-select
		{
			line-height: 30px;
		}
	}

	&:not(.block-footer--split)
	{
		.block-footer-counter
		{
			float: left;
		}

		.block-footer-controls
		{
			float: right;
		}
	}

	&.block-footer--split
	{
		display: flex;
		align-items: center;

		.block-footer-main,
		.block-footer-counter
		{
			flex-grow: 1;
		}

		.block-footer-select:not(:last-child)
		{
			margin: 0 1em;
		}

		.block-footer-opposite,
		.block-footer-controls
		{
			margin-left: auto;
		}
	}
}

@media (max-width: @xf-responsiveNarrow)
{
	.block-outer
	{
		text-align: center;
	}

	.block-outer-main,
	.block-outer-opposite
	{
		float: none;
		text-align: center;
	}

	.block-outer-main + .block-outer-opposite
	{
		margin-top: @xf-paddingMedium;
	}
}]]></template>
    <template title="core_blockend.less" type="public" addon_id="XF" version_id="2000470" version_string="2.0.4"><![CDATA[// This contains rules that apply to various block and block-related systems. This file should be included
// after all of the primary definitions to ensure the rules override.

.blockMessage,
.blockStatus,
.block-row
{
	p:first-child
	{
		margin-top: 0;
	}

	p:last-child
	{
		margin-bottom: 0;
	}
}

@media (max-width: @xf-responsiveEdgeSpacerRemoval)
{
	.blockStatus
	{
		margin-left: -@xf-pageEdgeSpacer;
		margin-right: -@xf-pageEdgeSpacer;
		border-radius: 0;
		border-right: none;
	}

	.blockMessage.blockMessage--none
	{
		margin-left: 0;
		margin-right: 0;
	}
}]]></template>
    <template title="core_button.less" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[// ############################ BUTTONS #################

.button,
a.button // needed for specificity over a:link
{
	.m-buttonBase();

	a
	{
		color: inherit;
		text-decoration: none;
	}

	.xf-buttonDefault();

	&.button--primary
	{
		.xf-buttonPrimary();
	}

	&.button--cta
	{
		.xf-buttonCta();
	}

	&.button--link
	{
		// block colors
		background: @xf-contentBg;
		color: @xf-linkColor;
		border: @xf-borderSize solid @xf-borderColor;

		&:hover,
		&:active,
		&:focus
		{
			text-decoration: none;
			background: @xf-contentHighlightBg;
			color: @xf-contentHighlightBase--color;
		}
	}

	&.button--plain
	{
		background: none;
		color: @xf-linkColor;
		border: none;

		&:hover,
		&:active,
		&:focus
		{
			text-decoration: none;
			background: none;
		}
	}

	&.button--alt
	{
		// block colors
		background-color: @xf-paletteColor1;
		color: @xf-linkColor;
		.m-buttonBorderColorVariation(@xf-paletteColor2);

		&:hover,
		&:active,
		&:focus
		{
			background-color: @xf-paletteColor1;
			color: @xf-linkColor;
		}
	}

	&.button--longText
	{
		.m-overflowEllipsis();
		max-width: 100%;
		display: inline-block;
	}

	&.is-disabled
	{
		.xf-buttonDisabled();

		&:hover,
		&:active,
		&:focus
		{
			background: xf-default(@xf-buttonDisabled--background-color, transparent) !important;
		}
	}

	&.button--scroll
	{
		background: fade(xf-default(@xf-buttonDefault--background-color, transparent), 65%);
		padding: 8px 12px;
	}

	&.button--normal
	{
		font-size: @xf-fontSizeNormal;
	}

	&.button--small
	{
		font-size: @xf-fontSizeSmall;
		padding: 3px 6px;
	}

	&.button--smaller
	{
		font-size: @xf-fontSizeSmaller;
		padding: 2px 5px;
	}

	&.button--fullWidth
	{
		display: block;
		width: 100%;
	}

	&.button--icon
	{
		> .button-text:before,
		.button-icon
		{
			.m-faBase();
		}

		> .button-text:before,
		> .fa--xf:before,
		.button-icon
		{
			font-size: 120%;
			vertical-align: -.1em;
			display: inline-block;
			margin: -.255em 6px -.255em 0;
		}

		> .fa--xf
		{
			// helps fix a button alignment issue (Chrome only)
			line-height: inherit;
		}

		.button-icon
		{
			height: 1em;
			vertical-align: 0;
		}

		&.button--iconOnly
		{
			> .button-text:before,
			> i.fa--xf:before,
			.button-icon
			{
				margin-left: 0;
				margin-right: 0;
			}
		}

		&.button--padded
		{
			> .button-text:before,
			> i.fa--xf:before,
			.button-icon
			{
				margin-top: 0;
				margin-bottom: 0;
			}
		}

		&--add          { .m-buttonIcon(@fa-var-plus-square, .79em); }
		&--confirm      { .m-buttonIcon(@fa-var-check, 1em); }
		&--write	    { .m-buttonIcon(@fa-var-edit, 1em); }
		&--import  	    { .m-buttonIcon(@fa-var-upload, .93em); }
		&--export  	    { .m-buttonIcon(@fa-var-download,  1.125em); }
		&--download	    { .m-buttonIcon(@fa-var-download, 1.125em); }
		&--redirect	    { .m-buttonIcon(@fa-var-external-link, 1.125em); }
		&--disable      { .m-buttonIcon(@fa-var-power-off); }
		&--edit         { .m-buttonIcon(@fa-var-edit, .86em); }
		&--save         { .m-buttonIcon(@fa-var-save, .86em); }
		&--reply	    { .m-buttonIcon(@fa-var-reply, 1em); }
		&--quote	    { .m-buttonIcon(@fa-var-quote-left, .93em); }
		&--purchase	    { .m-buttonIcon(@fa-var-credit-card, 1.11em); }
		&--payment	    { .m-buttonIcon(@fa-var-credit-card, 1.08em); }
		&--convert	    { .m-buttonIcon(@fa-var-bolt, .5em); }
		&--search	    { .m-buttonIcon(@fa-var-search, .93em); }
		&--sort         { .m-buttonIcon(@fa-var-sort, .58em); }
		&--upload	    { .m-buttonIcon(@fa-var-upload, .93em); }
		&--attach	    { .m-buttonIcon(@fa-var-paperclip, .79em); }
		&--login {
			.m-buttonIcon(@fa-var-lock, .90em);
		}
		&--rate         { .m-buttonIcon(@fa-var-star, .93em); }
		&--config       { .m-buttonIcon(@fa-var-cog, .86em); }
		&--refresh      { .m-buttonIcon(@fa-var-sync-alt, .86em); }
		&--translate    { .m-buttonIcon(@fa-var-globe, .86em); }
		&--vote         { .m-buttonIcon(@fa-var-check-circle, .86em); }
		&--result       { .m-buttonIcon(@fa-var-chart-bar, 1.15em); }
		&--history	    { .m-buttonIcon(@fa-var-history, .86em); }
		&--cancel       { .m-buttonIcon(@fa-var-ban, .86em); }
		&--close        { .m-buttonIcon(@fa-var-times, .79em); }
		&--preview      { .m-buttonIcon(@fa-var-eye, 1em); }
		&--conversation { .m-buttonIcon(@fa-var-comments, 1em); }
		&--bolt         { .m-buttonIcon(@fa-var-bolt, .5em); }
		&--list         { .m-buttonIcon(@fa-var-list, .86em); }
		&--prev			{ .m-buttonIcon(@fa-var-chevron-left, .71em); }
		&--next			{ .m-buttonIcon(@fa-var-chevron-right, .71em); }
		&--markRead     { .m-buttonIcon(@fa-var-check-square, .93em); }
		&--user         { .m-buttonIcon(@fa-var-user, .72em); }
		&--userCircle   { .m-buttonIcon(@fa-var-user-circle, 1em); }

		&--notificationsOn  { .m-buttonIcon(@fa-var-bell, 1em); }
		&--notificationsOff { .m-buttonIcon(@fa-var-bell-slash, 1.15em); }

		&--show			{ .m-buttonIcon(@fa-var-eye) }
		&--hide			{ .m-buttonIcon(@fa-var-eye-slash) }

		// for inline mod confirmations
		&--merge { .m-buttonIcon(@fa-var-compress, .86em); }
		&--move { .m-buttonIcon(@fa-var-share, 1em); }
		&--copy { .m-buttonIcon(@fa-var-copy, 1em); }
		&--approve, &--unapprove { .m-buttonIcon(@fa-var-shield, .72em); }
		&--delete, &--undelete { .m-buttonIcon(@fa-var-trash-alt, .79em); }
		&--stick, &--unstick { .m-buttonIcon(@fa-var-thumbtack, .65em); }
		&--lock { .m-buttonIcon(@fa-var-lock, .65em); }
		&--unlock { .m-buttonIcon(@fa-var-unlock, .93em); }

		&--bookmark
		{
			.m-buttonIcon(@fa-var-bookmark);

			&.is-bookmarked .button-text:before
			{
				font-weight: @faWeight-solid;
				color: @xf-textColorAttention;
			}
		}
	}

	&.button--provider
	{
		> .button-text:before,
		.button-icon
		{
			.m-faBase('Brands');
			font-size: 120%;
			vertical-align: middle;
			display: inline-block;
			margin: -4px 6px -4px 0;
		}

		.button-icon
		{
			height: 1em;
			vertical-align: 0;
		}

		&--facebook
		{
			.m-buttonColorVariation(#3B5998, white);
			.m-buttonIcon(@fa-var-facebook, .58em);
		}

		&--twitter
		{
			.m-buttonColorVariation(#1DA1F3, white);
			.m-buttonIcon(@fa-var-twitter, .93em);
		}

		&--google
		{
			.m-buttonColorVariation(white, #444);
			border-color: #e9e9e9;

			> .button-text:before
			{
				display: none;
			}
		}

		&--github
		{
			.m-buttonColorVariation(#666666, white);
			.m-buttonIcon(@fa-var-github, .86em);
		}

		&--linkedin
		{
			.m-buttonColorVariation(#0077b5, white);
			.m-buttonIcon(@fa-var-linkedin, .86em);
		}

		&--microsoft
		{
			.m-buttonColorVariation(#00bcf2, white);
			.m-buttonIcon(@fa-var-windows, .93em);
		}

		&--yahoo
		{
			.m-buttonColorVariation(#410093, white);
			.m-buttonIcon(@fa-var-yahoo, .86em);
		}
	}

	&.button--splitTrigger
	{
		// button-text and button-menu are always children of button--splitTrigger
		// but are defined here for reasons of specificity, as these border colors
		// are overwritten by .m-buttonBorderColorVariation()
		> .button-text { border-right: @xf-borderSize solid transparent; }
		> .button-menu { border-left: @xf-borderSize solid transparent; }

		.m-clearFix();
		padding: 0;
		font-size: 0;
		display: inline-block;

		button.button-text
		{
			background: transparent;
			border: none;
			border-right: @xf-borderSize solid transparent;
			color: inherit;
		}

		> .button-text,
		> .button-menu
		{
			.xf-buttonBase();
			display: inline-block;

			&:hover
			{
				&:after
				{
					opacity: 1;
				}
			}
		}

		> .button-text
		{
			.m-borderRightRadius(0);
		}

		> .button-menu
		{
			.m-borderLeftRadius(0);
			padding-right: xf-default(@xf-buttonBase--padding-right, 0);// * (2/3);
			padding-left: xf-default(@xf-buttonBase--padding-left, 0);// * (2/3);

			&:after
			{
				.m-menuGadget(); // .58em
				opacity: .5;
			}
		}
	}
}

.buttonGroup
{
	display: inline-block;
	vertical-align: top;
	.m-clearFix();

	&.buttonGroup--aligned
	{
		vertical-align: middle;
	}

	> .button
	{
		float: left;

		&:not(:first-child)
		{
			border-left: none;
		}

		&:not(:first-child):not(:last-child)
		{
			border-radius: 0;
		}

		&:first-child:not(:last-child)
		{
			.m-borderRightRadius(0);
		}

		&:last-child:not(:first-child)
		{
			.m-borderLeftRadius(0);
		}
	}

	> .buttonGroup-buttonWrapper
	{
		float: left;

		&:not(:first-child) > .button
		{
			border-left: none;
		}

		&:not(:first-child):not(:last-child) > .button
		{
			border-radius: 0;
		}

		&:first-child:not(:last-child) > .button
		{
			.m-borderRightRadius(0);
		}

		&:last-child:not(:first-child) > .button
		{
			.m-borderLeftRadius(0);
		}
	}
}

.toggleButton
{
	> input
	{
		display: none;
	}

	> span
	{
		.xf-buttonDisabled();
		.m-buttonBorderColorVariation(xf-default(@xf-buttonDisabled--background-color, transparent));
	}

	&.toggleButton--small > span
	{
		font-size: @xf-fontSizeSmaller;
		padding: @xf-paddingSmall;
	}

	> input:checked + span
	{
		.xf-buttonDefault();
		.m-buttonBlockColorVariationSimple(xf-default(@xf-buttonDefault--background-color, transparent));
	}
}

.u-scrollButtons
{
	position: fixed;
	bottom: 30px;
	right: (@xf-pageEdgeSpacer) / 2;

	.has-hiddenscroll &
	{
		right: 20px;
	}

	z-index: @zIndex-9;

	.m-transition(opacity; @xf-animationSpeed);
	opacity: 0;
	display: none;

	&.is-transitioning
	{
		display: block;
	}

	&.is-active
	{
		display: block;
		opacity: 1;
	}

	.button
	{
		display: block;

		+ .button
		{
			margin-top: (@xf-pageEdgeSpacer) / 2;
		}
	}
}]]></template>
    <template title="core_dt_extra.less" type="public" addon_id="" version_id="0" version_string=""><![CDATA[// #### Touch Enhancements ####
a:link {
	-webkit-tap-highlight-color: fade(@xf-paletteColor1, 30%);
}

// #### Text Selection ####
::selection { background-color: @xf-paletteColor1;color: #fff; }
::-moz-selection { background-color: @xf-paletteColor1;color: #fff; }

// #### Color Select in Redactor ####
.fr-popup .fr-color-set > span:hover {
	transform: scale(1.7,1.7);
}

.editorSmilies .smilie {
	opacity: 0.5;
	.m-transition(all, 0.2s);
}
.editorSmilies .smilie:hover {
	opacity: 1.0;
	transform: scale(1.3);
}
.p-breadcrumbs > li:last-child::after {
	display: none;
}
.animate-pulse {
    -webkit-animation: pulse 2s infinite linear;
    animation: pulse 2s infinite linear;
}
@keyframes pulse {
  0% {transform: scale(1);}
  15% {transform: scale(1.3);}
  30% {transform: scale(1);}
  45% {transform: scale(1.3);}
  60% {transform: scale(1);} 
}
.js-bookmarksMenuBody .contentRow-title {
	font-size: @xf-fontSizeNormal;
}
.p-breadcrumbs--container,
.p-breadcrumbs.p-breadcrumbs--bottom {
	.xf-contentBase();
	.xf-blockBorder();
	
	padding: @xf-paddingLarge;
	border-radius: @xf-blockBorderRadius;
}
.p-breadcrumbs--container {
	margin-bottom: @xf-elementSpacer;
	
	.p-breadcrumbs {
		margin-bottom: 0;
	}
}
.block.block--treeEntryChooser {
	.block-container {
		margin: @xf-paddingLarge @xf-paddingLargest;
	}
}]]></template>
    <template title="core_dt_proprties.less" type="public" addon_id="" version_id="0" version_string=""><![CDATA[// ########################## DOHTHEME OPTION #######################

// ######## GENERAL ########
		

// #### Hide Breadcrum on Forum Home ####
<xf:if is="property('dt_breadbrumb_index')">
.template-forum_list .p-breadcrumbs {
	display: none;
}
.template-forum_list .p-body-inner {
	padding: 20px;
}
</xf:if>

<xf:if is="property('dt_breadbrumb_index') AND !property('dt_collapsible_sidebar')">
.template-forum_list .p-breadcrumbs--container {
    display: none;
}
</xf:if>


// #### Hide Title Bar in Forum Home ####
<xf:if is="property('dt_title_index')">
.template-forum_list .p-title-value {
	display: none;
}
.p-title-pageAction {
	margin-left: auto;
}
</xf:if>


// #### Remove page actions from forum index ####
<xf:if is="property('dt_pa_index')">
.template-forum_list .p-title-pageAction {
	display: none;
}
</xf:if>


<xf:if is="property('dt_title_index') AND property('dt_pa_index')">
.template-forum_list .p-body-header {
	display: none;
}
</xf:if>


// #### Avatar Shape ####

<xf:if is="property('dt_avatar_shape') == 'option2'">
.avatar img,
.avatar.avatar--default.avatar--default--dynamic,
.avatar.avatar--default.avatar--default--text {
	-webkit-clip-path: circle(50% at 50% 50%);
	clip-path: circle(50% at 50% 50%);
}
.avatar.avatar--separated {
	border-radius: 50%;
}
<xf:elseif is="property('dt_avatar_shape') == 'option3'" />
.avatar img,
.avatar.avatar--default.avatar--default--dynamic,
.avatar.avatar--default.avatar--default--text {
	-webkit-clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
	clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
}
<xf:elseif is="property('dt_avatar_shape') == 'option4'" />
.avatar img,
.avatar.avatar--default.avatar--default--dynamic,
.avatar.avatar--default.avatar--default--text {
	-webkit-clip-path: polygon(50% 0, 100% 38%, 80% 100%, 20% 100%, 0 38%);
	clip-path: polygon(50% 0, 100% 38%, 80% 100%, 20% 100%, 0 38%);
}
<xf:elseif is="property('dt_avatar_shape') == 'option5'" />
.avatar img,
.avatar.avatar--default.avatar--default--dynamic,
.avatar.avatar--default.avatar--default--text {
	-webkit-clip-path: polygon(50% 0, 95% 25%, 95% 75%, 50% 100%, 5% 75%, 5% 25%);
	clip-path: polygon(50% 0, 95% 25%, 95% 75%, 50% 100%, 5% 75%, 5% 25%);
}
<xf:elseif is="property('dt_avatar_shape') == 'option6'" />
.avatar img,
.avatar.avatar--default.avatar--default--dynamic,
.avatar.avatar--default.avatar--default--text {
	-webkit-clip-path: polygon(50% 0%, 90% 20%, 100% 60%, 75% 100%, 25% 100%, 0% 60%, 10% 20%);
	clip-path: polygon(50% 0%, 90% 20%, 100% 60%, 75% 100%, 25% 100%, 0% 60%, 10% 20%);
}
<xf:elseif is="property('dt_avatar_shape') == 'option7'" />
.avatar img,
.avatar.avatar--default.avatar--default--dynamic,
.avatar.avatar--default.avatar--default--text {
	-webkit-clip-path: polygon(0 50%, 15% 15%, 50% 0, 85% 15%, 100% 50%, 85% 85%, 50% 100%, 15% 85%);
	clip-path: polygon(0 50%, 15% 15%, 50% 0, 85% 15%, 100% 50%, 85% 85%, 50% 100%, 15% 85%);
}
<xf:elseif is="property('dt_avatar_shape') == 'option8'" />
.avatar img {
	-webkit-clip-path: polygon(50% 0%, 83% 12%, 100% 43%, 94% 78%, 68% 100%, 32% 100%, 6% 78%, 0% 43%, 17% 12%);
	clip-path: polygon(50% 0%, 83% 12%, 100% 43%, 94% 78%, 68% 100%, 32% 100%, 6% 78%, 0% 43%, 17% 12%);
}
<xf:elseif is="property('dt_avatar_shape') == 'option9'" />
.avatar img,
.avatar.avatar--default.avatar--default--dynamic,
.avatar.avatar--default.avatar--default--text {
	-webkit-clip-path: polygon(20% 0%, 80% 0%, 100% 20%, 100% 80%, 80% 100%, 20% 100%, 0% 80%, 0% 20%);
	clip-path: polygon(20% 0%, 80% 0%, 100% 20%, 100% 80%, 80% 100%, 20% 100%, 0% 80%, 0% 20%);
}
<xf:elseif is="property('dt_avatar_shape') == 'option10'" />
.avatar img,
.avatar.avatar--default.avatar--default--dynamic,
.avatar.avatar--default.avatar--default--text {
	-webkit-clip-path: polygon(0% 15%, 15% 15%, 15% 0%, 85% 0%, 85% 15%, 100% 15%, 100% 85%, 85% 85%, 85% 100%, 15% 100%, 15% 85%, 0% 85%);
	clip-path: polygon(0% 15%, 15% 15%, 15% 0%, 85% 0%, 85% 15%, 100% 15%, 100% 85%, 85% 85%, 85% 100%, 15% 100%, 15% 85%, 0% 85%);
}
</xf:if>

<xf:if is="property('dt_avatar_shape') != 'option1'">
.menu.menu--account {
	.avatar img,
	.avatar.avatar--default.avatar--default--dynamic,
	.avatar.avatar--default.avatar--default--text {
		clip-path: none;
	}
}
</xf:if>

// #### Guest Message Content ####
<xf:if is="property('dt_guest_message')">
.p-guest--message {
	.xf-dt_guest_message_css();
	
	<xf:if is="property('dt_guest_message_index')">
	display: none;
	
	.template-forum_list & {
		display: block;
	}
	</xf:if>
}
.p-guest--message h1 {
	color: @xf-textColorEmphasized;
	margin-top: 0;
}
</xf:if>

// #### Hide Top Breadcrumb ####
<xf:if is="property('dt_breadbrumb_top')">
.p-breadcrumbs:not(.p-breadcrumbs--bottom) {
	display: none;
}
.p-body-inner {
	padding-top: 20px;
}
</xf:if>

<xf:if is="property('dt_breadbrumb_top') AND property('dt_collapsible_sidebar')">
.p-breadcrumbs--container:not(.p-breadcrumbs--container--side) {
    display: none;
}
</xf:if>

<xf:if is="property('dt_breadbrumb_top') AND !property('dt_collapsible_sidebar')">
.p-breadcrumbs--container {
    display: none;
}
</xf:if>


// #### Hide Bottom Breadcrumb ####
<xf:if is="property('dt_breadbrumb_bottom')">
.p-breadcrumbs.p-breadcrumbs--bottom {
	display: none;
}
.p-body-inner {
	padding-bottom: 20px;
}
</xf:if>


// #### Chrome Scrollbar (Chrome) ####
<xf:if is="property('dt_chrome_scrollbar')">
html::-webkit-scrollbar
{
	width: 10px;
}
html::-webkit-scrollbar-track
{
	background: @xf-pageBg; 
}
html::-webkit-scrollbar-thumb
{
	background: @xf-paletteColor1; 
}
html::-webkit-scrollbar-thumb:active
{
	background: @xf-paletteAccent1; 
}
</xf:if>


// ######## Header and navigation ########

// #### Sticky Staff tools ####

<xf:if is="property('dt_sticky_staff_tools')">
.p-staffBar {
	position: -webkit-sticky;
	position: sticky;
	top: 0;
	z-index: @zIndex-4;
}
	<xf:if is="property('publicNavSticky') != 'none'">
	.p-pageWrapper .p-navSticky {
		top: 35px;
	}
	</xf:if>
</xf:if>

// #### Hide Selected Tab Sub-Links bar ####
<xf:if is="property('dt_disable_tab_links')">
.p-sectionLinks {
	display: none;
}
</xf:if>

// #### Login triggers style ####
<xf:if is="property('dt_triggers_style') == 'option2'">
.menu {
	.formRow > dt, .formRow > dd {
		display: block;
		width: 100%;
		text-align: left;
	}
	.formRow > dt:empty,
	.formRow > dd:empty {
		display: none;
	}
	.formRow {
		dt {
			padding: 0;
		}
	}
	.formRow.formRow--input {
		dt {
			padding: 15px 10px 15px 10px;
		}
	}
	.block-outer.block-outer--after {
		background: @xf-blockFooter--background-color;
		padding-bottom: 6px;
	}
}
</xf:if>

// #### Condense Visitor Tabs ####
<xf:if is="property('dt_condense_visito_tabs')">
.p-navgroup-link--user.badgeContainer::after {
	display: none;
}
.p-navgroup-link--user.badgeContainer.badgeContainer--highlighted::after {
	display: block;
}
@media (min-width: @xf-responsiveNarrow) {
	.p-navgroup-link--conversations,
	.p-navgroup-link--alerts {
		display: none;
	}
}
.menu--account .badgeContainer.badgeContainer--highlighted::after {
	margin-left: 6px;
}
<xf:else />
.p-navgroup-link--user.badgeContainer::after {
	display: none;
}
</xf:if>

// #### Inline Alert Ballons ####
<xf:if is="property('dt_inline_ballons')">
.p-navgroup .p-navgroup-link.badgeContainer::after {
	position: relative;
	top: -2px;
	left: 2px;
}
<xf:if is="property('dt_condense_visito_tabs')">
.p-navgroup .p-navgroup-link.p-navgroup-link--user {
	text-overflow: initial;
}
.p-navgroup .p-navgroup-link.badgeContainer::after {
	display: inline-block;
}
</xf:if>
</xf:if>

// #### Remove user avatar from navigation ####
<xf:if is="property('dt_nav_avatar')">
@media (min-width: @xf-responsiveWide) {
	.p-navgroup-link.p-navgroup-link--user .avatar {
		display: none;
	}
}
</xf:if>

// #### Remove visitor tab text ####
<xf:if is="property('dt_nav_text')">
.p-navgroup-linkText {
	display: none;
}
</xf:if>

// #### Remove visitor tab icons ####
<xf:if is="property('dt_nav_icons')">
@media (min-width: @xf-responsiveWide) {
	.p-navgroup-link.p-navgroup-link--iconic i {
		display: none;
	}
}
</xf:if>



// ######## Forum / Node List ########

// #### Collapsible Categories ####
<xf:if is="property('dt_collapsible_categories')">
.block--category
{
	.block-header {
		position: relative;
	}
	
    .collapseTrigger
    {
		position: absolute;
		top: 50%;
		right: 15px;
		cursor: pointer;
		transform: translateY(-50%);
		
		&:before
        {
            content: {{ property('dt_node_on_icon') }};
			width: 100%;
            font-size: 80%;
			margin: 0;
        }
		
        &.is-active:before
        {
            content: {{ property('dt_node_off_icon') }};
        }
    }
}
.block-body.block-body--collapsible
{
    transition: all 0.75s cubic-bezier(0.68, -0.55, 0.27, 1.55);
    -webkit-transition-property: all, -xf-opacity;
    transition-property: all, -xf-opacity;
    overflow-y: hidden;
    height: 0;
    -webkit-transition-property: all, -xf-height;
    transition-property: all, -xf-height;
}
</xf:if>

// #### Sticky Category Strips ####
<xf:if is="property('dt_sticky_catstrips')">
.block--category .block-header {
	position: -webkit-sticky;
	position: sticky;
	z-index: 100;
}
</xf:if>

<xf:if is="property('dt_catstrips_minorheader')">
.block-subheader {
	display: table;
	table-layout: fixed;
	width: 100%;
	background-color: @xf-contentAltBg;
	color: @xf-textColorDimmed;
	font-size: @xf-fontSizeSmall;
	padding: @xf-paddingLarge;

	span {
		display: table-cell;
		vertical-align: middle;

		&.block-subheader--main {

		}
		&.block-subheader--stats {
			width: 80px;
			text-align: center;
		}
		&.block-subheader--last {
			width: 230px;
			text-align: left;
			padding-left: 15px;
		}
	}
}
.node-stats .pairs.pairs--rows > dt {
	display: none;
}
@media (max-width: 1000px) {
	.block-subheader span.block-subheader--stats {
		display: none;
	}
}
@media (max-width: @xf-responsiveMedium) {
	.block-subheader span.block-subheader--last {
		display: none;
	}
}
</xf:if>

// #### Simplified Node Statics ####
<xf:if is="property('dt_nodestat_simple') AND !property('dt_catstrips_minorheader')">
.node-stats {
	max-width: 100px;
}
.node-stats .pairs.pairs--rows > dd {
	font-size: 1.35em;
}
</xf:if>

// #### Show Node Stats on Hover ####
<xf:if is="property('dt_node_stats')">
.node-stats {
	opacity: 0;
	transform: scale(0.75);
	.m-transition(all, 0.3s);
}
.block-body .node:hover .node-stats {
	opacity: 1;
	transform: scale(1);
}
</xf:if>

// #### New Indicator Label ####
<xf:if is="property('dt_new_indicator')">
.node--newIndicator {
	.xf-dt_new_indicator_css();
}
.node--forum .node--newIndicator {
	display: none;
}
.node--forum.node--unread .node--newIndicator {
	display: inline-block;
}
</xf:if>

// #### Alternative Node Background ####
<xf:if is="property('dt_alternative_nodes')">
.block-body .node:nth-of-type(2n+2) {
	background: {{ property('dt_alternative_nodes') }};
}
</xf:if>

// #### Hover Background on Nodes ####
<xf:if is="property('dt_hb_nodes')">
.block-body .node {
	.m-transition(all, 0.3s);
}

.block-body .node:hover {
	background: {{ property('dt_hb_nodes') }};
}
</xf:if>

// #### Hover Effect on Nodes ####
<xf:if is="property('dt_he_nodes')">
.block-body .node {
	.m-transition(all, 0.3s);
}

.block-body .node:hover {
	transform: scale(1.015);
}
</xf:if>

// #### Category Description ####
<xf:if is="property('dt_cat_description') == 'option2'">
.block-header .block-desc {
	display: inline-block;
	opacity: 0;
	margin-left: 4px;
	.m-transition(all, 0.3s);
}
.block--category .block-container:hover .block-desc {
	opacity: 1;
}
</xf:if>

// ######## Sidebar ########

// #### Disable Sidebar ####
<xf:if is="property('dt_disable_sidebar')">
.p-body-main .p-body-sidebar {
	display: none;
}
.p-body-main.p-body-main--withSidebar .p-body-content {
	width: 100%;
	max-width: 100%;
	padding-right: 0;
}
</xf:if>

// #### Sidebar Position ####
<xf:if is="property('dt_sidebar_position') == 'option2'">
@media (min-width: @xf-responsiveWide) {
	.p-body-main--withSidebar .p-body-content {
		order: 2;
		padding-left: @xf-sidebarSpacer;
		padding-right: 0 !important;
	}
	.p-body-sidebar {
		order: 1;
	}
}
</xf:if>

// #### Sticky Sidebar ####
<xf:if is="property('dt_sticky_sidebar') && !property('dt_disable_sidebar')">
.p-body-sidebar {
	position: -webkit-sticky;
	position: sticky;
	top: (@xf-publicNavPaddingV * 2) + 25px;
}
</xf:if>

// #### Collapsible Sidebar ####
<xf:if is="property('dt_collapsible_sidebar') && !property('dt_disable_sidebar')">
.p-breadcrumbs--container {
	display: flex;
	align-items: center;
	
	.collapseTrigger {
		margin-left: auto;
		
		&:before
        {
            content: {{ property('dt_collpse_off_icon') }};
			width: 100%;
			margin-left: 0;
        }
		
		&.is-active:before
        {
            content: {{ property('dt_collpse_on_icon') }};
        }
		
	}
}
@media (max-width: @xf-responsiveWide) {
	.p-breadcrumbs--container .collapseTrigger {
		display: none;
	}
}

.p-body-content {
    transition: all .55s cubic-bezier(0.68, -0.55, 0.27, 1.55);
}
.p-body-sidebar {
	transition: all .45s cubic-bezier(0.68, -0.55, 0.27, 1.55);
}
.p-body-main--withSidebar .p-body-content:not(.is-active) {
	width: 100%;
	max-width: 100%;
	padding-right: 0;
}
.p-body-main--withSidebar .p-body-sidebar:not(.is-active) {
	width: 0;
	height: 0;
	transform: scale(0);
	opacity: 0;
}
@media (min-width: @xf-responsiveWide) {
	.p-body-main--withSidebar .p-body-content {
		height: 100%;
	}
	.p-body-sidebar {
		height: 100%;
	}
}
</xf:if>

// #### Collapsible Sidebar Block ####
<xf:if is="property('dt_collapsible_sidebar_block') && !property('dt_disable_sidebar')">
.p-body-sidebar .block-minorHeader {
	position: relative;
}
.p-body-sidebar .block-minorHeader .block-control {
	position: absolute;
	top: 50%;
	right: 10px;
	font-size: 80%;
	cursor: pointer;
	transform: translateY(-50%);
}
</xf:if>


// ######## Discussion List ########

// #### Seperate Sticky Threads ####

<xf:if is="property('dt_seperate_sticky_threads')">
.stickySeparator {
	.xf-dt_seperate_sticky_threads_css();
}
</xf:if>


// #### Unique background to sticky thread ####

<xf:if is="property('dt_background_sticky_thread_css')">
.structItemContainer-group--sticky .structItem--thread {
	.xf-dt_background_sticky_thread_css();
}
.structItemContainer-group--sticky:before{
	content: 'Закрепленные темы';
	display: flex;
    align-items: center;
	color: #fffcfc;
    background: #424649;
    padding: 10px;
	box-sizing: border-box;
}
.structItemContainer-group--sticky:after{
	content: 'Общие темы';
	display: flex;
    align-items: center;
	color: #fffcfc;
    background: #424649;
    padding: 10px;
	box-sizing: border-box;
}
</xf:if>

// #### Locked Threads Opacity ####

<xf:if is="property('dt_opacity_thread_lock')">
.structItem--thread.is-locked {
	opacity: 0.6;
}
.structItemContainer-group--sticky .structItem--thread.is-locked {
	opacity: 1;
}
.structItemContainer-group--sticky:before{
	content: 'Закрепленные темы';
	display: flex;
    align-items: center;
	color: #fffcfc;
    background: #424649;
    padding: 10px;
	box-sizing: border-box;
}
.structItemContainer-group--sticky:after{
	content: 'Общие темы';
	display: flex;
    align-items: center;
	color: #fffcfc;
    background: #424649;
    padding: 10px;
	box-sizing: border-box;
}
</xf:if>

// #### Online/Offline status indicator ####

<xf:if is="property('dt_discussion_online')">
.forum-avatar-online,
.forum-avatar-offline {
	position: absolute;
	top: 0;
	left: 2px;
	width: 10px;
	height: 10px;
	border-radius: 50%;
}
.forum-avatar-online {
	background: #7fb900;
}
.forum-avatar-offline {
	background: #b90000;
}
</xf:if>

// #### Alternative Thread Background ####

<xf:if is="property('dt_alternative_threads')">
.structItemContainer-group:not(.structItemContainer-group--sticky) .structItem.structItem--thread:nth-of-type(2n+1) {
	background: {{ property('dt_alternative_threads') }};
}
.structItemContainer-group--sticky:before{
	content: 'Закрепленные темы';
	display: flex;
    align-items: center;
	color: #fffcfc;
    background: #424649;
    padding: 10px;
	box-sizing: border-box;
}
.structItemContainer-group--sticky:after{
	content: 'Общие темы';
	display: flex;
    align-items: center;
	color: #fffcfc;
    background: #424649;
    padding: 10px;
	box-sizing: border-box;
}
</xf:if>

// #### Hover Background on Threads ####

<xf:if is="property('dt_hb_threads')">
.structItem.structItem--thread {
	.m-transition(all, 0.3s);
}
.structItem.structItem--thread:hover {
	background: {{ property('dt_hb_threads') }};
}
</xf:if>

// #### Hover Effect on Threads ####

<xf:if is="property('dt_he_threads')">
.structItem.structItem--thread {
	.m-transition(all, 0.3s);
}
.structItem.structItem--thread:hover {
	transform: scale(1.015);
}
</xf:if>


// ######## Message Layout ########


// #### Messages Layout ####
<xf:if is="property('dt_messages_layout') == 'option2'">
.block--messages .message:not(.message--simple) {
	.message-inner {
		flex-direction: column;
	}
	.message-inner .message-cell.message-cell--user,
	.message-inner .message-cell.message-cell--action {
		border-right: none;
		border-bottom: @xf-messageUserBlock--border-width solid @xf-messageUserBlock--border-color;
	}
	.message-inner .message-cell.message-cell--user {
		flex: 0 0 100%;
	}
	.message-cell.message-cell--user .message-user {
		display: flex;
		align-items: center;

		.message-userExtras {
			margin-top: 0;
			margin-left: auto;
		}

		.message-userDetails {
			margin-left: 20px;
		}

		.message-avatar {
			margin-bottom: 0;
		}

		@media (min-width: @xf-messageSingleColumnWidth) {
			.message-userArrow {
				position: absolute;
				bottom: 0;
				left: 50px;
				top: initial;
				right: initial;

				.m-triangleUp(xf-default(@xf-messageUserBlock--border-color, transparent), @xf-messagePadding);

				&:after
				{
					position: absolute;
					top: 2px;
					right: -@xf-messagePadding + 1;
					content: "";

					.m-triangleUp(@xf-contentBg, @xf-messagePadding - 1px);
				}
			}
		}
	}
	.message--quickReply {
		.message-cell.message-cell--user {
			display: none;
		}
	}
}
</xf:if>

<xf:if is="property('dt_messages_layout') == 'option3'">
.message.is-first {
	
	.message-inner {
		flex-direction: column;
	}
	.message-inner .message-cell.message-cell--user,
	.message-inner .message-cell.message-cell--action {
		border-right: none;
		border-bottom: @xf-messageUserBlock--border-width solid @xf-messageUserBlock--border-color;
	}
	.message-inner .message-cell.message-cell--user {
		flex: 0 0 100%;
	}
	.message-cell.message-cell--user .message-user {
		display: flex;
		align-items: center;

		.message-userExtras {
			margin-top: 0;
			margin-left: auto;
		}

		.message-userDetails {
			margin-left: 20px;
		}

		.message-avatar {
			margin-bottom: 0;
		}

		@media (min-width: @xf-messageSingleColumnWidth) {
			.message-userArrow {
				position: absolute;
				bottom: 0;
				left: 50px;
				top: initial;
				right: initial;

				.m-triangleUp(xf-default(@xf-messageUserBlock--border-color, transparent), @xf-messagePadding);

				&:after
				{
					position: absolute;
					top: 2px;
					right: -@xf-messagePadding + 1;
					content: "";

					.m-triangleUp(@xf-contentBg, @xf-messagePadding - 1px);
				}
			}
		}
	}
}
</xf:if>

// #### Center Thread Title ####

<xf:if is="property('dt_thread_title_center')">
.template-thread_view .p-body-header {
	text-align: center;
}
.template-thread_view .p-body-header .p-title-value {
	margin-left: auto;
}
</xf:if>

// #### Hide Avatar Beside Editor ####

<xf:if is="property('dt_editor_avatar')">
.message.message--quickReply .message-cell--user {
	display: none;
}
.message.message--quickReply .message-cell.message-cell--main {
	padding-left: 10px;
	margin-left: 0;
}

</xf:if>

// #### Show Extra User Info On Hover ####

<xf:if is="property('dt_euicss') AND !property('dt_collapsible_extras')">
.message-userExtras {
	max-height: 0px;
	opacity: 0;
	overflow: hidden;
	.m-transition(all, 0.3s);
}
.message-cell--user:hover .message-userExtras {
	max-height: 300px;
	opacity: 1;
}
</xf:if>

// #### Collapsible User Extras ####
<xf:if is="property('dt_collapsible_extras') && property('dt_messages_layout') == 'option1'">
.message-userExtras-body
{
    .m-listPlain();

    &.message-userExtras--collapsible
    {
        .has-no-js & { display: block; }

        .m-transitionFadeDown();
    }
}

.message-cell
{
    .collapseTrigger
    {
        text-align: center;
 
        &.is-active:before
        {
            transform: rotate(-180deg);
        }
        &:before
        {
            content: "\f13a";
            color: @xf-linkColor;
            transition: ease-in transform .3s;
            width: auto;
        }
        &.collapseTrigger--block:before
        {
            float: none;
        }
    }
}
@media (max-width: @xf-messageSingleColumnWidth)
{
    .message-cell
    {
        .collapseTrigger
        {
            display: none;
        }
    }
}
</xf:if>
// #### First Post Uniuqe Background ####

<xf:if is="property('dt_firstpost_customization')">
.message--post.is-first .message-cell.message-cell--main {
	.xf-dt_firstpost_customization();
}
</xf:if>

// #### EXTRA FOOTER ####
<xf:if is="property('dt_extra_footer')">
.pre-footer {
	
	<xf:if is="property('dt_extra_footer_index')">
	display: none;
	
	.template-forum_list & {
		display: block;
	}
	</xf:if>
}
.pre-footer-inner {
	width: 100%;
	max-width: @xf-pageWidthMax;
	
	.xf-dt_extra_footer_css();
	
	margin: 0 auto;
	
	@media (min-width: @xf-responsiveMedium) {
		padding-left: @xf-paddingLarge;
		padding-right: @xf-paddingLarge;
	}
}
.pre-footer--container {
	display: flex;
	flex-wrap: wrap;
	
	@media (min-width: @xf-responsiveWide) {
		margin: 0 -15px;
	}
}
.pre-footer--column {
	flex: 0 0 25%;
	max-width: 25%;
	
	@media (min-width: @xf-responsiveMedium) {
		padding: 0 15px;
	}
	
	h3 {
		.xf-dt_extra_footer_title_css();
	}
}
.pre-footer--content,
.pre-footer .block-container {
	.xf-dt_extra_footer_content_css();
}
.social__icons {
	
	li {
		display: inline-block;
		list-style: none;
		a {
			display: block;
			width: 35px;
			height: 35px;
			line-height: 35px;
			background: @xf-paletteColor1;
			color: #fff;
			text-align: center;
			border-radius: @xf-borderRadiusMedium;
			margin-right: 4px;
			&.-facebook {
				background: #3b5998;
			}
			&.-twitter {
				background: #55acee;
			}
			&.-instagram {
				background: #d6249f;
  				background: radial-gradient(circle at 30% 107%, #fdf497 0%, #fdf497 5%, #fd5949 45%,#d6249f 60%,#285AEB 90%);
			}
			&.-youtube {
				background: #ff0000;
			}
		}
	}
}
.pre-footer--links {
	
	li {
		list-style: none;
		
		a {
			display: block;
			.xf-dt_extra_footer_link_css();
		}
	}
}

.social__icons,
.pre-footer--links,
.pre-footer-html--content,
.pre-footer .block-row {
	.xf-dt_extra_footer_widgcont_css();
}

@media (max-width: @xf-responsiveWide)
{
	.pre-footer--column{
		flex: 0 0 50%;
		max-width: 50%;
	}
}
@media (max-width: @xf-responsiveMedium)
{
	.pre-footer--column {
		flex: 0 0 100%;
		max-width: 100%;
	}
}
</xf:if>


// ######## GLYPHS ########

// #### Navigation Glyphs ####

<xf:if is="property('dt_navigation_glyphs')">

.p-navEl-link::before {
	.m-faBase();
	padding-right: 4px;
}
.p-navEl-link[data-nav-id="home"]::before {
	.m-faContent(@fa-var-home, 1em);
}
.p-navEl-link[data-nav-id="forums"]::before {
	.m-faContent(@fa-var-comments, 1em);
}
.p-navEl-link[data-nav-id="whatsNew"]::before {
	.m-faContent(@fa-var-bolt, 1em);
}
.p-navEl-link[data-nav-id="members"]::before {
	.m-faContent(@fa-var-users, 1em);
}
.p-navEl-link[data-nav-id="xfmg"]::before {
	.m-faContent(@fa-var-picture-o, 1em);
}
.p-navEl-link[data-nav-id="xfrm"]::before {
	.m-faContent(@fa-var-download, 1em);
}

</xf:if>

// #### Sub-navigation Glyphs ####

<xf:if is="property('dt_sub_navigation_glyphs')">
.p-navEl-link::before {
	.m-faBase();
	padding-right: 4px;
}
.p-navEl-link[data-nav-id="newPosts"]::before {
	.m-faContent(@fa-var-fire, 1em);
}
.p-navEl-link[data-nav-id="findThreads"]::before {
	.m-faContent(@fa-var-comment, 1em);
}
.p-navEl-link[data-nav-id="watched"]::before {
	.m-faContent(@fa-var-bell, 1em);
}
.p-navEl-link[data-nav-id="searchForums"]::before {
	.m-faContent(@fa-var-search, 1em);
}
.p-navEl-link[data-nav-id="markForumsRead"]::before {
	.m-faContent(@fa-var-eye-slash, 1em);
}
.p-navEl-link[data-nav-id="whatsNewPosts"]::before {
	.m-faContent(@fa-var-file-text-o, 1em);
}
.p-navEl-link[data-nav-id="xfmgWhatsNewNewMedia"]::before {
	.m-faContent(@fa-var-picture-o, 1em);
}
.p-navEl-link[data-nav-id="xfmgWhatsNewMediaComments"]::before {
	.m-faContent(@fa-var-comments-o, 1em);
}
.p-navEl-link[data-nav-id="xfrmNewResources"]::before {
	.m-faContent(@fa-var-download, 1em);
}
.p-navEl-link[data-nav-id="whatsNewProfilePosts"]::before {
	.m-faContent(@fa-var-pencil, 1em);
}
.p-navEl-link[data-nav-id="whatsNewNewsFeed"]::before {
	.m-faContent(@fa-var-rss, 1em);
}
.p-navEl-link[data-nav-id="latestActivity"]::before {
	.m-faContent(@fa-var-clock-o, 1em);
}
.p-navEl-link[data-nav-id="xfmgNewMedia"]::before {
	.m-faContent(@fa-var-bolt, 1em);
}
.p-navEl-link[data-nav-id="xfmgNewComments"]::before {
	.m-faContent(@fa-var-comments-o, 1em);
}
.p-navEl-link[data-nav-id="xfmgAddMedia"]::before {
	.m-faContent(@fa-var-plus-square, 1em);
}
.p-navEl-link[data-nav-id="xfmgYourContent"]::before {
	.m-faContent(@fa-var-file-image-o, 1em);
}
.p-navEl-link[data-nav-id="xfmgWatchedContent"]::before {
	.m-faContent(@fa-var-bell, 1em);
}
.p-navEl-link[data-nav-id="xfmgSearchMedia"]::before {
	.m-faContent(@fa-var-search, 1em);
}
.p-navEl-link[data-nav-id="xfmgMarkViewed"]::before {
	.m-faContent(@fa-var-eye-slash, 1em);
}
.p-navEl-link[data-nav-id="xfrmLatestReviews"]::before {
	.m-faContent(@fa-var-star, 1em);
}
.p-navEl-link[data-nav-id="xfrmYourResources"]::before {
	.m-faContent(@fa-var-cloud-download, 1em);
}
.p-navEl-link[data-nav-id="xfrmWatched"]::before {
	.m-faContent(@fa-var-bell, 1em);
}
.p-navEl-link[data-nav-id="xfrmSearchResources"]::before {
	.m-faContent(@fa-var-search, 1em);
}
.p-navEl-link[data-nav-id="currentVisitors"]::before {
	.m-faContent(@fa-var-users, 1em);
}
.p-navEl-link[data-nav-id="newProfilePosts"]::before {
	.m-faContent(@fa-var-pencil, 1em);
}
.p-navEl-link[data-nav-id="searchProfilePosts"]::before {
	.m-faContent(@fa-var-commenting, 1em);
}
</xf:if>


// #### offCanvasMenu LinkHolders Icons ####

<xf:if is="property('dt_offcanvasmenu_linkholder_glyphs')">

.offCanvasMenu-link::before {
	.m-faBase();
	padding-right: 6px;
}
.offCanvasMenu-link[href*="login"]::before {
	.m-faContent(@fa-var-sign-in, 1em);
}
.offCanvasMenu-link[href*="register"]::before {
	.m-faContent(@fa-var-user-circle, 1em);
}
.offCanvasMenu-link[data-nav-id="home"]::before {
	.m-faContent(@fa-var-home, 1em);
}
.offCanvasMenu-link[data-nav-id="forums"]::before {
	.m-faContent(@fa-var-comments, 1em);
}
.offCanvasMenu-link[data-nav-id="whatsNew"]::before {
	.m-faContent(@fa-var-bolt, 1em);
}
.offCanvasMenu-link[data-nav-id="members"]::before {
	.m-faContent(@fa-var-users, 1em);
}
.offCanvasMenu-link[data-nav-id="xfmg"]::before {
	.m-faContent(@fa-var-picture-o, 1em);
}
.offCanvasMenu-link[data-nav-id="xfrm"]::before {
	.m-faContent(@fa-var-download, 1em);
}
</xf:if>

// #### offCanvasMenu Links Icons ####

<xf:if is="property('dt_offcanvasmenu_links_glyphs')">
.offCanvasMenu-link::before {
	.m-faBase();
	padding-right: 6px;
}
.offCanvasMenu-link[data-nav-id="newPosts"]::before {
	.m-faContent(@fa-var-fire, 1em);
}
.offCanvasMenu-link[data-nav-id="findThreads"]::before {
	.m-faContent(@fa-var-comment, 1em);
}
.offCanvasMenu-link[data-nav-id="yourThreads"]::before {
	.m-faContent(@fa-var-comments);
}
.offCanvasMenu-link[data-nav-id="contributedThreads"]::before {
	.m-faContent(@fa-var-comments-o);
}
.offCanvasMenu-link[data-nav-id="unansweredThreads"]::before {
	.m-faContent(@fa-var-comment-o);
}
.offCanvasMenu-link[data-nav-id="watched"]::before {
	.m-faContent(@fa-var-bell, 1em);
}
.offCanvasMenu-link[data-nav-id="watchedThreads"]::before {
	.m-faContent(@fa-var-globe);
}
.offCanvasMenu-link[data-nav-id="watchedForums"]::before {
	.m-faContent(@fa-var-flag);
}
.offCanvasMenu-link[data-nav-id="searchForums"]::before {
	.m-faContent(@fa-var-search, 1em);
}
.offCanvasMenu-link[data-nav-id="markForumsRead"]::before {
	.m-faContent(@fa-var-eye-slash, 1em);
}
.offCanvasMenu-link[data-nav-id="whatsNewPosts"]::before {
	.m-faContent(@fa-var-file-text-o, 1em);
}
.offCanvasMenu-link[data-nav-id="xfmgWhatsNewNewMedia"]::before {
	.m-faContent(@fa-var-picture-o, 1em);
}
.offCanvasMenu-link[data-nav-id="xfmgWhatsNewMediaComments"]::before {
	.m-faContent(@fa-var-comments-o, 1em);
}
.offCanvasMenu-link[data-nav-id="xfrmNewResources"]::before {
	.m-faContent(@fa-var-download, 1em);
}
.offCanvasMenu-link[data-nav-id="whatsNewProfilePosts"]::before {
	.m-faContent(@fa-var-pencil, 1em);
}
.offCanvasMenu-link[data-nav-id="whatsNewNewsFeed"]::before {
	.m-faContent(@fa-var-rss, 1em);
}
.offCanvasMenu-link[data-nav-id="latestActivity"]::before {
	.m-faContent(@fa-var-clock-o, 1em);
}
.offCanvasMenu-link[data-nav-id="xfmgNewMedia"]::before {
	.m-faContent(@fa-var-bolt, 1em);
}
.offCanvasMenu-link[data-nav-id="xfmgNewComments"]::before {
	.m-faContent(@fa-var-comments-o, 1em);
}
.offCanvasMenu-link[data-nav-id="xfmgAddMedia"]::before {
	.m-faContent(@fa-var-plus-square, 1em);
}
.offCanvasMenu-link[data-nav-id="xfmgYourContent"]::before {
	.m-faContent(@fa-var-file-image-o, 1em);
}
.offCanvasMenu-link[data-nav-id="xfmgYourMedia"]::before {
	.m-faContent(@fa-var-file-picture-o);
}
.offCanvasMenu-link[data-nav-id="xfmgYourAlbums"]::before {
	.m-faContent(@fa-var-file-picture-o);
}
.offCanvasMenu-link[data-nav-id="xfmgWatchedContent"]::before {
	.m-faContent(@fa-var-bell, 1em);
}
.offCanvasMenu-link[data-nav-id="xfmgWatchedMedia"]::before {
	.m-faContent(@fa-var-bell);
}
.offCanvasMenu-link[data-nav-id="xfmgWatchedAlbums"]::before {
	.m-faContent(@fa-var-globe);
}
.offCanvasMenu-link[data-nav-id="xfmgWatchedCategories"]::before {
	.m-faContent(@fa-var-flag);
}
.offCanvasMenu-link[data-nav-id="xfmgSearchMedia"]::before {
	.m-faContent(@fa-var-search, 1em);
}
.offCanvasMenu-link[data-nav-id="xfmgMarkViewed"]::before {
	.m-faContent(@fa-var-eye-slash, 1em);
}
.offCanvasMenu-link[data-nav-id="xfrmLatestReviews"]::before {
	.m-faContent(@fa-var-star, 1em);
}
.offCanvasMenu-link[data-nav-id="xfrmYourResources"]::before {
	.m-faContent(@fa-var-cloud-download, 1em);
}
.offCanvasMenu-link[data-nav-id="xfrmWatched"]::before {
	.m-faContent(@fa-var-bell, 1em);
}
.offCanvasMenu-link[data-nav-id="xfrmWatchedResources"]::before {
	.m-faContent(@fa-var-bell);
}
.offCanvasMenu-link[data-nav-id="xfrmWatchedCategories"]::before {
	.m-faContent(@fa-var-globe);
}
.offCanvasMenu-link[data-nav-id="xfrmSearchResources"]::before {
	.m-faContent(@fa-var-search, 1em);
}
.offCanvasMenu-link[data-nav-id="currentVisitors"]::before {
	.m-faContent(@fa-var-users, 1em);
}
.offCanvasMenu-link[data-nav-id="newProfilePosts"]::before {
	.m-faContent(@fa-var-pencil, 1em);
}
.offCanvasMenu-link[data-nav-id="searchProfilePosts"]::before {
	.m-faContent(@fa-var-commenting, 1em);
}
</xf:if>

// #### Visitor Menu Icons ####

<xf:if is="property('dt_visitor_menu_glyphs')">
.menu--account {
	.menu-linkRow::before {
		.m-faBase();
		padding-right: 4px;
	}
	.menu-linkRow[href*="news-feed"]::before {
		.m-faContent(@fa-var-rss, 1em);
	}
	.menu-linkRow[href*="likes"]::before {
		.m-faContent(@fa-var-thumbs-up, 1em);
	}
	.menu-linkRow[href*="search/member"]::before {
		.m-faContent(@fa-var-comments, 1em);
	}
	.menu-linkRow[href*="account-details"]::before {
		.m-faContent(@fa-var-user, 1em);
	}
	.menu-linkRow[href*="preferences"]::before {
		.m-faContent(@fa-var-cog, 1em);
	}
	.menu-linkRow[href*="signature"]::before {
		.m-faContent(@fa-var-pencil, 1em);
	}
	.menu-linkRow[href*="security"]::before {
		.m-faContent(@fa-var-lock, 1em);
	}
	.menu-linkRow[href*="upgrades"]::before {
		.m-faContent(@fa-var-star, 1em);
	}
	.menu-linkRow[href*="connected-accounts"]::before {
		.m-faContent(@fa-var-user-plus, 1em);
	}
	.menu-linkRow[href*="following"]::before {
		.m-faContent(@fa-var-users, 1em);
	}
	.menu-linkRow[href*="privacy"]::before {
		.m-faContent(@fa-var-user-secret, 1em);
	}
	.menu-linkRow[href*="ignored"]::before {
		.m-faContent(@fa-var-user-times, 1em);
	}
	.menu-linkRow[href*="logout"]::before {
		.m-faContent(@fa-var-sign-out, 1em);
	}
	.menu-linkRow[href*="conversations"]::before {
		.m-faContent(@fa-var-envelope, 1em);
	}
	.menu-linkRow[href*="alerts"]::before {
		.m-faContent(@fa-var-bell, 1em);
	}
}
</xf:if>

// #### Sidebar Glyphs ####

<xf:if is="property('dt_sidebar_glyphs')">

.block[data-widget-id] .block-minorHeader::before {
	.m-faBase();
	padding-right: 4px;
}
.block[data-widget-section="staffMembers"] .block-minorHeader::before {
	.m-faContent(@fa-var-user, 1em);
}
.block[data-widget-section="onlineNow"] .block-minorHeader::before {
	.m-faContent(@fa-var-users, 1em);
}
.block[data-widget-definition="new_threads"] .block-minorHeader::before,
.block[data-widget-definition="new_posts"] .block-minorHeader::before {
	.m-faContent(@fa-var-comments, 1em);
}
.block[data-widget-definition="new_profile_posts"] .block-minorHeader::before {
	.m-faContent(@fa-var-commenting, 1em);
}
.block[data-widget-definition="board_totals"] .block-minorHeader::before,
.block[data-widget-definition="online_statistics"] .block-minorHeader::before,
.block[data-widget-definition="forum_statistics"] .block-minorHeader::before,
.block[data-widget-definition="xfmg_gallery_statistics"] .block-minorHeader::before{
	.m-faContent(@fa-var-bar-chart, 1em);
}
.block[data-widget-definition="share_page"] .block-minorHeader::before {
	.m-faContent(@fa-var-share-alt, 1em);
}
.block[data-widget-definition="find_member"] .block-minorHeader::before {
	.m-faContent(@fa-var-search, 1em);
}
.block[data-widget-definition="newest_members"] .block-minorHeader::before {
	.m-faContent(@fa-var-user-circle-o, 1em);
}
.block[data-widget-definition="xfrm_top_resources"] .block-minorHeader::before {
	.m-faContent(@fa-var-bolt, 1em);
}
.block[data-widget-definition="xfrm_latest_reviews"] .block-minorHeader::before {
	.m-faContent(@fa-var-star, 1em);
}
.block[data-widget-key="xfrm_overview_top_authors"] .block-minorHeader::before {
	.m-faContent(@fa-var-user, 1em);
}
.block[data-widget-definition="xfrm_new_resources"] .block-minorHeader::before {
	.m-faContent(@fa-var-download, 1em);
}
.block[data-widget-definition="xfmg_media_slider"] .block-minorHeader::before {
	.m-faContent(@fa-var-picture-o, 1em);
}

.pre-footer--content.-social h3::before {
	.m-faBase();
	.m-faContent(@fa-var-retweet, 1em);
	padding-right: 4px;
}

.pre-footer--content.-links h3::before {
	.m-faBase();
	.m-faContent(@fa-var-link, 1em);
	padding-right: 4px;
}

</xf:if>

// #### Message Glyphs ####

<xf:if is="property('dt_messages_glyphs')">

.actionBar-action.actionBar-action--report::before {
    .m-faContent("@{fa-var-exclamation-triangle}\20");
}
.actionBar-action.actionBar-action--history::before {
    .m-faContent("@{fa-var-history}\20");
}
.actionBar-action.actionBar-action--edit::before {
    .m-faContent("@{fa-var-pencil-square}\20");
}
.actionBar-action.actionBar-action--delete::before {
    .m-faContent("@{fa-var-trash}\20");
}
.actionBar-action.actionBar-action--spam::before {
    .m-faContent("@{fa-var-exclamation-circle}\20");
}
.actionBar-action.actionBar-action--ip::before {
    .m-faContent("@{fa-var-user}\20");
}
.actionBar-action.actionBar-action--warn::before {
    .m-faContent("@{fa-var-exclamation}\20");
}

</xf:if>


// #### Discussion List Icons ####

<xf:if is="property('dt_discussion_glyphs')">

.structItem-parts a.username::before,
.structItem-cell--latest .username::before {
	.m-faBase();
	.m-faContent(@fa-var-user, 1em);
	padding-right: 2px;
}
.structItem-parts .structItem-startDate a::before,
.structItem-cell--latest .structItem-latestDate::before {
	.m-faBase();
	.m-faContent(@fa-var-clock-o, 1em);
	padding-right: 2px;
}

</xf:if>

// #### Member Profiles Tabs Icons ####

<xf:if is="property('dt_profile_tabs_glyphs')">

.block-tabHeader.block-tabHeader--memberTabs .tabs-tab::before {
	.m-faBase();
	padding-right: 4px;
}
.block-tabHeader.block-tabHeader--memberTabs .tabs-tab[aria-controls="profile-posts"]::before {
	.m-faContent(@fa-var-comments-o, 1em);
}
.block-tabHeader.block-tabHeader--memberTabs .tabs-tab[id="latest-activity"]::before {
	.m-faContent(@fa-var-clock-o, 1em);
}
.block-tabHeader.block-tabHeader--memberTabs .tabs-tab[id="recent-content"]::before {
	.m-faContent(@fa-var-pencil-square-o, 1em);
}
.block-tabHeader.block-tabHeader--memberTabs .tabs-tab[id="about"]::before {
	.m-faContent(@fa-var-info-circle, 1em);
}
.block-tabHeader.block-tabHeader--memberTabs .tabs-tab[id="resources"]::before {
	.m-faContent(@fa-var-download, 1em);
}
.block-tabHeader.block-tabHeader--memberTabs .tabs-tab[id="xfmgMedia"]::before {
	.m-faContent(@fa-var-picture-o, 1em);
}
</xf:if>

// #### Member Profiles Tabs Icons ####

<xf:if is="property('dt_account_wrapper_glyphs')">
.template-account_details {
	.p-body-sideNav {
		.block-container {
			.blockLink::before {
				.m-faBase();
				padding-right: 10px;
			}
			.blockLink[href*="members"]::before {
				.m-faContent(@fa-var-user-circle, 1em);
			}
			.blockLink[href*="alerts"]::before {
				.m-faContent(@fa-var-bell, 1em);
			}
			.blockLink[href*="likes"]::before {
				.m-faContent(@fa-var-thumbs-up, 1em);
			}
			.blockLink[href*="account-details"]::before {
				.m-faContent(@fa-var-user, 1em);
			}
			.blockLink[href*="security"]::before {
				.m-faContent(@fa-var-lock, 1em);
			}
			.blockLink[href*="privacy"]::before {
				.m-faContent(@fa-var-user-secret, 1em);
			}
			.blockLink[href*="preferences"]::before {
				.m-faContent(@fa-var-cog, 1em);
			}
			.blockLink[href*="signature"]::before {
				.m-faContent(@fa-var-pencil, 1em);
			}
			.blockLink[href*="following"]::before {
				.m-faContent(@fa-var-users, 1em);
			}
			.blockLink[href*="ignored"]::before {
				.m-faContent(@fa-var-user-times, 1em);
			}
			.blockLink[href*="logout"]::before {
				.m-faContent(@fa-var-sign-out, 1em);
			}
		}
	}
}
</xf:if>]]></template>
    <template title="core_fa.less" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[/*!
 * Font Awesome Pro by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Commercial License)
 */
@font-face {
  font-family: 'Font Awesome 5 Duotone';
  font-style: normal;
  font-weight: 900;
  src: url('@{fa-font-path}/fa-duotone-900.woff2') format('woff2'),
    url('@{fa-font-path}/fa-duotone-900.woff') format('woff');
}

.fad {
  font-family: 'Font Awesome 5 Duotone';
  position: relative;
  font-weight: 900;
}

.fad:before {
  position: absolute;
  color: ~'var(--@{fa-css-prefix}-primary-color, inherit)';
  opacity: @fa-primary-opacity;
  opacity: ~'var(--@{fa-css-prefix}-primary-opacity, @{fa-primary-opacity})';
}

.fad:after {
  color: ~'var(--@{fa-css-prefix}-secondary-color, inherit)';
  opacity: @fa-secondary-opacity;
  opacity: ~'var(--@{fa-css-prefix}-secondary-opacity, @{fa-secondary-opacity})';
}

.fad.@{fa-css-prefix}-swap-opacity:before {
  opacity: @fa-secondary-opacity;
  opacity: ~'var(--@{fa-css-prefix}-secondary-opacity, @{fa-secondary-opacity})';
}

.fad.@{fa-css-prefix}-swap-opacity:after {
  opacity: @fa-primary-opacity;
  opacity: ~'var(--@{fa-css-prefix}-primary-opacity, @{fa-primary-opacity})';
}

.fad.@{fa-css-prefix}-inverse {
  color: @fa-inverse;
}

.fad.@{fa-css-prefix}-stack-1x, .fad.@{fa-css-prefix}-stack-2x {
  position: absolute;
}

.fad.@{fa-css-prefix}-stack-1x:before,
.fad.@{fa-css-prefix}-stack-2x:before,
.fad.@{fa-css-prefix}-fw:before {
  left: 50%;
  transform: translateX(-50%);
}

.fad.@{fa-css-prefix}-abacus:after { content: replace(@fa-var-abacus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-acorn:after { content: replace(@fa-var-acorn, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ad:after { content: replace(@fa-var-ad, "\\", "\\10"); }
.fad.@{fa-css-prefix}-address-book:after { content: replace(@fa-var-address-book, "\\", "\\10"); }
.fad.@{fa-css-prefix}-address-card:after { content: replace(@fa-var-address-card, "\\", "\\10"); }
.fad.@{fa-css-prefix}-adjust:after { content: replace(@fa-var-adjust, "\\", "\\10"); }
.fad.@{fa-css-prefix}-air-freshener:after { content: replace(@fa-var-air-freshener, "\\", "\\10"); }
.fad.@{fa-css-prefix}-alarm-clock:after { content: replace(@fa-var-alarm-clock, "\\", "\\10"); }
.fad.@{fa-css-prefix}-alarm-exclamation:after { content: replace(@fa-var-alarm-exclamation, "\\", "\\10"); }
.fad.@{fa-css-prefix}-alarm-plus:after { content: replace(@fa-var-alarm-plus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-alarm-snooze:after { content: replace(@fa-var-alarm-snooze, "\\", "\\10"); }
.fad.@{fa-css-prefix}-alicorn:after { content: replace(@fa-var-alicorn, "\\", "\\10"); }
.fad.@{fa-css-prefix}-align-center:after { content: replace(@fa-var-align-center, "\\", "\\10"); }
.fad.@{fa-css-prefix}-align-justify:after { content: replace(@fa-var-align-justify, "\\", "\\10"); }
.fad.@{fa-css-prefix}-align-left:after { content: replace(@fa-var-align-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-align-right:after { content: replace(@fa-var-align-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-align-slash:after { content: replace(@fa-var-align-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-allergies:after { content: replace(@fa-var-allergies, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ambulance:after { content: replace(@fa-var-ambulance, "\\", "\\10"); }
.fad.@{fa-css-prefix}-american-sign-language-interpreting:after { content: replace(@fa-var-american-sign-language-interpreting, "\\", "\\10"); }
.fad.@{fa-css-prefix}-analytics:after { content: replace(@fa-var-analytics, "\\", "\\10"); }
.fad.@{fa-css-prefix}-anchor:after { content: replace(@fa-var-anchor, "\\", "\\10"); }
.fad.@{fa-css-prefix}-angel:after { content: replace(@fa-var-angel, "\\", "\\10"); }
.fad.@{fa-css-prefix}-angle-double-down:after { content: replace(@fa-var-angle-double-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-angle-double-left:after { content: replace(@fa-var-angle-double-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-angle-double-right:after { content: replace(@fa-var-angle-double-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-angle-double-up:after { content: replace(@fa-var-angle-double-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-angle-down:after { content: replace(@fa-var-angle-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-angle-left:after { content: replace(@fa-var-angle-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-angle-right:after { content: replace(@fa-var-angle-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-angle-up:after { content: replace(@fa-var-angle-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-angry:after { content: replace(@fa-var-angry, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ankh:after { content: replace(@fa-var-ankh, "\\", "\\10"); }
.fad.@{fa-css-prefix}-apple-alt:after { content: replace(@fa-var-apple-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-apple-crate:after { content: replace(@fa-var-apple-crate, "\\", "\\10"); }
.fad.@{fa-css-prefix}-archive:after { content: replace(@fa-var-archive, "\\", "\\10"); }
.fad.@{fa-css-prefix}-archway:after { content: replace(@fa-var-archway, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-alt-circle-down:after { content: replace(@fa-var-arrow-alt-circle-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-alt-circle-left:after { content: replace(@fa-var-arrow-alt-circle-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-alt-circle-right:after { content: replace(@fa-var-arrow-alt-circle-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-alt-circle-up:after { content: replace(@fa-var-arrow-alt-circle-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-alt-down:after { content: replace(@fa-var-arrow-alt-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-alt-from-bottom:after { content: replace(@fa-var-arrow-alt-from-bottom, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-alt-from-left:after { content: replace(@fa-var-arrow-alt-from-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-alt-from-right:after { content: replace(@fa-var-arrow-alt-from-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-alt-from-top:after { content: replace(@fa-var-arrow-alt-from-top, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-alt-left:after { content: replace(@fa-var-arrow-alt-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-alt-right:after { content: replace(@fa-var-arrow-alt-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-alt-square-down:after { content: replace(@fa-var-arrow-alt-square-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-alt-square-left:after { content: replace(@fa-var-arrow-alt-square-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-alt-square-right:after { content: replace(@fa-var-arrow-alt-square-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-alt-square-up:after { content: replace(@fa-var-arrow-alt-square-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-alt-to-bottom:after { content: replace(@fa-var-arrow-alt-to-bottom, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-alt-to-left:after { content: replace(@fa-var-arrow-alt-to-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-alt-to-right:after { content: replace(@fa-var-arrow-alt-to-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-alt-to-top:after { content: replace(@fa-var-arrow-alt-to-top, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-alt-up:after { content: replace(@fa-var-arrow-alt-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-circle-down:after { content: replace(@fa-var-arrow-circle-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-circle-left:after { content: replace(@fa-var-arrow-circle-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-circle-right:after { content: replace(@fa-var-arrow-circle-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-circle-up:after { content: replace(@fa-var-arrow-circle-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-down:after { content: replace(@fa-var-arrow-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-from-bottom:after { content: replace(@fa-var-arrow-from-bottom, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-from-left:after { content: replace(@fa-var-arrow-from-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-from-right:after { content: replace(@fa-var-arrow-from-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-from-top:after { content: replace(@fa-var-arrow-from-top, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-left:after { content: replace(@fa-var-arrow-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-right:after { content: replace(@fa-var-arrow-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-square-down:after { content: replace(@fa-var-arrow-square-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-square-left:after { content: replace(@fa-var-arrow-square-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-square-right:after { content: replace(@fa-var-arrow-square-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-square-up:after { content: replace(@fa-var-arrow-square-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-to-bottom:after { content: replace(@fa-var-arrow-to-bottom, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-to-left:after { content: replace(@fa-var-arrow-to-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-to-right:after { content: replace(@fa-var-arrow-to-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-to-top:after { content: replace(@fa-var-arrow-to-top, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrow-up:after { content: replace(@fa-var-arrow-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrows:after { content: replace(@fa-var-arrows, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrows-alt:after { content: replace(@fa-var-arrows-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrows-alt-h:after { content: replace(@fa-var-arrows-alt-h, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrows-alt-v:after { content: replace(@fa-var-arrows-alt-v, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrows-h:after { content: replace(@fa-var-arrows-h, "\\", "\\10"); }
.fad.@{fa-css-prefix}-arrows-v:after { content: replace(@fa-var-arrows-v, "\\", "\\10"); }
.fad.@{fa-css-prefix}-assistive-listening-systems:after { content: replace(@fa-var-assistive-listening-systems, "\\", "\\10"); }
.fad.@{fa-css-prefix}-asterisk:after { content: replace(@fa-var-asterisk, "\\", "\\10"); }
.fad.@{fa-css-prefix}-at:after { content: replace(@fa-var-at, "\\", "\\10"); }
.fad.@{fa-css-prefix}-atlas:after { content: replace(@fa-var-atlas, "\\", "\\10"); }
.fad.@{fa-css-prefix}-atom:after { content: replace(@fa-var-atom, "\\", "\\10"); }
.fad.@{fa-css-prefix}-atom-alt:after { content: replace(@fa-var-atom-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-audio-description:after { content: replace(@fa-var-audio-description, "\\", "\\10"); }
.fad.@{fa-css-prefix}-award:after { content: replace(@fa-var-award, "\\", "\\10"); }
.fad.@{fa-css-prefix}-axe:after { content: replace(@fa-var-axe, "\\", "\\10"); }
.fad.@{fa-css-prefix}-axe-battle:after { content: replace(@fa-var-axe-battle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-baby:after { content: replace(@fa-var-baby, "\\", "\\10"); }
.fad.@{fa-css-prefix}-baby-carriage:after { content: replace(@fa-var-baby-carriage, "\\", "\\10"); }
.fad.@{fa-css-prefix}-backpack:after { content: replace(@fa-var-backpack, "\\", "\\10"); }
.fad.@{fa-css-prefix}-backspace:after { content: replace(@fa-var-backspace, "\\", "\\10"); }
.fad.@{fa-css-prefix}-backward:after { content: replace(@fa-var-backward, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bacon:after { content: replace(@fa-var-bacon, "\\", "\\10"); }
.fad.@{fa-css-prefix}-badge:after { content: replace(@fa-var-badge, "\\", "\\10"); }
.fad.@{fa-css-prefix}-badge-check:after { content: replace(@fa-var-badge-check, "\\", "\\10"); }
.fad.@{fa-css-prefix}-badge-dollar:after { content: replace(@fa-var-badge-dollar, "\\", "\\10"); }
.fad.@{fa-css-prefix}-badge-percent:after { content: replace(@fa-var-badge-percent, "\\", "\\10"); }
.fad.@{fa-css-prefix}-badger-honey:after { content: replace(@fa-var-badger-honey, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bags-shopping:after { content: replace(@fa-var-bags-shopping, "\\", "\\10"); }
.fad.@{fa-css-prefix}-balance-scale:after { content: replace(@fa-var-balance-scale, "\\", "\\10"); }
.fad.@{fa-css-prefix}-balance-scale-left:after { content: replace(@fa-var-balance-scale-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-balance-scale-right:after { content: replace(@fa-var-balance-scale-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ball-pile:after { content: replace(@fa-var-ball-pile, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ballot:after { content: replace(@fa-var-ballot, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ballot-check:after { content: replace(@fa-var-ballot-check, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ban:after { content: replace(@fa-var-ban, "\\", "\\10"); }
.fad.@{fa-css-prefix}-band-aid:after { content: replace(@fa-var-band-aid, "\\", "\\10"); }
.fad.@{fa-css-prefix}-barcode:after { content: replace(@fa-var-barcode, "\\", "\\10"); }
.fad.@{fa-css-prefix}-barcode-alt:after { content: replace(@fa-var-barcode-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-barcode-read:after { content: replace(@fa-var-barcode-read, "\\", "\\10"); }
.fad.@{fa-css-prefix}-barcode-scan:after { content: replace(@fa-var-barcode-scan, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bars:after { content: replace(@fa-var-bars, "\\", "\\10"); }
.fad.@{fa-css-prefix}-baseball:after { content: replace(@fa-var-baseball, "\\", "\\10"); }
.fad.@{fa-css-prefix}-baseball-ball:after { content: replace(@fa-var-baseball-ball, "\\", "\\10"); }
.fad.@{fa-css-prefix}-basketball-ball:after { content: replace(@fa-var-basketball-ball, "\\", "\\10"); }
.fad.@{fa-css-prefix}-basketball-hoop:after { content: replace(@fa-var-basketball-hoop, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bat:after { content: replace(@fa-var-bat, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bath:after { content: replace(@fa-var-bath, "\\", "\\10"); }
.fad.@{fa-css-prefix}-battery-bolt:after { content: replace(@fa-var-battery-bolt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-battery-empty:after { content: replace(@fa-var-battery-empty, "\\", "\\10"); }
.fad.@{fa-css-prefix}-battery-full:after { content: replace(@fa-var-battery-full, "\\", "\\10"); }
.fad.@{fa-css-prefix}-battery-half:after { content: replace(@fa-var-battery-half, "\\", "\\10"); }
.fad.@{fa-css-prefix}-battery-quarter:after { content: replace(@fa-var-battery-quarter, "\\", "\\10"); }
.fad.@{fa-css-prefix}-battery-slash:after { content: replace(@fa-var-battery-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-battery-three-quarters:after { content: replace(@fa-var-battery-three-quarters, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bed:after { content: replace(@fa-var-bed, "\\", "\\10"); }
.fad.@{fa-css-prefix}-beer:after { content: replace(@fa-var-beer, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bell:after { content: replace(@fa-var-bell, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bell-exclamation:after { content: replace(@fa-var-bell-exclamation, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bell-plus:after { content: replace(@fa-var-bell-plus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bell-school:after { content: replace(@fa-var-bell-school, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bell-school-slash:after { content: replace(@fa-var-bell-school-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bell-slash:after { content: replace(@fa-var-bell-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bells:after { content: replace(@fa-var-bells, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bezier-curve:after { content: replace(@fa-var-bezier-curve, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bible:after { content: replace(@fa-var-bible, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bicycle:after { content: replace(@fa-var-bicycle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-biking:after { content: replace(@fa-var-biking, "\\", "\\10"); }
.fad.@{fa-css-prefix}-biking-mountain:after { content: replace(@fa-var-biking-mountain, "\\", "\\10"); }
.fad.@{fa-css-prefix}-binoculars:after { content: replace(@fa-var-binoculars, "\\", "\\10"); }
.fad.@{fa-css-prefix}-biohazard:after { content: replace(@fa-var-biohazard, "\\", "\\10"); }
.fad.@{fa-css-prefix}-birthday-cake:after { content: replace(@fa-var-birthday-cake, "\\", "\\10"); }
.fad.@{fa-css-prefix}-blanket:after { content: replace(@fa-var-blanket, "\\", "\\10"); }
.fad.@{fa-css-prefix}-blender:after { content: replace(@fa-var-blender, "\\", "\\10"); }
.fad.@{fa-css-prefix}-blender-phone:after { content: replace(@fa-var-blender-phone, "\\", "\\10"); }
.fad.@{fa-css-prefix}-blind:after { content: replace(@fa-var-blind, "\\", "\\10"); }
.fad.@{fa-css-prefix}-blog:after { content: replace(@fa-var-blog, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bold:after { content: replace(@fa-var-bold, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bolt:after { content: replace(@fa-var-bolt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bomb:after { content: replace(@fa-var-bomb, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bone:after { content: replace(@fa-var-bone, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bone-break:after { content: replace(@fa-var-bone-break, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bong:after { content: replace(@fa-var-bong, "\\", "\\10"); }
.fad.@{fa-css-prefix}-book:after { content: replace(@fa-var-book, "\\", "\\10"); }
.fad.@{fa-css-prefix}-book-alt:after { content: replace(@fa-var-book-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-book-dead:after { content: replace(@fa-var-book-dead, "\\", "\\10"); }
.fad.@{fa-css-prefix}-book-heart:after { content: replace(@fa-var-book-heart, "\\", "\\10"); }
.fad.@{fa-css-prefix}-book-medical:after { content: replace(@fa-var-book-medical, "\\", "\\10"); }
.fad.@{fa-css-prefix}-book-open:after { content: replace(@fa-var-book-open, "\\", "\\10"); }
.fad.@{fa-css-prefix}-book-reader:after { content: replace(@fa-var-book-reader, "\\", "\\10"); }
.fad.@{fa-css-prefix}-book-spells:after { content: replace(@fa-var-book-spells, "\\", "\\10"); }
.fad.@{fa-css-prefix}-book-user:after { content: replace(@fa-var-book-user, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bookmark:after { content: replace(@fa-var-bookmark, "\\", "\\10"); }
.fad.@{fa-css-prefix}-books:after { content: replace(@fa-var-books, "\\", "\\10"); }
.fad.@{fa-css-prefix}-books-medical:after { content: replace(@fa-var-books-medical, "\\", "\\10"); }
.fad.@{fa-css-prefix}-boot:after { content: replace(@fa-var-boot, "\\", "\\10"); }
.fad.@{fa-css-prefix}-booth-curtain:after { content: replace(@fa-var-booth-curtain, "\\", "\\10"); }
.fad.@{fa-css-prefix}-border-all:after { content: replace(@fa-var-border-all, "\\", "\\10"); }
.fad.@{fa-css-prefix}-border-bottom:after { content: replace(@fa-var-border-bottom, "\\", "\\10"); }
.fad.@{fa-css-prefix}-border-inner:after { content: replace(@fa-var-border-inner, "\\", "\\10"); }
.fad.@{fa-css-prefix}-border-left:after { content: replace(@fa-var-border-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-border-none:after { content: replace(@fa-var-border-none, "\\", "\\10"); }
.fad.@{fa-css-prefix}-border-outer:after { content: replace(@fa-var-border-outer, "\\", "\\10"); }
.fad.@{fa-css-prefix}-border-right:after { content: replace(@fa-var-border-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-border-style:after { content: replace(@fa-var-border-style, "\\", "\\10"); }
.fad.@{fa-css-prefix}-border-style-alt:after { content: replace(@fa-var-border-style-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-border-top:after { content: replace(@fa-var-border-top, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bow-arrow:after { content: replace(@fa-var-bow-arrow, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bowling-ball:after { content: replace(@fa-var-bowling-ball, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bowling-pins:after { content: replace(@fa-var-bowling-pins, "\\", "\\10"); }
.fad.@{fa-css-prefix}-box:after { content: replace(@fa-var-box, "\\", "\\10"); }
.fad.@{fa-css-prefix}-box-alt:after { content: replace(@fa-var-box-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-box-ballot:after { content: replace(@fa-var-box-ballot, "\\", "\\10"); }
.fad.@{fa-css-prefix}-box-check:after { content: replace(@fa-var-box-check, "\\", "\\10"); }
.fad.@{fa-css-prefix}-box-fragile:after { content: replace(@fa-var-box-fragile, "\\", "\\10"); }
.fad.@{fa-css-prefix}-box-full:after { content: replace(@fa-var-box-full, "\\", "\\10"); }
.fad.@{fa-css-prefix}-box-heart:after { content: replace(@fa-var-box-heart, "\\", "\\10"); }
.fad.@{fa-css-prefix}-box-open:after { content: replace(@fa-var-box-open, "\\", "\\10"); }
.fad.@{fa-css-prefix}-box-up:after { content: replace(@fa-var-box-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-box-usd:after { content: replace(@fa-var-box-usd, "\\", "\\10"); }
.fad.@{fa-css-prefix}-boxes:after { content: replace(@fa-var-boxes, "\\", "\\10"); }
.fad.@{fa-css-prefix}-boxes-alt:after { content: replace(@fa-var-boxes-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-boxing-glove:after { content: replace(@fa-var-boxing-glove, "\\", "\\10"); }
.fad.@{fa-css-prefix}-brackets:after { content: replace(@fa-var-brackets, "\\", "\\10"); }
.fad.@{fa-css-prefix}-brackets-curly:after { content: replace(@fa-var-brackets-curly, "\\", "\\10"); }
.fad.@{fa-css-prefix}-braille:after { content: replace(@fa-var-braille, "\\", "\\10"); }
.fad.@{fa-css-prefix}-brain:after { content: replace(@fa-var-brain, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bread-loaf:after { content: replace(@fa-var-bread-loaf, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bread-slice:after { content: replace(@fa-var-bread-slice, "\\", "\\10"); }
.fad.@{fa-css-prefix}-briefcase:after { content: replace(@fa-var-briefcase, "\\", "\\10"); }
.fad.@{fa-css-prefix}-briefcase-medical:after { content: replace(@fa-var-briefcase-medical, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bring-forward:after { content: replace(@fa-var-bring-forward, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bring-front:after { content: replace(@fa-var-bring-front, "\\", "\\10"); }
.fad.@{fa-css-prefix}-broadcast-tower:after { content: replace(@fa-var-broadcast-tower, "\\", "\\10"); }
.fad.@{fa-css-prefix}-broom:after { content: replace(@fa-var-broom, "\\", "\\10"); }
.fad.@{fa-css-prefix}-browser:after { content: replace(@fa-var-browser, "\\", "\\10"); }
.fad.@{fa-css-prefix}-brush:after { content: replace(@fa-var-brush, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bug:after { content: replace(@fa-var-bug, "\\", "\\10"); }
.fad.@{fa-css-prefix}-building:after { content: replace(@fa-var-building, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bullhorn:after { content: replace(@fa-var-bullhorn, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bullseye:after { content: replace(@fa-var-bullseye, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bullseye-arrow:after { content: replace(@fa-var-bullseye-arrow, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bullseye-pointer:after { content: replace(@fa-var-bullseye-pointer, "\\", "\\10"); }
.fad.@{fa-css-prefix}-burger-soda:after { content: replace(@fa-var-burger-soda, "\\", "\\10"); }
.fad.@{fa-css-prefix}-burn:after { content: replace(@fa-var-burn, "\\", "\\10"); }
.fad.@{fa-css-prefix}-burrito:after { content: replace(@fa-var-burrito, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bus:after { content: replace(@fa-var-bus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bus-alt:after { content: replace(@fa-var-bus-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-bus-school:after { content: replace(@fa-var-bus-school, "\\", "\\10"); }
.fad.@{fa-css-prefix}-business-time:after { content: replace(@fa-var-business-time, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cabinet-filing:after { content: replace(@fa-var-cabinet-filing, "\\", "\\10"); }
.fad.@{fa-css-prefix}-calculator:after { content: replace(@fa-var-calculator, "\\", "\\10"); }
.fad.@{fa-css-prefix}-calculator-alt:after { content: replace(@fa-var-calculator-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-calendar:after { content: replace(@fa-var-calendar, "\\", "\\10"); }
.fad.@{fa-css-prefix}-calendar-alt:after { content: replace(@fa-var-calendar-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-calendar-check:after { content: replace(@fa-var-calendar-check, "\\", "\\10"); }
.fad.@{fa-css-prefix}-calendar-day:after { content: replace(@fa-var-calendar-day, "\\", "\\10"); }
.fad.@{fa-css-prefix}-calendar-edit:after { content: replace(@fa-var-calendar-edit, "\\", "\\10"); }
.fad.@{fa-css-prefix}-calendar-exclamation:after { content: replace(@fa-var-calendar-exclamation, "\\", "\\10"); }
.fad.@{fa-css-prefix}-calendar-minus:after { content: replace(@fa-var-calendar-minus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-calendar-plus:after { content: replace(@fa-var-calendar-plus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-calendar-star:after { content: replace(@fa-var-calendar-star, "\\", "\\10"); }
.fad.@{fa-css-prefix}-calendar-times:after { content: replace(@fa-var-calendar-times, "\\", "\\10"); }
.fad.@{fa-css-prefix}-calendar-week:after { content: replace(@fa-var-calendar-week, "\\", "\\10"); }
.fad.@{fa-css-prefix}-camera:after { content: replace(@fa-var-camera, "\\", "\\10"); }
.fad.@{fa-css-prefix}-camera-alt:after { content: replace(@fa-var-camera-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-camera-retro:after { content: replace(@fa-var-camera-retro, "\\", "\\10"); }
.fad.@{fa-css-prefix}-campfire:after { content: replace(@fa-var-campfire, "\\", "\\10"); }
.fad.@{fa-css-prefix}-campground:after { content: replace(@fa-var-campground, "\\", "\\10"); }
.fad.@{fa-css-prefix}-candle-holder:after { content: replace(@fa-var-candle-holder, "\\", "\\10"); }
.fad.@{fa-css-prefix}-candy-cane:after { content: replace(@fa-var-candy-cane, "\\", "\\10"); }
.fad.@{fa-css-prefix}-candy-corn:after { content: replace(@fa-var-candy-corn, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cannabis:after { content: replace(@fa-var-cannabis, "\\", "\\10"); }
.fad.@{fa-css-prefix}-capsules:after { content: replace(@fa-var-capsules, "\\", "\\10"); }
.fad.@{fa-css-prefix}-car:after { content: replace(@fa-var-car, "\\", "\\10"); }
.fad.@{fa-css-prefix}-car-alt:after { content: replace(@fa-var-car-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-car-battery:after { content: replace(@fa-var-car-battery, "\\", "\\10"); }
.fad.@{fa-css-prefix}-car-building:after { content: replace(@fa-var-car-building, "\\", "\\10"); }
.fad.@{fa-css-prefix}-car-bump:after { content: replace(@fa-var-car-bump, "\\", "\\10"); }
.fad.@{fa-css-prefix}-car-bus:after { content: replace(@fa-var-car-bus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-car-crash:after { content: replace(@fa-var-car-crash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-car-garage:after { content: replace(@fa-var-car-garage, "\\", "\\10"); }
.fad.@{fa-css-prefix}-car-mechanic:after { content: replace(@fa-var-car-mechanic, "\\", "\\10"); }
.fad.@{fa-css-prefix}-car-side:after { content: replace(@fa-var-car-side, "\\", "\\10"); }
.fad.@{fa-css-prefix}-car-tilt:after { content: replace(@fa-var-car-tilt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-car-wash:after { content: replace(@fa-var-car-wash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-caret-circle-down:after { content: replace(@fa-var-caret-circle-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-caret-circle-left:after { content: replace(@fa-var-caret-circle-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-caret-circle-right:after { content: replace(@fa-var-caret-circle-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-caret-circle-up:after { content: replace(@fa-var-caret-circle-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-caret-down:after { content: replace(@fa-var-caret-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-caret-left:after { content: replace(@fa-var-caret-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-caret-right:after { content: replace(@fa-var-caret-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-caret-square-down:after { content: replace(@fa-var-caret-square-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-caret-square-left:after { content: replace(@fa-var-caret-square-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-caret-square-right:after { content: replace(@fa-var-caret-square-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-caret-square-up:after { content: replace(@fa-var-caret-square-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-caret-up:after { content: replace(@fa-var-caret-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-carrot:after { content: replace(@fa-var-carrot, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cars:after { content: replace(@fa-var-cars, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cart-arrow-down:after { content: replace(@fa-var-cart-arrow-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cart-plus:after { content: replace(@fa-var-cart-plus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cash-register:after { content: replace(@fa-var-cash-register, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cat:after { content: replace(@fa-var-cat, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cauldron:after { content: replace(@fa-var-cauldron, "\\", "\\10"); }
.fad.@{fa-css-prefix}-certificate:after { content: replace(@fa-var-certificate, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chair:after { content: replace(@fa-var-chair, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chair-office:after { content: replace(@fa-var-chair-office, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chalkboard:after { content: replace(@fa-var-chalkboard, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chalkboard-teacher:after { content: replace(@fa-var-chalkboard-teacher, "\\", "\\10"); }
.fad.@{fa-css-prefix}-charging-station:after { content: replace(@fa-var-charging-station, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chart-area:after { content: replace(@fa-var-chart-area, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chart-bar:after { content: replace(@fa-var-chart-bar, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chart-line:after { content: replace(@fa-var-chart-line, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chart-line-down:after { content: replace(@fa-var-chart-line-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chart-network:after { content: replace(@fa-var-chart-network, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chart-pie:after { content: replace(@fa-var-chart-pie, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chart-pie-alt:after { content: replace(@fa-var-chart-pie-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chart-scatter:after { content: replace(@fa-var-chart-scatter, "\\", "\\10"); }
.fad.@{fa-css-prefix}-check:after { content: replace(@fa-var-check, "\\", "\\10"); }
.fad.@{fa-css-prefix}-check-circle:after { content: replace(@fa-var-check-circle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-check-double:after { content: replace(@fa-var-check-double, "\\", "\\10"); }
.fad.@{fa-css-prefix}-check-square:after { content: replace(@fa-var-check-square, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cheese:after { content: replace(@fa-var-cheese, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cheese-swiss:after { content: replace(@fa-var-cheese-swiss, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cheeseburger:after { content: replace(@fa-var-cheeseburger, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chess:after { content: replace(@fa-var-chess, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chess-bishop:after { content: replace(@fa-var-chess-bishop, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chess-bishop-alt:after { content: replace(@fa-var-chess-bishop-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chess-board:after { content: replace(@fa-var-chess-board, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chess-clock:after { content: replace(@fa-var-chess-clock, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chess-clock-alt:after { content: replace(@fa-var-chess-clock-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chess-king:after { content: replace(@fa-var-chess-king, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chess-king-alt:after { content: replace(@fa-var-chess-king-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chess-knight:after { content: replace(@fa-var-chess-knight, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chess-knight-alt:after { content: replace(@fa-var-chess-knight-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chess-pawn:after { content: replace(@fa-var-chess-pawn, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chess-pawn-alt:after { content: replace(@fa-var-chess-pawn-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chess-queen:after { content: replace(@fa-var-chess-queen, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chess-queen-alt:after { content: replace(@fa-var-chess-queen-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chess-rook:after { content: replace(@fa-var-chess-rook, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chess-rook-alt:after { content: replace(@fa-var-chess-rook-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chevron-circle-down:after { content: replace(@fa-var-chevron-circle-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chevron-circle-left:after { content: replace(@fa-var-chevron-circle-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chevron-circle-right:after { content: replace(@fa-var-chevron-circle-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chevron-circle-up:after { content: replace(@fa-var-chevron-circle-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chevron-double-down:after { content: replace(@fa-var-chevron-double-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chevron-double-left:after { content: replace(@fa-var-chevron-double-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chevron-double-right:after { content: replace(@fa-var-chevron-double-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chevron-double-up:after { content: replace(@fa-var-chevron-double-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chevron-down:after { content: replace(@fa-var-chevron-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chevron-left:after { content: replace(@fa-var-chevron-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chevron-right:after { content: replace(@fa-var-chevron-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chevron-square-down:after { content: replace(@fa-var-chevron-square-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chevron-square-left:after { content: replace(@fa-var-chevron-square-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chevron-square-right:after { content: replace(@fa-var-chevron-square-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chevron-square-up:after { content: replace(@fa-var-chevron-square-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chevron-up:after { content: replace(@fa-var-chevron-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-child:after { content: replace(@fa-var-child, "\\", "\\10"); }
.fad.@{fa-css-prefix}-chimney:after { content: replace(@fa-var-chimney, "\\", "\\10"); }
.fad.@{fa-css-prefix}-church:after { content: replace(@fa-var-church, "\\", "\\10"); }
.fad.@{fa-css-prefix}-circle:after { content: replace(@fa-var-circle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-circle-notch:after { content: replace(@fa-var-circle-notch, "\\", "\\10"); }
.fad.@{fa-css-prefix}-city:after { content: replace(@fa-var-city, "\\", "\\10"); }
.fad.@{fa-css-prefix}-claw-marks:after { content: replace(@fa-var-claw-marks, "\\", "\\10"); }
.fad.@{fa-css-prefix}-clinic-medical:after { content: replace(@fa-var-clinic-medical, "\\", "\\10"); }
.fad.@{fa-css-prefix}-clipboard:after { content: replace(@fa-var-clipboard, "\\", "\\10"); }
.fad.@{fa-css-prefix}-clipboard-check:after { content: replace(@fa-var-clipboard-check, "\\", "\\10"); }
.fad.@{fa-css-prefix}-clipboard-list:after { content: replace(@fa-var-clipboard-list, "\\", "\\10"); }
.fad.@{fa-css-prefix}-clipboard-list-check:after { content: replace(@fa-var-clipboard-list-check, "\\", "\\10"); }
.fad.@{fa-css-prefix}-clipboard-prescription:after { content: replace(@fa-var-clipboard-prescription, "\\", "\\10"); }
.fad.@{fa-css-prefix}-clipboard-user:after { content: replace(@fa-var-clipboard-user, "\\", "\\10"); }
.fad.@{fa-css-prefix}-clock:after { content: replace(@fa-var-clock, "\\", "\\10"); }
.fad.@{fa-css-prefix}-clone:after { content: replace(@fa-var-clone, "\\", "\\10"); }
.fad.@{fa-css-prefix}-closed-captioning:after { content: replace(@fa-var-closed-captioning, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cloud:after { content: replace(@fa-var-cloud, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cloud-download:after { content: replace(@fa-var-cloud-download, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cloud-download-alt:after { content: replace(@fa-var-cloud-download-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cloud-drizzle:after { content: replace(@fa-var-cloud-drizzle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cloud-hail:after { content: replace(@fa-var-cloud-hail, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cloud-hail-mixed:after { content: replace(@fa-var-cloud-hail-mixed, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cloud-meatball:after { content: replace(@fa-var-cloud-meatball, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cloud-moon:after { content: replace(@fa-var-cloud-moon, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cloud-moon-rain:after { content: replace(@fa-var-cloud-moon-rain, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cloud-rain:after { content: replace(@fa-var-cloud-rain, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cloud-rainbow:after { content: replace(@fa-var-cloud-rainbow, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cloud-showers:after { content: replace(@fa-var-cloud-showers, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cloud-showers-heavy:after { content: replace(@fa-var-cloud-showers-heavy, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cloud-sleet:after { content: replace(@fa-var-cloud-sleet, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cloud-snow:after { content: replace(@fa-var-cloud-snow, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cloud-sun:after { content: replace(@fa-var-cloud-sun, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cloud-sun-rain:after { content: replace(@fa-var-cloud-sun-rain, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cloud-upload:after { content: replace(@fa-var-cloud-upload, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cloud-upload-alt:after { content: replace(@fa-var-cloud-upload-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-clouds:after { content: replace(@fa-var-clouds, "\\", "\\10"); }
.fad.@{fa-css-prefix}-clouds-moon:after { content: replace(@fa-var-clouds-moon, "\\", "\\10"); }
.fad.@{fa-css-prefix}-clouds-sun:after { content: replace(@fa-var-clouds-sun, "\\", "\\10"); }
.fad.@{fa-css-prefix}-club:after { content: replace(@fa-var-club, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cocktail:after { content: replace(@fa-var-cocktail, "\\", "\\10"); }
.fad.@{fa-css-prefix}-code:after { content: replace(@fa-var-code, "\\", "\\10"); }
.fad.@{fa-css-prefix}-code-branch:after { content: replace(@fa-var-code-branch, "\\", "\\10"); }
.fad.@{fa-css-prefix}-code-commit:after { content: replace(@fa-var-code-commit, "\\", "\\10"); }
.fad.@{fa-css-prefix}-code-merge:after { content: replace(@fa-var-code-merge, "\\", "\\10"); }
.fad.@{fa-css-prefix}-coffee:after { content: replace(@fa-var-coffee, "\\", "\\10"); }
.fad.@{fa-css-prefix}-coffee-togo:after { content: replace(@fa-var-coffee-togo, "\\", "\\10"); }
.fad.@{fa-css-prefix}-coffin:after { content: replace(@fa-var-coffin, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cog:after { content: replace(@fa-var-cog, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cogs:after { content: replace(@fa-var-cogs, "\\", "\\10"); }
.fad.@{fa-css-prefix}-coin:after { content: replace(@fa-var-coin, "\\", "\\10"); }
.fad.@{fa-css-prefix}-coins:after { content: replace(@fa-var-coins, "\\", "\\10"); }
.fad.@{fa-css-prefix}-columns:after { content: replace(@fa-var-columns, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment:after { content: replace(@fa-var-comment, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment-alt:after { content: replace(@fa-var-comment-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment-alt-check:after { content: replace(@fa-var-comment-alt-check, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment-alt-dollar:after { content: replace(@fa-var-comment-alt-dollar, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment-alt-dots:after { content: replace(@fa-var-comment-alt-dots, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment-alt-edit:after { content: replace(@fa-var-comment-alt-edit, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment-alt-exclamation:after { content: replace(@fa-var-comment-alt-exclamation, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment-alt-lines:after { content: replace(@fa-var-comment-alt-lines, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment-alt-medical:after { content: replace(@fa-var-comment-alt-medical, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment-alt-minus:after { content: replace(@fa-var-comment-alt-minus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment-alt-plus:after { content: replace(@fa-var-comment-alt-plus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment-alt-slash:after { content: replace(@fa-var-comment-alt-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment-alt-smile:after { content: replace(@fa-var-comment-alt-smile, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment-alt-times:after { content: replace(@fa-var-comment-alt-times, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment-check:after { content: replace(@fa-var-comment-check, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment-dollar:after { content: replace(@fa-var-comment-dollar, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment-dots:after { content: replace(@fa-var-comment-dots, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment-edit:after { content: replace(@fa-var-comment-edit, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment-exclamation:after { content: replace(@fa-var-comment-exclamation, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment-lines:after { content: replace(@fa-var-comment-lines, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment-medical:after { content: replace(@fa-var-comment-medical, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment-minus:after { content: replace(@fa-var-comment-minus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment-plus:after { content: replace(@fa-var-comment-plus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment-slash:after { content: replace(@fa-var-comment-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment-smile:after { content: replace(@fa-var-comment-smile, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comment-times:after { content: replace(@fa-var-comment-times, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comments:after { content: replace(@fa-var-comments, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comments-alt:after { content: replace(@fa-var-comments-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comments-alt-dollar:after { content: replace(@fa-var-comments-alt-dollar, "\\", "\\10"); }
.fad.@{fa-css-prefix}-comments-dollar:after { content: replace(@fa-var-comments-dollar, "\\", "\\10"); }
.fad.@{fa-css-prefix}-compact-disc:after { content: replace(@fa-var-compact-disc, "\\", "\\10"); }
.fad.@{fa-css-prefix}-compass:after { content: replace(@fa-var-compass, "\\", "\\10"); }
.fad.@{fa-css-prefix}-compass-slash:after { content: replace(@fa-var-compass-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-compress:after { content: replace(@fa-var-compress, "\\", "\\10"); }
.fad.@{fa-css-prefix}-compress-alt:after { content: replace(@fa-var-compress-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-compress-arrows-alt:after { content: replace(@fa-var-compress-arrows-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-compress-wide:after { content: replace(@fa-var-compress-wide, "\\", "\\10"); }
.fad.@{fa-css-prefix}-concierge-bell:after { content: replace(@fa-var-concierge-bell, "\\", "\\10"); }
.fad.@{fa-css-prefix}-construction:after { content: replace(@fa-var-construction, "\\", "\\10"); }
.fad.@{fa-css-prefix}-container-storage:after { content: replace(@fa-var-container-storage, "\\", "\\10"); }
.fad.@{fa-css-prefix}-conveyor-belt:after { content: replace(@fa-var-conveyor-belt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-conveyor-belt-alt:after { content: replace(@fa-var-conveyor-belt-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cookie:after { content: replace(@fa-var-cookie, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cookie-bite:after { content: replace(@fa-var-cookie-bite, "\\", "\\10"); }
.fad.@{fa-css-prefix}-copy:after { content: replace(@fa-var-copy, "\\", "\\10"); }
.fad.@{fa-css-prefix}-copyright:after { content: replace(@fa-var-copyright, "\\", "\\10"); }
.fad.@{fa-css-prefix}-corn:after { content: replace(@fa-var-corn, "\\", "\\10"); }
.fad.@{fa-css-prefix}-couch:after { content: replace(@fa-var-couch, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cow:after { content: replace(@fa-var-cow, "\\", "\\10"); }
.fad.@{fa-css-prefix}-credit-card:after { content: replace(@fa-var-credit-card, "\\", "\\10"); }
.fad.@{fa-css-prefix}-credit-card-blank:after { content: replace(@fa-var-credit-card-blank, "\\", "\\10"); }
.fad.@{fa-css-prefix}-credit-card-front:after { content: replace(@fa-var-credit-card-front, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cricket:after { content: replace(@fa-var-cricket, "\\", "\\10"); }
.fad.@{fa-css-prefix}-croissant:after { content: replace(@fa-var-croissant, "\\", "\\10"); }
.fad.@{fa-css-prefix}-crop:after { content: replace(@fa-var-crop, "\\", "\\10"); }
.fad.@{fa-css-prefix}-crop-alt:after { content: replace(@fa-var-crop-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cross:after { content: replace(@fa-var-cross, "\\", "\\10"); }
.fad.@{fa-css-prefix}-crosshairs:after { content: replace(@fa-var-crosshairs, "\\", "\\10"); }
.fad.@{fa-css-prefix}-crow:after { content: replace(@fa-var-crow, "\\", "\\10"); }
.fad.@{fa-css-prefix}-crown:after { content: replace(@fa-var-crown, "\\", "\\10"); }
.fad.@{fa-css-prefix}-crutch:after { content: replace(@fa-var-crutch, "\\", "\\10"); }
.fad.@{fa-css-prefix}-crutches:after { content: replace(@fa-var-crutches, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cube:after { content: replace(@fa-var-cube, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cubes:after { content: replace(@fa-var-cubes, "\\", "\\10"); }
.fad.@{fa-css-prefix}-curling:after { content: replace(@fa-var-curling, "\\", "\\10"); }
.fad.@{fa-css-prefix}-cut:after { content: replace(@fa-var-cut, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dagger:after { content: replace(@fa-var-dagger, "\\", "\\10"); }
.fad.@{fa-css-prefix}-database:after { content: replace(@fa-var-database, "\\", "\\10"); }
.fad.@{fa-css-prefix}-deaf:after { content: replace(@fa-var-deaf, "\\", "\\10"); }
.fad.@{fa-css-prefix}-debug:after { content: replace(@fa-var-debug, "\\", "\\10"); }
.fad.@{fa-css-prefix}-deer:after { content: replace(@fa-var-deer, "\\", "\\10"); }
.fad.@{fa-css-prefix}-deer-rudolph:after { content: replace(@fa-var-deer-rudolph, "\\", "\\10"); }
.fad.@{fa-css-prefix}-democrat:after { content: replace(@fa-var-democrat, "\\", "\\10"); }
.fad.@{fa-css-prefix}-desktop:after { content: replace(@fa-var-desktop, "\\", "\\10"); }
.fad.@{fa-css-prefix}-desktop-alt:after { content: replace(@fa-var-desktop-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dewpoint:after { content: replace(@fa-var-dewpoint, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dharmachakra:after { content: replace(@fa-var-dharmachakra, "\\", "\\10"); }
.fad.@{fa-css-prefix}-diagnoses:after { content: replace(@fa-var-diagnoses, "\\", "\\10"); }
.fad.@{fa-css-prefix}-diamond:after { content: replace(@fa-var-diamond, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dice:after { content: replace(@fa-var-dice, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dice-d10:after { content: replace(@fa-var-dice-d10, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dice-d12:after { content: replace(@fa-var-dice-d12, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dice-d20:after { content: replace(@fa-var-dice-d20, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dice-d4:after { content: replace(@fa-var-dice-d4, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dice-d6:after { content: replace(@fa-var-dice-d6, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dice-d8:after { content: replace(@fa-var-dice-d8, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dice-five:after { content: replace(@fa-var-dice-five, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dice-four:after { content: replace(@fa-var-dice-four, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dice-one:after { content: replace(@fa-var-dice-one, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dice-six:after { content: replace(@fa-var-dice-six, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dice-three:after { content: replace(@fa-var-dice-three, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dice-two:after { content: replace(@fa-var-dice-two, "\\", "\\10"); }
.fad.@{fa-css-prefix}-digging:after { content: replace(@fa-var-digging, "\\", "\\10"); }
.fad.@{fa-css-prefix}-digital-tachograph:after { content: replace(@fa-var-digital-tachograph, "\\", "\\10"); }
.fad.@{fa-css-prefix}-diploma:after { content: replace(@fa-var-diploma, "\\", "\\10"); }
.fad.@{fa-css-prefix}-directions:after { content: replace(@fa-var-directions, "\\", "\\10"); }
.fad.@{fa-css-prefix}-disease:after { content: replace(@fa-var-disease, "\\", "\\10"); }
.fad.@{fa-css-prefix}-divide:after { content: replace(@fa-var-divide, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dizzy:after { content: replace(@fa-var-dizzy, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dna:after { content: replace(@fa-var-dna, "\\", "\\10"); }
.fad.@{fa-css-prefix}-do-not-enter:after { content: replace(@fa-var-do-not-enter, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dog:after { content: replace(@fa-var-dog, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dog-leashed:after { content: replace(@fa-var-dog-leashed, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dollar-sign:after { content: replace(@fa-var-dollar-sign, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dolly:after { content: replace(@fa-var-dolly, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dolly-empty:after { content: replace(@fa-var-dolly-empty, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dolly-flatbed:after { content: replace(@fa-var-dolly-flatbed, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dolly-flatbed-alt:after { content: replace(@fa-var-dolly-flatbed-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dolly-flatbed-empty:after { content: replace(@fa-var-dolly-flatbed-empty, "\\", "\\10"); }
.fad.@{fa-css-prefix}-donate:after { content: replace(@fa-var-donate, "\\", "\\10"); }
.fad.@{fa-css-prefix}-door-closed:after { content: replace(@fa-var-door-closed, "\\", "\\10"); }
.fad.@{fa-css-prefix}-door-open:after { content: replace(@fa-var-door-open, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dot-circle:after { content: replace(@fa-var-dot-circle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dove:after { content: replace(@fa-var-dove, "\\", "\\10"); }
.fad.@{fa-css-prefix}-download:after { content: replace(@fa-var-download, "\\", "\\10"); }
.fad.@{fa-css-prefix}-drafting-compass:after { content: replace(@fa-var-drafting-compass, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dragon:after { content: replace(@fa-var-dragon, "\\", "\\10"); }
.fad.@{fa-css-prefix}-draw-circle:after { content: replace(@fa-var-draw-circle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-draw-polygon:after { content: replace(@fa-var-draw-polygon, "\\", "\\10"); }
.fad.@{fa-css-prefix}-draw-square:after { content: replace(@fa-var-draw-square, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dreidel:after { content: replace(@fa-var-dreidel, "\\", "\\10"); }
.fad.@{fa-css-prefix}-drone:after { content: replace(@fa-var-drone, "\\", "\\10"); }
.fad.@{fa-css-prefix}-drone-alt:after { content: replace(@fa-var-drone-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-drum:after { content: replace(@fa-var-drum, "\\", "\\10"); }
.fad.@{fa-css-prefix}-drum-steelpan:after { content: replace(@fa-var-drum-steelpan, "\\", "\\10"); }
.fad.@{fa-css-prefix}-drumstick:after { content: replace(@fa-var-drumstick, "\\", "\\10"); }
.fad.@{fa-css-prefix}-drumstick-bite:after { content: replace(@fa-var-drumstick-bite, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dryer:after { content: replace(@fa-var-dryer, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dryer-alt:after { content: replace(@fa-var-dryer-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-duck:after { content: replace(@fa-var-duck, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dumbbell:after { content: replace(@fa-var-dumbbell, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dumpster:after { content: replace(@fa-var-dumpster, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dumpster-fire:after { content: replace(@fa-var-dumpster-fire, "\\", "\\10"); }
.fad.@{fa-css-prefix}-dungeon:after { content: replace(@fa-var-dungeon, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ear:after { content: replace(@fa-var-ear, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ear-muffs:after { content: replace(@fa-var-ear-muffs, "\\", "\\10"); }
.fad.@{fa-css-prefix}-eclipse:after { content: replace(@fa-var-eclipse, "\\", "\\10"); }
.fad.@{fa-css-prefix}-eclipse-alt:after { content: replace(@fa-var-eclipse-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-edit:after { content: replace(@fa-var-edit, "\\", "\\10"); }
.fad.@{fa-css-prefix}-egg:after { content: replace(@fa-var-egg, "\\", "\\10"); }
.fad.@{fa-css-prefix}-egg-fried:after { content: replace(@fa-var-egg-fried, "\\", "\\10"); }
.fad.@{fa-css-prefix}-eject:after { content: replace(@fa-var-eject, "\\", "\\10"); }
.fad.@{fa-css-prefix}-elephant:after { content: replace(@fa-var-elephant, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ellipsis-h:after { content: replace(@fa-var-ellipsis-h, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ellipsis-h-alt:after { content: replace(@fa-var-ellipsis-h-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ellipsis-v:after { content: replace(@fa-var-ellipsis-v, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ellipsis-v-alt:after { content: replace(@fa-var-ellipsis-v-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-empty-set:after { content: replace(@fa-var-empty-set, "\\", "\\10"); }
.fad.@{fa-css-prefix}-engine-warning:after { content: replace(@fa-var-engine-warning, "\\", "\\10"); }
.fad.@{fa-css-prefix}-envelope:after { content: replace(@fa-var-envelope, "\\", "\\10"); }
.fad.@{fa-css-prefix}-envelope-open:after { content: replace(@fa-var-envelope-open, "\\", "\\10"); }
.fad.@{fa-css-prefix}-envelope-open-dollar:after { content: replace(@fa-var-envelope-open-dollar, "\\", "\\10"); }
.fad.@{fa-css-prefix}-envelope-open-text:after { content: replace(@fa-var-envelope-open-text, "\\", "\\10"); }
.fad.@{fa-css-prefix}-envelope-square:after { content: replace(@fa-var-envelope-square, "\\", "\\10"); }
.fad.@{fa-css-prefix}-equals:after { content: replace(@fa-var-equals, "\\", "\\10"); }
.fad.@{fa-css-prefix}-eraser:after { content: replace(@fa-var-eraser, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ethernet:after { content: replace(@fa-var-ethernet, "\\", "\\10"); }
.fad.@{fa-css-prefix}-euro-sign:after { content: replace(@fa-var-euro-sign, "\\", "\\10"); }
.fad.@{fa-css-prefix}-exchange:after { content: replace(@fa-var-exchange, "\\", "\\10"); }
.fad.@{fa-css-prefix}-exchange-alt:after { content: replace(@fa-var-exchange-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-exclamation:after { content: replace(@fa-var-exclamation, "\\", "\\10"); }
.fad.@{fa-css-prefix}-exclamation-circle:after { content: replace(@fa-var-exclamation-circle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-exclamation-square:after { content: replace(@fa-var-exclamation-square, "\\", "\\10"); }
.fad.@{fa-css-prefix}-exclamation-triangle:after { content: replace(@fa-var-exclamation-triangle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-expand:after { content: replace(@fa-var-expand, "\\", "\\10"); }
.fad.@{fa-css-prefix}-expand-alt:after { content: replace(@fa-var-expand-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-expand-arrows:after { content: replace(@fa-var-expand-arrows, "\\", "\\10"); }
.fad.@{fa-css-prefix}-expand-arrows-alt:after { content: replace(@fa-var-expand-arrows-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-expand-wide:after { content: replace(@fa-var-expand-wide, "\\", "\\10"); }
.fad.@{fa-css-prefix}-external-link:after { content: replace(@fa-var-external-link, "\\", "\\10"); }
.fad.@{fa-css-prefix}-external-link-alt:after { content: replace(@fa-var-external-link-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-external-link-square:after { content: replace(@fa-var-external-link-square, "\\", "\\10"); }
.fad.@{fa-css-prefix}-external-link-square-alt:after { content: replace(@fa-var-external-link-square-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-eye:after { content: replace(@fa-var-eye, "\\", "\\10"); }
.fad.@{fa-css-prefix}-eye-dropper:after { content: replace(@fa-var-eye-dropper, "\\", "\\10"); }
.fad.@{fa-css-prefix}-eye-evil:after { content: replace(@fa-var-eye-evil, "\\", "\\10"); }
.fad.@{fa-css-prefix}-eye-slash:after { content: replace(@fa-var-eye-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-fan:after { content: replace(@fa-var-fan, "\\", "\\10"); }
.fad.@{fa-css-prefix}-farm:after { content: replace(@fa-var-farm, "\\", "\\10"); }
.fad.@{fa-css-prefix}-fast-backward:after { content: replace(@fa-var-fast-backward, "\\", "\\10"); }
.fad.@{fa-css-prefix}-fast-forward:after { content: replace(@fa-var-fast-forward, "\\", "\\10"); }
.fad.@{fa-css-prefix}-fax:after { content: replace(@fa-var-fax, "\\", "\\10"); }
.fad.@{fa-css-prefix}-feather:after { content: replace(@fa-var-feather, "\\", "\\10"); }
.fad.@{fa-css-prefix}-feather-alt:after { content: replace(@fa-var-feather-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-female:after { content: replace(@fa-var-female, "\\", "\\10"); }
.fad.@{fa-css-prefix}-field-hockey:after { content: replace(@fa-var-field-hockey, "\\", "\\10"); }
.fad.@{fa-css-prefix}-fighter-jet:after { content: replace(@fa-var-fighter-jet, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file:after { content: replace(@fa-var-file, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-alt:after { content: replace(@fa-var-file-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-archive:after { content: replace(@fa-var-file-archive, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-audio:after { content: replace(@fa-var-file-audio, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-certificate:after { content: replace(@fa-var-file-certificate, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-chart-line:after { content: replace(@fa-var-file-chart-line, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-chart-pie:after { content: replace(@fa-var-file-chart-pie, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-check:after { content: replace(@fa-var-file-check, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-code:after { content: replace(@fa-var-file-code, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-contract:after { content: replace(@fa-var-file-contract, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-csv:after { content: replace(@fa-var-file-csv, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-download:after { content: replace(@fa-var-file-download, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-edit:after { content: replace(@fa-var-file-edit, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-excel:after { content: replace(@fa-var-file-excel, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-exclamation:after { content: replace(@fa-var-file-exclamation, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-export:after { content: replace(@fa-var-file-export, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-image:after { content: replace(@fa-var-file-image, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-import:after { content: replace(@fa-var-file-import, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-invoice:after { content: replace(@fa-var-file-invoice, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-invoice-dollar:after { content: replace(@fa-var-file-invoice-dollar, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-medical:after { content: replace(@fa-var-file-medical, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-medical-alt:after { content: replace(@fa-var-file-medical-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-minus:after { content: replace(@fa-var-file-minus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-pdf:after { content: replace(@fa-var-file-pdf, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-plus:after { content: replace(@fa-var-file-plus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-powerpoint:after { content: replace(@fa-var-file-powerpoint, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-prescription:after { content: replace(@fa-var-file-prescription, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-search:after { content: replace(@fa-var-file-search, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-signature:after { content: replace(@fa-var-file-signature, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-spreadsheet:after { content: replace(@fa-var-file-spreadsheet, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-times:after { content: replace(@fa-var-file-times, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-upload:after { content: replace(@fa-var-file-upload, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-user:after { content: replace(@fa-var-file-user, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-video:after { content: replace(@fa-var-file-video, "\\", "\\10"); }
.fad.@{fa-css-prefix}-file-word:after { content: replace(@fa-var-file-word, "\\", "\\10"); }
.fad.@{fa-css-prefix}-files-medical:after { content: replace(@fa-var-files-medical, "\\", "\\10"); }
.fad.@{fa-css-prefix}-fill:after { content: replace(@fa-var-fill, "\\", "\\10"); }
.fad.@{fa-css-prefix}-fill-drip:after { content: replace(@fa-var-fill-drip, "\\", "\\10"); }
.fad.@{fa-css-prefix}-film:after { content: replace(@fa-var-film, "\\", "\\10"); }
.fad.@{fa-css-prefix}-film-alt:after { content: replace(@fa-var-film-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-filter:after { content: replace(@fa-var-filter, "\\", "\\10"); }
.fad.@{fa-css-prefix}-fingerprint:after { content: replace(@fa-var-fingerprint, "\\", "\\10"); }
.fad.@{fa-css-prefix}-fire:after { content: replace(@fa-var-fire, "\\", "\\10"); }
.fad.@{fa-css-prefix}-fire-alt:after { content: replace(@fa-var-fire-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-fire-extinguisher:after { content: replace(@fa-var-fire-extinguisher, "\\", "\\10"); }
.fad.@{fa-css-prefix}-fire-smoke:after { content: replace(@fa-var-fire-smoke, "\\", "\\10"); }
.fad.@{fa-css-prefix}-fireplace:after { content: replace(@fa-var-fireplace, "\\", "\\10"); }
.fad.@{fa-css-prefix}-first-aid:after { content: replace(@fa-var-first-aid, "\\", "\\10"); }
.fad.@{fa-css-prefix}-fish:after { content: replace(@fa-var-fish, "\\", "\\10"); }
.fad.@{fa-css-prefix}-fish-cooked:after { content: replace(@fa-var-fish-cooked, "\\", "\\10"); }
.fad.@{fa-css-prefix}-fist-raised:after { content: replace(@fa-var-fist-raised, "\\", "\\10"); }
.fad.@{fa-css-prefix}-flag:after { content: replace(@fa-var-flag, "\\", "\\10"); }
.fad.@{fa-css-prefix}-flag-alt:after { content: replace(@fa-var-flag-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-flag-checkered:after { content: replace(@fa-var-flag-checkered, "\\", "\\10"); }
.fad.@{fa-css-prefix}-flag-usa:after { content: replace(@fa-var-flag-usa, "\\", "\\10"); }
.fad.@{fa-css-prefix}-flame:after { content: replace(@fa-var-flame, "\\", "\\10"); }
.fad.@{fa-css-prefix}-flask:after { content: replace(@fa-var-flask, "\\", "\\10"); }
.fad.@{fa-css-prefix}-flask-poison:after { content: replace(@fa-var-flask-poison, "\\", "\\10"); }
.fad.@{fa-css-prefix}-flask-potion:after { content: replace(@fa-var-flask-potion, "\\", "\\10"); }
.fad.@{fa-css-prefix}-flower:after { content: replace(@fa-var-flower, "\\", "\\10"); }
.fad.@{fa-css-prefix}-flower-daffodil:after { content: replace(@fa-var-flower-daffodil, "\\", "\\10"); }
.fad.@{fa-css-prefix}-flower-tulip:after { content: replace(@fa-var-flower-tulip, "\\", "\\10"); }
.fad.@{fa-css-prefix}-flushed:after { content: replace(@fa-var-flushed, "\\", "\\10"); }
.fad.@{fa-css-prefix}-fog:after { content: replace(@fa-var-fog, "\\", "\\10"); }
.fad.@{fa-css-prefix}-folder:after { content: replace(@fa-var-folder, "\\", "\\10"); }
.fad.@{fa-css-prefix}-folder-minus:after { content: replace(@fa-var-folder-minus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-folder-open:after { content: replace(@fa-var-folder-open, "\\", "\\10"); }
.fad.@{fa-css-prefix}-folder-plus:after { content: replace(@fa-var-folder-plus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-folder-times:after { content: replace(@fa-var-folder-times, "\\", "\\10"); }
.fad.@{fa-css-prefix}-folder-tree:after { content: replace(@fa-var-folder-tree, "\\", "\\10"); }
.fad.@{fa-css-prefix}-folders:after { content: replace(@fa-var-folders, "\\", "\\10"); }
.fad.@{fa-css-prefix}-font:after { content: replace(@fa-var-font, "\\", "\\10"); }
.fad.@{fa-css-prefix}-font-awesome-logo-full:after { content: replace(@fa-var-font-awesome-logo-full, "\\", "\\10"); }
.fad.@{fa-css-prefix}-font-case:after { content: replace(@fa-var-font-case, "\\", "\\10"); }
.fad.@{fa-css-prefix}-football-ball:after { content: replace(@fa-var-football-ball, "\\", "\\10"); }
.fad.@{fa-css-prefix}-football-helmet:after { content: replace(@fa-var-football-helmet, "\\", "\\10"); }
.fad.@{fa-css-prefix}-forklift:after { content: replace(@fa-var-forklift, "\\", "\\10"); }
.fad.@{fa-css-prefix}-forward:after { content: replace(@fa-var-forward, "\\", "\\10"); }
.fad.@{fa-css-prefix}-fragile:after { content: replace(@fa-var-fragile, "\\", "\\10"); }
.fad.@{fa-css-prefix}-french-fries:after { content: replace(@fa-var-french-fries, "\\", "\\10"); }
.fad.@{fa-css-prefix}-frog:after { content: replace(@fa-var-frog, "\\", "\\10"); }
.fad.@{fa-css-prefix}-frosty-head:after { content: replace(@fa-var-frosty-head, "\\", "\\10"); }
.fad.@{fa-css-prefix}-frown:after { content: replace(@fa-var-frown, "\\", "\\10"); }
.fad.@{fa-css-prefix}-frown-open:after { content: replace(@fa-var-frown-open, "\\", "\\10"); }
.fad.@{fa-css-prefix}-function:after { content: replace(@fa-var-function, "\\", "\\10"); }
.fad.@{fa-css-prefix}-funnel-dollar:after { content: replace(@fa-var-funnel-dollar, "\\", "\\10"); }
.fad.@{fa-css-prefix}-futbol:after { content: replace(@fa-var-futbol, "\\", "\\10"); }
.fad.@{fa-css-prefix}-game-board:after { content: replace(@fa-var-game-board, "\\", "\\10"); }
.fad.@{fa-css-prefix}-game-board-alt:after { content: replace(@fa-var-game-board-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-gamepad:after { content: replace(@fa-var-gamepad, "\\", "\\10"); }
.fad.@{fa-css-prefix}-gas-pump:after { content: replace(@fa-var-gas-pump, "\\", "\\10"); }
.fad.@{fa-css-prefix}-gas-pump-slash:after { content: replace(@fa-var-gas-pump-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-gavel:after { content: replace(@fa-var-gavel, "\\", "\\10"); }
.fad.@{fa-css-prefix}-gem:after { content: replace(@fa-var-gem, "\\", "\\10"); }
.fad.@{fa-css-prefix}-genderless:after { content: replace(@fa-var-genderless, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ghost:after { content: replace(@fa-var-ghost, "\\", "\\10"); }
.fad.@{fa-css-prefix}-gift:after { content: replace(@fa-var-gift, "\\", "\\10"); }
.fad.@{fa-css-prefix}-gift-card:after { content: replace(@fa-var-gift-card, "\\", "\\10"); }
.fad.@{fa-css-prefix}-gifts:after { content: replace(@fa-var-gifts, "\\", "\\10"); }
.fad.@{fa-css-prefix}-gingerbread-man:after { content: replace(@fa-var-gingerbread-man, "\\", "\\10"); }
.fad.@{fa-css-prefix}-glass:after { content: replace(@fa-var-glass, "\\", "\\10"); }
.fad.@{fa-css-prefix}-glass-champagne:after { content: replace(@fa-var-glass-champagne, "\\", "\\10"); }
.fad.@{fa-css-prefix}-glass-cheers:after { content: replace(@fa-var-glass-cheers, "\\", "\\10"); }
.fad.@{fa-css-prefix}-glass-citrus:after { content: replace(@fa-var-glass-citrus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-glass-martini:after { content: replace(@fa-var-glass-martini, "\\", "\\10"); }
.fad.@{fa-css-prefix}-glass-martini-alt:after { content: replace(@fa-var-glass-martini-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-glass-whiskey:after { content: replace(@fa-var-glass-whiskey, "\\", "\\10"); }
.fad.@{fa-css-prefix}-glass-whiskey-rocks:after { content: replace(@fa-var-glass-whiskey-rocks, "\\", "\\10"); }
.fad.@{fa-css-prefix}-glasses:after { content: replace(@fa-var-glasses, "\\", "\\10"); }
.fad.@{fa-css-prefix}-glasses-alt:after { content: replace(@fa-var-glasses-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-globe:after { content: replace(@fa-var-globe, "\\", "\\10"); }
.fad.@{fa-css-prefix}-globe-africa:after { content: replace(@fa-var-globe-africa, "\\", "\\10"); }
.fad.@{fa-css-prefix}-globe-americas:after { content: replace(@fa-var-globe-americas, "\\", "\\10"); }
.fad.@{fa-css-prefix}-globe-asia:after { content: replace(@fa-var-globe-asia, "\\", "\\10"); }
.fad.@{fa-css-prefix}-globe-europe:after { content: replace(@fa-var-globe-europe, "\\", "\\10"); }
.fad.@{fa-css-prefix}-globe-snow:after { content: replace(@fa-var-globe-snow, "\\", "\\10"); }
.fad.@{fa-css-prefix}-globe-stand:after { content: replace(@fa-var-globe-stand, "\\", "\\10"); }
.fad.@{fa-css-prefix}-golf-ball:after { content: replace(@fa-var-golf-ball, "\\", "\\10"); }
.fad.@{fa-css-prefix}-golf-club:after { content: replace(@fa-var-golf-club, "\\", "\\10"); }
.fad.@{fa-css-prefix}-gopuram:after { content: replace(@fa-var-gopuram, "\\", "\\10"); }
.fad.@{fa-css-prefix}-graduation-cap:after { content: replace(@fa-var-graduation-cap, "\\", "\\10"); }
.fad.@{fa-css-prefix}-greater-than:after { content: replace(@fa-var-greater-than, "\\", "\\10"); }
.fad.@{fa-css-prefix}-greater-than-equal:after { content: replace(@fa-var-greater-than-equal, "\\", "\\10"); }
.fad.@{fa-css-prefix}-grimace:after { content: replace(@fa-var-grimace, "\\", "\\10"); }
.fad.@{fa-css-prefix}-grin:after { content: replace(@fa-var-grin, "\\", "\\10"); }
.fad.@{fa-css-prefix}-grin-alt:after { content: replace(@fa-var-grin-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-grin-beam:after { content: replace(@fa-var-grin-beam, "\\", "\\10"); }
.fad.@{fa-css-prefix}-grin-beam-sweat:after { content: replace(@fa-var-grin-beam-sweat, "\\", "\\10"); }
.fad.@{fa-css-prefix}-grin-hearts:after { content: replace(@fa-var-grin-hearts, "\\", "\\10"); }
.fad.@{fa-css-prefix}-grin-squint:after { content: replace(@fa-var-grin-squint, "\\", "\\10"); }
.fad.@{fa-css-prefix}-grin-squint-tears:after { content: replace(@fa-var-grin-squint-tears, "\\", "\\10"); }
.fad.@{fa-css-prefix}-grin-stars:after { content: replace(@fa-var-grin-stars, "\\", "\\10"); }
.fad.@{fa-css-prefix}-grin-tears:after { content: replace(@fa-var-grin-tears, "\\", "\\10"); }
.fad.@{fa-css-prefix}-grin-tongue:after { content: replace(@fa-var-grin-tongue, "\\", "\\10"); }
.fad.@{fa-css-prefix}-grin-tongue-squint:after { content: replace(@fa-var-grin-tongue-squint, "\\", "\\10"); }
.fad.@{fa-css-prefix}-grin-tongue-wink:after { content: replace(@fa-var-grin-tongue-wink, "\\", "\\10"); }
.fad.@{fa-css-prefix}-grin-wink:after { content: replace(@fa-var-grin-wink, "\\", "\\10"); }
.fad.@{fa-css-prefix}-grip-horizontal:after { content: replace(@fa-var-grip-horizontal, "\\", "\\10"); }
.fad.@{fa-css-prefix}-grip-lines:after { content: replace(@fa-var-grip-lines, "\\", "\\10"); }
.fad.@{fa-css-prefix}-grip-lines-vertical:after { content: replace(@fa-var-grip-lines-vertical, "\\", "\\10"); }
.fad.@{fa-css-prefix}-grip-vertical:after { content: replace(@fa-var-grip-vertical, "\\", "\\10"); }
.fad.@{fa-css-prefix}-guitar:after { content: replace(@fa-var-guitar, "\\", "\\10"); }
.fad.@{fa-css-prefix}-h-square:after { content: replace(@fa-var-h-square, "\\", "\\10"); }
.fad.@{fa-css-prefix}-h1:after { content: replace(@fa-var-h1, "\\", "\\10"); }
.fad.@{fa-css-prefix}-h2:after { content: replace(@fa-var-h2, "\\", "\\10"); }
.fad.@{fa-css-prefix}-h3:after { content: replace(@fa-var-h3, "\\", "\\10"); }
.fad.@{fa-css-prefix}-h4:after { content: replace(@fa-var-h4, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hamburger:after { content: replace(@fa-var-hamburger, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hammer:after { content: replace(@fa-var-hammer, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hammer-war:after { content: replace(@fa-var-hammer-war, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hamsa:after { content: replace(@fa-var-hamsa, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hand-heart:after { content: replace(@fa-var-hand-heart, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hand-holding:after { content: replace(@fa-var-hand-holding, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hand-holding-box:after { content: replace(@fa-var-hand-holding-box, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hand-holding-heart:after { content: replace(@fa-var-hand-holding-heart, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hand-holding-magic:after { content: replace(@fa-var-hand-holding-magic, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hand-holding-seedling:after { content: replace(@fa-var-hand-holding-seedling, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hand-holding-usd:after { content: replace(@fa-var-hand-holding-usd, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hand-holding-water:after { content: replace(@fa-var-hand-holding-water, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hand-lizard:after { content: replace(@fa-var-hand-lizard, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hand-middle-finger:after { content: replace(@fa-var-hand-middle-finger, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hand-paper:after { content: replace(@fa-var-hand-paper, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hand-peace:after { content: replace(@fa-var-hand-peace, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hand-point-down:after { content: replace(@fa-var-hand-point-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hand-point-left:after { content: replace(@fa-var-hand-point-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hand-point-right:after { content: replace(@fa-var-hand-point-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hand-point-up:after { content: replace(@fa-var-hand-point-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hand-pointer:after { content: replace(@fa-var-hand-pointer, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hand-receiving:after { content: replace(@fa-var-hand-receiving, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hand-rock:after { content: replace(@fa-var-hand-rock, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hand-scissors:after { content: replace(@fa-var-hand-scissors, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hand-spock:after { content: replace(@fa-var-hand-spock, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hands:after { content: replace(@fa-var-hands, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hands-heart:after { content: replace(@fa-var-hands-heart, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hands-helping:after { content: replace(@fa-var-hands-helping, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hands-usd:after { content: replace(@fa-var-hands-usd, "\\", "\\10"); }
.fad.@{fa-css-prefix}-handshake:after { content: replace(@fa-var-handshake, "\\", "\\10"); }
.fad.@{fa-css-prefix}-handshake-alt:after { content: replace(@fa-var-handshake-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hanukiah:after { content: replace(@fa-var-hanukiah, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hard-hat:after { content: replace(@fa-var-hard-hat, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hashtag:after { content: replace(@fa-var-hashtag, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hat-chef:after { content: replace(@fa-var-hat-chef, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hat-santa:after { content: replace(@fa-var-hat-santa, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hat-winter:after { content: replace(@fa-var-hat-winter, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hat-witch:after { content: replace(@fa-var-hat-witch, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hat-wizard:after { content: replace(@fa-var-hat-wizard, "\\", "\\10"); }
.fad.@{fa-css-prefix}-haykal:after { content: replace(@fa-var-haykal, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hdd:after { content: replace(@fa-var-hdd, "\\", "\\10"); }
.fad.@{fa-css-prefix}-head-side:after { content: replace(@fa-var-head-side, "\\", "\\10"); }
.fad.@{fa-css-prefix}-head-side-brain:after { content: replace(@fa-var-head-side-brain, "\\", "\\10"); }
.fad.@{fa-css-prefix}-head-side-medical:after { content: replace(@fa-var-head-side-medical, "\\", "\\10"); }
.fad.@{fa-css-prefix}-head-vr:after { content: replace(@fa-var-head-vr, "\\", "\\10"); }
.fad.@{fa-css-prefix}-heading:after { content: replace(@fa-var-heading, "\\", "\\10"); }
.fad.@{fa-css-prefix}-headphones:after { content: replace(@fa-var-headphones, "\\", "\\10"); }
.fad.@{fa-css-prefix}-headphones-alt:after { content: replace(@fa-var-headphones-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-headset:after { content: replace(@fa-var-headset, "\\", "\\10"); }
.fad.@{fa-css-prefix}-heart:after { content: replace(@fa-var-heart, "\\", "\\10"); }
.fad.@{fa-css-prefix}-heart-broken:after { content: replace(@fa-var-heart-broken, "\\", "\\10"); }
.fad.@{fa-css-prefix}-heart-circle:after { content: replace(@fa-var-heart-circle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-heart-rate:after { content: replace(@fa-var-heart-rate, "\\", "\\10"); }
.fad.@{fa-css-prefix}-heart-square:after { content: replace(@fa-var-heart-square, "\\", "\\10"); }
.fad.@{fa-css-prefix}-heartbeat:after { content: replace(@fa-var-heartbeat, "\\", "\\10"); }
.fad.@{fa-css-prefix}-helicopter:after { content: replace(@fa-var-helicopter, "\\", "\\10"); }
.fad.@{fa-css-prefix}-helmet-battle:after { content: replace(@fa-var-helmet-battle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hexagon:after { content: replace(@fa-var-hexagon, "\\", "\\10"); }
.fad.@{fa-css-prefix}-highlighter:after { content: replace(@fa-var-highlighter, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hiking:after { content: replace(@fa-var-hiking, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hippo:after { content: replace(@fa-var-hippo, "\\", "\\10"); }
.fad.@{fa-css-prefix}-history:after { content: replace(@fa-var-history, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hockey-mask:after { content: replace(@fa-var-hockey-mask, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hockey-puck:after { content: replace(@fa-var-hockey-puck, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hockey-sticks:after { content: replace(@fa-var-hockey-sticks, "\\", "\\10"); }
.fad.@{fa-css-prefix}-holly-berry:after { content: replace(@fa-var-holly-berry, "\\", "\\10"); }
.fad.@{fa-css-prefix}-home:after { content: replace(@fa-var-home, "\\", "\\10"); }
.fad.@{fa-css-prefix}-home-alt:after { content: replace(@fa-var-home-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-home-heart:after { content: replace(@fa-var-home-heart, "\\", "\\10"); }
.fad.@{fa-css-prefix}-home-lg:after { content: replace(@fa-var-home-lg, "\\", "\\10"); }
.fad.@{fa-css-prefix}-home-lg-alt:after { content: replace(@fa-var-home-lg-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hood-cloak:after { content: replace(@fa-var-hood-cloak, "\\", "\\10"); }
.fad.@{fa-css-prefix}-horizontal-rule:after { content: replace(@fa-var-horizontal-rule, "\\", "\\10"); }
.fad.@{fa-css-prefix}-horse:after { content: replace(@fa-var-horse, "\\", "\\10"); }
.fad.@{fa-css-prefix}-horse-head:after { content: replace(@fa-var-horse-head, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hospital:after { content: replace(@fa-var-hospital, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hospital-alt:after { content: replace(@fa-var-hospital-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hospital-symbol:after { content: replace(@fa-var-hospital-symbol, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hospital-user:after { content: replace(@fa-var-hospital-user, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hospitals:after { content: replace(@fa-var-hospitals, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hot-tub:after { content: replace(@fa-var-hot-tub, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hotdog:after { content: replace(@fa-var-hotdog, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hotel:after { content: replace(@fa-var-hotel, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hourglass:after { content: replace(@fa-var-hourglass, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hourglass-end:after { content: replace(@fa-var-hourglass-end, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hourglass-half:after { content: replace(@fa-var-hourglass-half, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hourglass-start:after { content: replace(@fa-var-hourglass-start, "\\", "\\10"); }
.fad.@{fa-css-prefix}-house-damage:after { content: replace(@fa-var-house-damage, "\\", "\\10"); }
.fad.@{fa-css-prefix}-house-flood:after { content: replace(@fa-var-house-flood, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hryvnia:after { content: replace(@fa-var-hryvnia, "\\", "\\10"); }
.fad.@{fa-css-prefix}-humidity:after { content: replace(@fa-var-humidity, "\\", "\\10"); }
.fad.@{fa-css-prefix}-hurricane:after { content: replace(@fa-var-hurricane, "\\", "\\10"); }
.fad.@{fa-css-prefix}-i-cursor:after { content: replace(@fa-var-i-cursor, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ice-cream:after { content: replace(@fa-var-ice-cream, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ice-skate:after { content: replace(@fa-var-ice-skate, "\\", "\\10"); }
.fad.@{fa-css-prefix}-icicles:after { content: replace(@fa-var-icicles, "\\", "\\10"); }
.fad.@{fa-css-prefix}-icons:after { content: replace(@fa-var-icons, "\\", "\\10"); }
.fad.@{fa-css-prefix}-icons-alt:after { content: replace(@fa-var-icons-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-id-badge:after { content: replace(@fa-var-id-badge, "\\", "\\10"); }
.fad.@{fa-css-prefix}-id-card:after { content: replace(@fa-var-id-card, "\\", "\\10"); }
.fad.@{fa-css-prefix}-id-card-alt:after { content: replace(@fa-var-id-card-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-igloo:after { content: replace(@fa-var-igloo, "\\", "\\10"); }
.fad.@{fa-css-prefix}-image:after { content: replace(@fa-var-image, "\\", "\\10"); }
.fad.@{fa-css-prefix}-images:after { content: replace(@fa-var-images, "\\", "\\10"); }
.fad.@{fa-css-prefix}-inbox:after { content: replace(@fa-var-inbox, "\\", "\\10"); }
.fad.@{fa-css-prefix}-inbox-in:after { content: replace(@fa-var-inbox-in, "\\", "\\10"); }
.fad.@{fa-css-prefix}-inbox-out:after { content: replace(@fa-var-inbox-out, "\\", "\\10"); }
.fad.@{fa-css-prefix}-indent:after { content: replace(@fa-var-indent, "\\", "\\10"); }
.fad.@{fa-css-prefix}-industry:after { content: replace(@fa-var-industry, "\\", "\\10"); }
.fad.@{fa-css-prefix}-industry-alt:after { content: replace(@fa-var-industry-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-infinity:after { content: replace(@fa-var-infinity, "\\", "\\10"); }
.fad.@{fa-css-prefix}-info:after { content: replace(@fa-var-info, "\\", "\\10"); }
.fad.@{fa-css-prefix}-info-circle:after { content: replace(@fa-var-info-circle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-info-square:after { content: replace(@fa-var-info-square, "\\", "\\10"); }
.fad.@{fa-css-prefix}-inhaler:after { content: replace(@fa-var-inhaler, "\\", "\\10"); }
.fad.@{fa-css-prefix}-integral:after { content: replace(@fa-var-integral, "\\", "\\10"); }
.fad.@{fa-css-prefix}-intersection:after { content: replace(@fa-var-intersection, "\\", "\\10"); }
.fad.@{fa-css-prefix}-inventory:after { content: replace(@fa-var-inventory, "\\", "\\10"); }
.fad.@{fa-css-prefix}-island-tropical:after { content: replace(@fa-var-island-tropical, "\\", "\\10"); }
.fad.@{fa-css-prefix}-italic:after { content: replace(@fa-var-italic, "\\", "\\10"); }
.fad.@{fa-css-prefix}-jack-o-lantern:after { content: replace(@fa-var-jack-o-lantern, "\\", "\\10"); }
.fad.@{fa-css-prefix}-jedi:after { content: replace(@fa-var-jedi, "\\", "\\10"); }
.fad.@{fa-css-prefix}-joint:after { content: replace(@fa-var-joint, "\\", "\\10"); }
.fad.@{fa-css-prefix}-journal-whills:after { content: replace(@fa-var-journal-whills, "\\", "\\10"); }
.fad.@{fa-css-prefix}-kaaba:after { content: replace(@fa-var-kaaba, "\\", "\\10"); }
.fad.@{fa-css-prefix}-kerning:after { content: replace(@fa-var-kerning, "\\", "\\10"); }
.fad.@{fa-css-prefix}-key:after { content: replace(@fa-var-key, "\\", "\\10"); }
.fad.@{fa-css-prefix}-key-skeleton:after { content: replace(@fa-var-key-skeleton, "\\", "\\10"); }
.fad.@{fa-css-prefix}-keyboard:after { content: replace(@fa-var-keyboard, "\\", "\\10"); }
.fad.@{fa-css-prefix}-keynote:after { content: replace(@fa-var-keynote, "\\", "\\10"); }
.fad.@{fa-css-prefix}-khanda:after { content: replace(@fa-var-khanda, "\\", "\\10"); }
.fad.@{fa-css-prefix}-kidneys:after { content: replace(@fa-var-kidneys, "\\", "\\10"); }
.fad.@{fa-css-prefix}-kiss:after { content: replace(@fa-var-kiss, "\\", "\\10"); }
.fad.@{fa-css-prefix}-kiss-beam:after { content: replace(@fa-var-kiss-beam, "\\", "\\10"); }
.fad.@{fa-css-prefix}-kiss-wink-heart:after { content: replace(@fa-var-kiss-wink-heart, "\\", "\\10"); }
.fad.@{fa-css-prefix}-kite:after { content: replace(@fa-var-kite, "\\", "\\10"); }
.fad.@{fa-css-prefix}-kiwi-bird:after { content: replace(@fa-var-kiwi-bird, "\\", "\\10"); }
.fad.@{fa-css-prefix}-knife-kitchen:after { content: replace(@fa-var-knife-kitchen, "\\", "\\10"); }
.fad.@{fa-css-prefix}-lambda:after { content: replace(@fa-var-lambda, "\\", "\\10"); }
.fad.@{fa-css-prefix}-lamp:after { content: replace(@fa-var-lamp, "\\", "\\10"); }
.fad.@{fa-css-prefix}-landmark:after { content: replace(@fa-var-landmark, "\\", "\\10"); }
.fad.@{fa-css-prefix}-landmark-alt:after { content: replace(@fa-var-landmark-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-language:after { content: replace(@fa-var-language, "\\", "\\10"); }
.fad.@{fa-css-prefix}-laptop:after { content: replace(@fa-var-laptop, "\\", "\\10"); }
.fad.@{fa-css-prefix}-laptop-code:after { content: replace(@fa-var-laptop-code, "\\", "\\10"); }
.fad.@{fa-css-prefix}-laptop-medical:after { content: replace(@fa-var-laptop-medical, "\\", "\\10"); }
.fad.@{fa-css-prefix}-laugh:after { content: replace(@fa-var-laugh, "\\", "\\10"); }
.fad.@{fa-css-prefix}-laugh-beam:after { content: replace(@fa-var-laugh-beam, "\\", "\\10"); }
.fad.@{fa-css-prefix}-laugh-squint:after { content: replace(@fa-var-laugh-squint, "\\", "\\10"); }
.fad.@{fa-css-prefix}-laugh-wink:after { content: replace(@fa-var-laugh-wink, "\\", "\\10"); }
.fad.@{fa-css-prefix}-layer-group:after { content: replace(@fa-var-layer-group, "\\", "\\10"); }
.fad.@{fa-css-prefix}-layer-minus:after { content: replace(@fa-var-layer-minus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-layer-plus:after { content: replace(@fa-var-layer-plus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-leaf:after { content: replace(@fa-var-leaf, "\\", "\\10"); }
.fad.@{fa-css-prefix}-leaf-heart:after { content: replace(@fa-var-leaf-heart, "\\", "\\10"); }
.fad.@{fa-css-prefix}-leaf-maple:after { content: replace(@fa-var-leaf-maple, "\\", "\\10"); }
.fad.@{fa-css-prefix}-leaf-oak:after { content: replace(@fa-var-leaf-oak, "\\", "\\10"); }
.fad.@{fa-css-prefix}-lemon:after { content: replace(@fa-var-lemon, "\\", "\\10"); }
.fad.@{fa-css-prefix}-less-than:after { content: replace(@fa-var-less-than, "\\", "\\10"); }
.fad.@{fa-css-prefix}-less-than-equal:after { content: replace(@fa-var-less-than-equal, "\\", "\\10"); }
.fad.@{fa-css-prefix}-level-down:after { content: replace(@fa-var-level-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-level-down-alt:after { content: replace(@fa-var-level-down-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-level-up:after { content: replace(@fa-var-level-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-level-up-alt:after { content: replace(@fa-var-level-up-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-life-ring:after { content: replace(@fa-var-life-ring, "\\", "\\10"); }
.fad.@{fa-css-prefix}-lightbulb:after { content: replace(@fa-var-lightbulb, "\\", "\\10"); }
.fad.@{fa-css-prefix}-lightbulb-dollar:after { content: replace(@fa-var-lightbulb-dollar, "\\", "\\10"); }
.fad.@{fa-css-prefix}-lightbulb-exclamation:after { content: replace(@fa-var-lightbulb-exclamation, "\\", "\\10"); }
.fad.@{fa-css-prefix}-lightbulb-on:after { content: replace(@fa-var-lightbulb-on, "\\", "\\10"); }
.fad.@{fa-css-prefix}-lightbulb-slash:after { content: replace(@fa-var-lightbulb-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-lights-holiday:after { content: replace(@fa-var-lights-holiday, "\\", "\\10"); }
.fad.@{fa-css-prefix}-line-columns:after { content: replace(@fa-var-line-columns, "\\", "\\10"); }
.fad.@{fa-css-prefix}-line-height:after { content: replace(@fa-var-line-height, "\\", "\\10"); }
.fad.@{fa-css-prefix}-link:after { content: replace(@fa-var-link, "\\", "\\10"); }
.fad.@{fa-css-prefix}-lips:after { content: replace(@fa-var-lips, "\\", "\\10"); }
.fad.@{fa-css-prefix}-lira-sign:after { content: replace(@fa-var-lira-sign, "\\", "\\10"); }
.fad.@{fa-css-prefix}-list:after { content: replace(@fa-var-list, "\\", "\\10"); }
.fad.@{fa-css-prefix}-list-alt:after { content: replace(@fa-var-list-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-list-ol:after { content: replace(@fa-var-list-ol, "\\", "\\10"); }
.fad.@{fa-css-prefix}-list-ul:after { content: replace(@fa-var-list-ul, "\\", "\\10"); }
.fad.@{fa-css-prefix}-location:after { content: replace(@fa-var-location, "\\", "\\10"); }
.fad.@{fa-css-prefix}-location-arrow:after { content: replace(@fa-var-location-arrow, "\\", "\\10"); }
.fad.@{fa-css-prefix}-location-circle:after { content: replace(@fa-var-location-circle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-location-slash:after { content: replace(@fa-var-location-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-lock:after { content: replace(@fa-var-lock, "\\", "\\10"); }
.fad.@{fa-css-prefix}-lock-alt:after { content: replace(@fa-var-lock-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-lock-open:after { content: replace(@fa-var-lock-open, "\\", "\\10"); }
.fad.@{fa-css-prefix}-lock-open-alt:after { content: replace(@fa-var-lock-open-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-long-arrow-alt-down:after { content: replace(@fa-var-long-arrow-alt-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-long-arrow-alt-left:after { content: replace(@fa-var-long-arrow-alt-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-long-arrow-alt-right:after { content: replace(@fa-var-long-arrow-alt-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-long-arrow-alt-up:after { content: replace(@fa-var-long-arrow-alt-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-long-arrow-down:after { content: replace(@fa-var-long-arrow-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-long-arrow-left:after { content: replace(@fa-var-long-arrow-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-long-arrow-right:after { content: replace(@fa-var-long-arrow-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-long-arrow-up:after { content: replace(@fa-var-long-arrow-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-loveseat:after { content: replace(@fa-var-loveseat, "\\", "\\10"); }
.fad.@{fa-css-prefix}-low-vision:after { content: replace(@fa-var-low-vision, "\\", "\\10"); }
.fad.@{fa-css-prefix}-luchador:after { content: replace(@fa-var-luchador, "\\", "\\10"); }
.fad.@{fa-css-prefix}-luggage-cart:after { content: replace(@fa-var-luggage-cart, "\\", "\\10"); }
.fad.@{fa-css-prefix}-lungs:after { content: replace(@fa-var-lungs, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mace:after { content: replace(@fa-var-mace, "\\", "\\10"); }
.fad.@{fa-css-prefix}-magic:after { content: replace(@fa-var-magic, "\\", "\\10"); }
.fad.@{fa-css-prefix}-magnet:after { content: replace(@fa-var-magnet, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mail-bulk:after { content: replace(@fa-var-mail-bulk, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mailbox:after { content: replace(@fa-var-mailbox, "\\", "\\10"); }
.fad.@{fa-css-prefix}-male:after { content: replace(@fa-var-male, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mandolin:after { content: replace(@fa-var-mandolin, "\\", "\\10"); }
.fad.@{fa-css-prefix}-map:after { content: replace(@fa-var-map, "\\", "\\10"); }
.fad.@{fa-css-prefix}-map-marked:after { content: replace(@fa-var-map-marked, "\\", "\\10"); }
.fad.@{fa-css-prefix}-map-marked-alt:after { content: replace(@fa-var-map-marked-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-map-marker:after { content: replace(@fa-var-map-marker, "\\", "\\10"); }
.fad.@{fa-css-prefix}-map-marker-alt:after { content: replace(@fa-var-map-marker-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-map-marker-alt-slash:after { content: replace(@fa-var-map-marker-alt-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-map-marker-check:after { content: replace(@fa-var-map-marker-check, "\\", "\\10"); }
.fad.@{fa-css-prefix}-map-marker-edit:after { content: replace(@fa-var-map-marker-edit, "\\", "\\10"); }
.fad.@{fa-css-prefix}-map-marker-exclamation:after { content: replace(@fa-var-map-marker-exclamation, "\\", "\\10"); }
.fad.@{fa-css-prefix}-map-marker-minus:after { content: replace(@fa-var-map-marker-minus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-map-marker-plus:after { content: replace(@fa-var-map-marker-plus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-map-marker-question:after { content: replace(@fa-var-map-marker-question, "\\", "\\10"); }
.fad.@{fa-css-prefix}-map-marker-slash:after { content: replace(@fa-var-map-marker-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-map-marker-smile:after { content: replace(@fa-var-map-marker-smile, "\\", "\\10"); }
.fad.@{fa-css-prefix}-map-marker-times:after { content: replace(@fa-var-map-marker-times, "\\", "\\10"); }
.fad.@{fa-css-prefix}-map-pin:after { content: replace(@fa-var-map-pin, "\\", "\\10"); }
.fad.@{fa-css-prefix}-map-signs:after { content: replace(@fa-var-map-signs, "\\", "\\10"); }
.fad.@{fa-css-prefix}-marker:after { content: replace(@fa-var-marker, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mars:after { content: replace(@fa-var-mars, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mars-double:after { content: replace(@fa-var-mars-double, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mars-stroke:after { content: replace(@fa-var-mars-stroke, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mars-stroke-h:after { content: replace(@fa-var-mars-stroke-h, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mars-stroke-v:after { content: replace(@fa-var-mars-stroke-v, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mask:after { content: replace(@fa-var-mask, "\\", "\\10"); }
.fad.@{fa-css-prefix}-meat:after { content: replace(@fa-var-meat, "\\", "\\10"); }
.fad.@{fa-css-prefix}-medal:after { content: replace(@fa-var-medal, "\\", "\\10"); }
.fad.@{fa-css-prefix}-medkit:after { content: replace(@fa-var-medkit, "\\", "\\10"); }
.fad.@{fa-css-prefix}-megaphone:after { content: replace(@fa-var-megaphone, "\\", "\\10"); }
.fad.@{fa-css-prefix}-meh:after { content: replace(@fa-var-meh, "\\", "\\10"); }
.fad.@{fa-css-prefix}-meh-blank:after { content: replace(@fa-var-meh-blank, "\\", "\\10"); }
.fad.@{fa-css-prefix}-meh-rolling-eyes:after { content: replace(@fa-var-meh-rolling-eyes, "\\", "\\10"); }
.fad.@{fa-css-prefix}-memory:after { content: replace(@fa-var-memory, "\\", "\\10"); }
.fad.@{fa-css-prefix}-menorah:after { content: replace(@fa-var-menorah, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mercury:after { content: replace(@fa-var-mercury, "\\", "\\10"); }
.fad.@{fa-css-prefix}-meteor:after { content: replace(@fa-var-meteor, "\\", "\\10"); }
.fad.@{fa-css-prefix}-microchip:after { content: replace(@fa-var-microchip, "\\", "\\10"); }
.fad.@{fa-css-prefix}-microphone:after { content: replace(@fa-var-microphone, "\\", "\\10"); }
.fad.@{fa-css-prefix}-microphone-alt:after { content: replace(@fa-var-microphone-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-microphone-alt-slash:after { content: replace(@fa-var-microphone-alt-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-microphone-slash:after { content: replace(@fa-var-microphone-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-microscope:after { content: replace(@fa-var-microscope, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mind-share:after { content: replace(@fa-var-mind-share, "\\", "\\10"); }
.fad.@{fa-css-prefix}-minus:after { content: replace(@fa-var-minus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-minus-circle:after { content: replace(@fa-var-minus-circle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-minus-hexagon:after { content: replace(@fa-var-minus-hexagon, "\\", "\\10"); }
.fad.@{fa-css-prefix}-minus-octagon:after { content: replace(@fa-var-minus-octagon, "\\", "\\10"); }
.fad.@{fa-css-prefix}-minus-square:after { content: replace(@fa-var-minus-square, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mistletoe:after { content: replace(@fa-var-mistletoe, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mitten:after { content: replace(@fa-var-mitten, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mobile:after { content: replace(@fa-var-mobile, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mobile-alt:after { content: replace(@fa-var-mobile-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mobile-android:after { content: replace(@fa-var-mobile-android, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mobile-android-alt:after { content: replace(@fa-var-mobile-android-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-money-bill:after { content: replace(@fa-var-money-bill, "\\", "\\10"); }
.fad.@{fa-css-prefix}-money-bill-alt:after { content: replace(@fa-var-money-bill-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-money-bill-wave:after { content: replace(@fa-var-money-bill-wave, "\\", "\\10"); }
.fad.@{fa-css-prefix}-money-bill-wave-alt:after { content: replace(@fa-var-money-bill-wave-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-money-check:after { content: replace(@fa-var-money-check, "\\", "\\10"); }
.fad.@{fa-css-prefix}-money-check-alt:after { content: replace(@fa-var-money-check-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-money-check-edit:after { content: replace(@fa-var-money-check-edit, "\\", "\\10"); }
.fad.@{fa-css-prefix}-money-check-edit-alt:after { content: replace(@fa-var-money-check-edit-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-monitor-heart-rate:after { content: replace(@fa-var-monitor-heart-rate, "\\", "\\10"); }
.fad.@{fa-css-prefix}-monkey:after { content: replace(@fa-var-monkey, "\\", "\\10"); }
.fad.@{fa-css-prefix}-monument:after { content: replace(@fa-var-monument, "\\", "\\10"); }
.fad.@{fa-css-prefix}-moon:after { content: replace(@fa-var-moon, "\\", "\\10"); }
.fad.@{fa-css-prefix}-moon-cloud:after { content: replace(@fa-var-moon-cloud, "\\", "\\10"); }
.fad.@{fa-css-prefix}-moon-stars:after { content: replace(@fa-var-moon-stars, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mortar-pestle:after { content: replace(@fa-var-mortar-pestle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mosque:after { content: replace(@fa-var-mosque, "\\", "\\10"); }
.fad.@{fa-css-prefix}-motorcycle:after { content: replace(@fa-var-motorcycle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mountain:after { content: replace(@fa-var-mountain, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mountains:after { content: replace(@fa-var-mountains, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mouse-pointer:after { content: replace(@fa-var-mouse-pointer, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mug:after { content: replace(@fa-var-mug, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mug-hot:after { content: replace(@fa-var-mug-hot, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mug-marshmallows:after { content: replace(@fa-var-mug-marshmallows, "\\", "\\10"); }
.fad.@{fa-css-prefix}-mug-tea:after { content: replace(@fa-var-mug-tea, "\\", "\\10"); }
.fad.@{fa-css-prefix}-music:after { content: replace(@fa-var-music, "\\", "\\10"); }
.fad.@{fa-css-prefix}-narwhal:after { content: replace(@fa-var-narwhal, "\\", "\\10"); }
.fad.@{fa-css-prefix}-network-wired:after { content: replace(@fa-var-network-wired, "\\", "\\10"); }
.fad.@{fa-css-prefix}-neuter:after { content: replace(@fa-var-neuter, "\\", "\\10"); }
.fad.@{fa-css-prefix}-newspaper:after { content: replace(@fa-var-newspaper, "\\", "\\10"); }
.fad.@{fa-css-prefix}-not-equal:after { content: replace(@fa-var-not-equal, "\\", "\\10"); }
.fad.@{fa-css-prefix}-notes-medical:after { content: replace(@fa-var-notes-medical, "\\", "\\10"); }
.fad.@{fa-css-prefix}-object-group:after { content: replace(@fa-var-object-group, "\\", "\\10"); }
.fad.@{fa-css-prefix}-object-ungroup:after { content: replace(@fa-var-object-ungroup, "\\", "\\10"); }
.fad.@{fa-css-prefix}-octagon:after { content: replace(@fa-var-octagon, "\\", "\\10"); }
.fad.@{fa-css-prefix}-oil-can:after { content: replace(@fa-var-oil-can, "\\", "\\10"); }
.fad.@{fa-css-prefix}-oil-temp:after { content: replace(@fa-var-oil-temp, "\\", "\\10"); }
.fad.@{fa-css-prefix}-om:after { content: replace(@fa-var-om, "\\", "\\10"); }
.fad.@{fa-css-prefix}-omega:after { content: replace(@fa-var-omega, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ornament:after { content: replace(@fa-var-ornament, "\\", "\\10"); }
.fad.@{fa-css-prefix}-otter:after { content: replace(@fa-var-otter, "\\", "\\10"); }
.fad.@{fa-css-prefix}-outdent:after { content: replace(@fa-var-outdent, "\\", "\\10"); }
.fad.@{fa-css-prefix}-overline:after { content: replace(@fa-var-overline, "\\", "\\10"); }
.fad.@{fa-css-prefix}-page-break:after { content: replace(@fa-var-page-break, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pager:after { content: replace(@fa-var-pager, "\\", "\\10"); }
.fad.@{fa-css-prefix}-paint-brush:after { content: replace(@fa-var-paint-brush, "\\", "\\10"); }
.fad.@{fa-css-prefix}-paint-brush-alt:after { content: replace(@fa-var-paint-brush-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-paint-roller:after { content: replace(@fa-var-paint-roller, "\\", "\\10"); }
.fad.@{fa-css-prefix}-palette:after { content: replace(@fa-var-palette, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pallet:after { content: replace(@fa-var-pallet, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pallet-alt:after { content: replace(@fa-var-pallet-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-paper-plane:after { content: replace(@fa-var-paper-plane, "\\", "\\10"); }
.fad.@{fa-css-prefix}-paperclip:after { content: replace(@fa-var-paperclip, "\\", "\\10"); }
.fad.@{fa-css-prefix}-parachute-box:after { content: replace(@fa-var-parachute-box, "\\", "\\10"); }
.fad.@{fa-css-prefix}-paragraph:after { content: replace(@fa-var-paragraph, "\\", "\\10"); }
.fad.@{fa-css-prefix}-paragraph-rtl:after { content: replace(@fa-var-paragraph-rtl, "\\", "\\10"); }
.fad.@{fa-css-prefix}-parking:after { content: replace(@fa-var-parking, "\\", "\\10"); }
.fad.@{fa-css-prefix}-parking-circle:after { content: replace(@fa-var-parking-circle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-parking-circle-slash:after { content: replace(@fa-var-parking-circle-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-parking-slash:after { content: replace(@fa-var-parking-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-passport:after { content: replace(@fa-var-passport, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pastafarianism:after { content: replace(@fa-var-pastafarianism, "\\", "\\10"); }
.fad.@{fa-css-prefix}-paste:after { content: replace(@fa-var-paste, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pause:after { content: replace(@fa-var-pause, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pause-circle:after { content: replace(@fa-var-pause-circle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-paw:after { content: replace(@fa-var-paw, "\\", "\\10"); }
.fad.@{fa-css-prefix}-paw-alt:after { content: replace(@fa-var-paw-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-paw-claws:after { content: replace(@fa-var-paw-claws, "\\", "\\10"); }
.fad.@{fa-css-prefix}-peace:after { content: replace(@fa-var-peace, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pegasus:after { content: replace(@fa-var-pegasus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pen:after { content: replace(@fa-var-pen, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pen-alt:after { content: replace(@fa-var-pen-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pen-fancy:after { content: replace(@fa-var-pen-fancy, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pen-nib:after { content: replace(@fa-var-pen-nib, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pen-square:after { content: replace(@fa-var-pen-square, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pencil:after { content: replace(@fa-var-pencil, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pencil-alt:after { content: replace(@fa-var-pencil-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pencil-paintbrush:after { content: replace(@fa-var-pencil-paintbrush, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pencil-ruler:after { content: replace(@fa-var-pencil-ruler, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pennant:after { content: replace(@fa-var-pennant, "\\", "\\10"); }
.fad.@{fa-css-prefix}-people-carry:after { content: replace(@fa-var-people-carry, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pepper-hot:after { content: replace(@fa-var-pepper-hot, "\\", "\\10"); }
.fad.@{fa-css-prefix}-percent:after { content: replace(@fa-var-percent, "\\", "\\10"); }
.fad.@{fa-css-prefix}-percentage:after { content: replace(@fa-var-percentage, "\\", "\\10"); }
.fad.@{fa-css-prefix}-person-booth:after { content: replace(@fa-var-person-booth, "\\", "\\10"); }
.fad.@{fa-css-prefix}-person-carry:after { content: replace(@fa-var-person-carry, "\\", "\\10"); }
.fad.@{fa-css-prefix}-person-dolly:after { content: replace(@fa-var-person-dolly, "\\", "\\10"); }
.fad.@{fa-css-prefix}-person-dolly-empty:after { content: replace(@fa-var-person-dolly-empty, "\\", "\\10"); }
.fad.@{fa-css-prefix}-person-sign:after { content: replace(@fa-var-person-sign, "\\", "\\10"); }
.fad.@{fa-css-prefix}-phone:after { content: replace(@fa-var-phone, "\\", "\\10"); }
.fad.@{fa-css-prefix}-phone-laptop:after { content: replace(@fa-var-phone-laptop, "\\", "\\10"); }
.fad.@{fa-css-prefix}-phone-office:after { content: replace(@fa-var-phone-office, "\\", "\\10"); }
.fad.@{fa-css-prefix}-phone-plus:after { content: replace(@fa-var-phone-plus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-phone-slash:after { content: replace(@fa-var-phone-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-phone-square:after { content: replace(@fa-var-phone-square, "\\", "\\10"); }
.fad.@{fa-css-prefix}-phone-volume:after { content: replace(@fa-var-phone-volume, "\\", "\\10"); }
.fad.@{fa-css-prefix}-photo-video:after { content: replace(@fa-var-photo-video, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pi:after { content: replace(@fa-var-pi, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pie:after { content: replace(@fa-var-pie, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pig:after { content: replace(@fa-var-pig, "\\", "\\10"); }
.fad.@{fa-css-prefix}-piggy-bank:after { content: replace(@fa-var-piggy-bank, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pills:after { content: replace(@fa-var-pills, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pizza:after { content: replace(@fa-var-pizza, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pizza-slice:after { content: replace(@fa-var-pizza-slice, "\\", "\\10"); }
.fad.@{fa-css-prefix}-place-of-worship:after { content: replace(@fa-var-place-of-worship, "\\", "\\10"); }
.fad.@{fa-css-prefix}-plane:after { content: replace(@fa-var-plane, "\\", "\\10"); }
.fad.@{fa-css-prefix}-plane-alt:after { content: replace(@fa-var-plane-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-plane-arrival:after { content: replace(@fa-var-plane-arrival, "\\", "\\10"); }
.fad.@{fa-css-prefix}-plane-departure:after { content: replace(@fa-var-plane-departure, "\\", "\\10"); }
.fad.@{fa-css-prefix}-play:after { content: replace(@fa-var-play, "\\", "\\10"); }
.fad.@{fa-css-prefix}-play-circle:after { content: replace(@fa-var-play-circle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-plug:after { content: replace(@fa-var-plug, "\\", "\\10"); }
.fad.@{fa-css-prefix}-plus:after { content: replace(@fa-var-plus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-plus-circle:after { content: replace(@fa-var-plus-circle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-plus-hexagon:after { content: replace(@fa-var-plus-hexagon, "\\", "\\10"); }
.fad.@{fa-css-prefix}-plus-octagon:after { content: replace(@fa-var-plus-octagon, "\\", "\\10"); }
.fad.@{fa-css-prefix}-plus-square:after { content: replace(@fa-var-plus-square, "\\", "\\10"); }
.fad.@{fa-css-prefix}-podcast:after { content: replace(@fa-var-podcast, "\\", "\\10"); }
.fad.@{fa-css-prefix}-podium:after { content: replace(@fa-var-podium, "\\", "\\10"); }
.fad.@{fa-css-prefix}-podium-star:after { content: replace(@fa-var-podium-star, "\\", "\\10"); }
.fad.@{fa-css-prefix}-poll:after { content: replace(@fa-var-poll, "\\", "\\10"); }
.fad.@{fa-css-prefix}-poll-h:after { content: replace(@fa-var-poll-h, "\\", "\\10"); }
.fad.@{fa-css-prefix}-poll-people:after { content: replace(@fa-var-poll-people, "\\", "\\10"); }
.fad.@{fa-css-prefix}-poo:after { content: replace(@fa-var-poo, "\\", "\\10"); }
.fad.@{fa-css-prefix}-poo-storm:after { content: replace(@fa-var-poo-storm, "\\", "\\10"); }
.fad.@{fa-css-prefix}-poop:after { content: replace(@fa-var-poop, "\\", "\\10"); }
.fad.@{fa-css-prefix}-popcorn:after { content: replace(@fa-var-popcorn, "\\", "\\10"); }
.fad.@{fa-css-prefix}-portrait:after { content: replace(@fa-var-portrait, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pound-sign:after { content: replace(@fa-var-pound-sign, "\\", "\\10"); }
.fad.@{fa-css-prefix}-power-off:after { content: replace(@fa-var-power-off, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pray:after { content: replace(@fa-var-pray, "\\", "\\10"); }
.fad.@{fa-css-prefix}-praying-hands:after { content: replace(@fa-var-praying-hands, "\\", "\\10"); }
.fad.@{fa-css-prefix}-prescription:after { content: replace(@fa-var-prescription, "\\", "\\10"); }
.fad.@{fa-css-prefix}-prescription-bottle:after { content: replace(@fa-var-prescription-bottle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-prescription-bottle-alt:after { content: replace(@fa-var-prescription-bottle-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-presentation:after { content: replace(@fa-var-presentation, "\\", "\\10"); }
.fad.@{fa-css-prefix}-print:after { content: replace(@fa-var-print, "\\", "\\10"); }
.fad.@{fa-css-prefix}-print-search:after { content: replace(@fa-var-print-search, "\\", "\\10"); }
.fad.@{fa-css-prefix}-print-slash:after { content: replace(@fa-var-print-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-procedures:after { content: replace(@fa-var-procedures, "\\", "\\10"); }
.fad.@{fa-css-prefix}-project-diagram:after { content: replace(@fa-var-project-diagram, "\\", "\\10"); }
.fad.@{fa-css-prefix}-pumpkin:after { content: replace(@fa-var-pumpkin, "\\", "\\10"); }
.fad.@{fa-css-prefix}-puzzle-piece:after { content: replace(@fa-var-puzzle-piece, "\\", "\\10"); }
.fad.@{fa-css-prefix}-qrcode:after { content: replace(@fa-var-qrcode, "\\", "\\10"); }
.fad.@{fa-css-prefix}-question:after { content: replace(@fa-var-question, "\\", "\\10"); }
.fad.@{fa-css-prefix}-question-circle:after { content: replace(@fa-var-question-circle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-question-square:after { content: replace(@fa-var-question-square, "\\", "\\10"); }
.fad.@{fa-css-prefix}-quidditch:after { content: replace(@fa-var-quidditch, "\\", "\\10"); }
.fad.@{fa-css-prefix}-quote-left:after { content: replace(@fa-var-quote-left, "\\", "\\10"); }
.fad.@{fa-css-prefix}-quote-right:after { content: replace(@fa-var-quote-right, "\\", "\\10"); }
.fad.@{fa-css-prefix}-quran:after { content: replace(@fa-var-quran, "\\", "\\10"); }
.fad.@{fa-css-prefix}-rabbit:after { content: replace(@fa-var-rabbit, "\\", "\\10"); }
.fad.@{fa-css-prefix}-rabbit-fast:after { content: replace(@fa-var-rabbit-fast, "\\", "\\10"); }
.fad.@{fa-css-prefix}-racquet:after { content: replace(@fa-var-racquet, "\\", "\\10"); }
.fad.@{fa-css-prefix}-radiation:after { content: replace(@fa-var-radiation, "\\", "\\10"); }
.fad.@{fa-css-prefix}-radiation-alt:after { content: replace(@fa-var-radiation-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-rainbow:after { content: replace(@fa-var-rainbow, "\\", "\\10"); }
.fad.@{fa-css-prefix}-raindrops:after { content: replace(@fa-var-raindrops, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ram:after { content: replace(@fa-var-ram, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ramp-loading:after { content: replace(@fa-var-ramp-loading, "\\", "\\10"); }
.fad.@{fa-css-prefix}-random:after { content: replace(@fa-var-random, "\\", "\\10"); }
.fad.@{fa-css-prefix}-receipt:after { content: replace(@fa-var-receipt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-rectangle-landscape:after { content: replace(@fa-var-rectangle-landscape, "\\", "\\10"); }
.fad.@{fa-css-prefix}-rectangle-portrait:after { content: replace(@fa-var-rectangle-portrait, "\\", "\\10"); }
.fad.@{fa-css-prefix}-rectangle-wide:after { content: replace(@fa-var-rectangle-wide, "\\", "\\10"); }
.fad.@{fa-css-prefix}-recycle:after { content: replace(@fa-var-recycle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-redo:after { content: replace(@fa-var-redo, "\\", "\\10"); }
.fad.@{fa-css-prefix}-redo-alt:after { content: replace(@fa-var-redo-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-registered:after { content: replace(@fa-var-registered, "\\", "\\10"); }
.fad.@{fa-css-prefix}-remove-format:after { content: replace(@fa-var-remove-format, "\\", "\\10"); }
.fad.@{fa-css-prefix}-repeat:after { content: replace(@fa-var-repeat, "\\", "\\10"); }
.fad.@{fa-css-prefix}-repeat-1:after { content: replace(@fa-var-repeat-1, "\\", "\\10"); }
.fad.@{fa-css-prefix}-repeat-1-alt:after { content: replace(@fa-var-repeat-1-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-repeat-alt:after { content: replace(@fa-var-repeat-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-reply:after { content: replace(@fa-var-reply, "\\", "\\10"); }
.fad.@{fa-css-prefix}-reply-all:after { content: replace(@fa-var-reply-all, "\\", "\\10"); }
.fad.@{fa-css-prefix}-republican:after { content: replace(@fa-var-republican, "\\", "\\10"); }
.fad.@{fa-css-prefix}-restroom:after { content: replace(@fa-var-restroom, "\\", "\\10"); }
.fad.@{fa-css-prefix}-retweet:after { content: replace(@fa-var-retweet, "\\", "\\10"); }
.fad.@{fa-css-prefix}-retweet-alt:after { content: replace(@fa-var-retweet-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ribbon:after { content: replace(@fa-var-ribbon, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ring:after { content: replace(@fa-var-ring, "\\", "\\10"); }
.fad.@{fa-css-prefix}-rings-wedding:after { content: replace(@fa-var-rings-wedding, "\\", "\\10"); }
.fad.@{fa-css-prefix}-road:after { content: replace(@fa-var-road, "\\", "\\10"); }
.fad.@{fa-css-prefix}-robot:after { content: replace(@fa-var-robot, "\\", "\\10"); }
.fad.@{fa-css-prefix}-rocket:after { content: replace(@fa-var-rocket, "\\", "\\10"); }
.fad.@{fa-css-prefix}-route:after { content: replace(@fa-var-route, "\\", "\\10"); }
.fad.@{fa-css-prefix}-route-highway:after { content: replace(@fa-var-route-highway, "\\", "\\10"); }
.fad.@{fa-css-prefix}-route-interstate:after { content: replace(@fa-var-route-interstate, "\\", "\\10"); }
.fad.@{fa-css-prefix}-rss:after { content: replace(@fa-var-rss, "\\", "\\10"); }
.fad.@{fa-css-prefix}-rss-square:after { content: replace(@fa-var-rss-square, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ruble-sign:after { content: replace(@fa-var-ruble-sign, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ruler:after { content: replace(@fa-var-ruler, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ruler-combined:after { content: replace(@fa-var-ruler-combined, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ruler-horizontal:after { content: replace(@fa-var-ruler-horizontal, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ruler-triangle:after { content: replace(@fa-var-ruler-triangle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ruler-vertical:after { content: replace(@fa-var-ruler-vertical, "\\", "\\10"); }
.fad.@{fa-css-prefix}-running:after { content: replace(@fa-var-running, "\\", "\\10"); }
.fad.@{fa-css-prefix}-rupee-sign:after { content: replace(@fa-var-rupee-sign, "\\", "\\10"); }
.fad.@{fa-css-prefix}-rv:after { content: replace(@fa-var-rv, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sack:after { content: replace(@fa-var-sack, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sack-dollar:after { content: replace(@fa-var-sack-dollar, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sad-cry:after { content: replace(@fa-var-sad-cry, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sad-tear:after { content: replace(@fa-var-sad-tear, "\\", "\\10"); }
.fad.@{fa-css-prefix}-salad:after { content: replace(@fa-var-salad, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sandwich:after { content: replace(@fa-var-sandwich, "\\", "\\10"); }
.fad.@{fa-css-prefix}-satellite:after { content: replace(@fa-var-satellite, "\\", "\\10"); }
.fad.@{fa-css-prefix}-satellite-dish:after { content: replace(@fa-var-satellite-dish, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sausage:after { content: replace(@fa-var-sausage, "\\", "\\10"); }
.fad.@{fa-css-prefix}-save:after { content: replace(@fa-var-save, "\\", "\\10"); }
.fad.@{fa-css-prefix}-scalpel:after { content: replace(@fa-var-scalpel, "\\", "\\10"); }
.fad.@{fa-css-prefix}-scalpel-path:after { content: replace(@fa-var-scalpel-path, "\\", "\\10"); }
.fad.@{fa-css-prefix}-scanner:after { content: replace(@fa-var-scanner, "\\", "\\10"); }
.fad.@{fa-css-prefix}-scanner-keyboard:after { content: replace(@fa-var-scanner-keyboard, "\\", "\\10"); }
.fad.@{fa-css-prefix}-scanner-touchscreen:after { content: replace(@fa-var-scanner-touchscreen, "\\", "\\10"); }
.fad.@{fa-css-prefix}-scarecrow:after { content: replace(@fa-var-scarecrow, "\\", "\\10"); }
.fad.@{fa-css-prefix}-scarf:after { content: replace(@fa-var-scarf, "\\", "\\10"); }
.fad.@{fa-css-prefix}-school:after { content: replace(@fa-var-school, "\\", "\\10"); }
.fad.@{fa-css-prefix}-screwdriver:after { content: replace(@fa-var-screwdriver, "\\", "\\10"); }
.fad.@{fa-css-prefix}-scroll:after { content: replace(@fa-var-scroll, "\\", "\\10"); }
.fad.@{fa-css-prefix}-scroll-old:after { content: replace(@fa-var-scroll-old, "\\", "\\10"); }
.fad.@{fa-css-prefix}-scrubber:after { content: replace(@fa-var-scrubber, "\\", "\\10"); }
.fad.@{fa-css-prefix}-scythe:after { content: replace(@fa-var-scythe, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sd-card:after { content: replace(@fa-var-sd-card, "\\", "\\10"); }
.fad.@{fa-css-prefix}-search:after { content: replace(@fa-var-search, "\\", "\\10"); }
.fad.@{fa-css-prefix}-search-dollar:after { content: replace(@fa-var-search-dollar, "\\", "\\10"); }
.fad.@{fa-css-prefix}-search-location:after { content: replace(@fa-var-search-location, "\\", "\\10"); }
.fad.@{fa-css-prefix}-search-minus:after { content: replace(@fa-var-search-minus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-search-plus:after { content: replace(@fa-var-search-plus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-seedling:after { content: replace(@fa-var-seedling, "\\", "\\10"); }
.fad.@{fa-css-prefix}-send-back:after { content: replace(@fa-var-send-back, "\\", "\\10"); }
.fad.@{fa-css-prefix}-send-backward:after { content: replace(@fa-var-send-backward, "\\", "\\10"); }
.fad.@{fa-css-prefix}-server:after { content: replace(@fa-var-server, "\\", "\\10"); }
.fad.@{fa-css-prefix}-shapes:after { content: replace(@fa-var-shapes, "\\", "\\10"); }
.fad.@{fa-css-prefix}-share:after { content: replace(@fa-var-share, "\\", "\\10"); }
.fad.@{fa-css-prefix}-share-all:after { content: replace(@fa-var-share-all, "\\", "\\10"); }
.fad.@{fa-css-prefix}-share-alt:after { content: replace(@fa-var-share-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-share-alt-square:after { content: replace(@fa-var-share-alt-square, "\\", "\\10"); }
.fad.@{fa-css-prefix}-share-square:after { content: replace(@fa-var-share-square, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sheep:after { content: replace(@fa-var-sheep, "\\", "\\10"); }
.fad.@{fa-css-prefix}-shekel-sign:after { content: replace(@fa-var-shekel-sign, "\\", "\\10"); }
.fad.@{fa-css-prefix}-shield:after { content: replace(@fa-var-shield, "\\", "\\10"); }
.fad.@{fa-css-prefix}-shield-alt:after { content: replace(@fa-var-shield-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-shield-check:after { content: replace(@fa-var-shield-check, "\\", "\\10"); }
.fad.@{fa-css-prefix}-shield-cross:after { content: replace(@fa-var-shield-cross, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ship:after { content: replace(@fa-var-ship, "\\", "\\10"); }
.fad.@{fa-css-prefix}-shipping-fast:after { content: replace(@fa-var-shipping-fast, "\\", "\\10"); }
.fad.@{fa-css-prefix}-shipping-timed:after { content: replace(@fa-var-shipping-timed, "\\", "\\10"); }
.fad.@{fa-css-prefix}-shish-kebab:after { content: replace(@fa-var-shish-kebab, "\\", "\\10"); }
.fad.@{fa-css-prefix}-shoe-prints:after { content: replace(@fa-var-shoe-prints, "\\", "\\10"); }
.fad.@{fa-css-prefix}-shopping-bag:after { content: replace(@fa-var-shopping-bag, "\\", "\\10"); }
.fad.@{fa-css-prefix}-shopping-basket:after { content: replace(@fa-var-shopping-basket, "\\", "\\10"); }
.fad.@{fa-css-prefix}-shopping-cart:after { content: replace(@fa-var-shopping-cart, "\\", "\\10"); }
.fad.@{fa-css-prefix}-shovel:after { content: replace(@fa-var-shovel, "\\", "\\10"); }
.fad.@{fa-css-prefix}-shovel-snow:after { content: replace(@fa-var-shovel-snow, "\\", "\\10"); }
.fad.@{fa-css-prefix}-shower:after { content: replace(@fa-var-shower, "\\", "\\10"); }
.fad.@{fa-css-prefix}-shredder:after { content: replace(@fa-var-shredder, "\\", "\\10"); }
.fad.@{fa-css-prefix}-shuttle-van:after { content: replace(@fa-var-shuttle-van, "\\", "\\10"); }
.fad.@{fa-css-prefix}-shuttlecock:after { content: replace(@fa-var-shuttlecock, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sickle:after { content: replace(@fa-var-sickle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sigma:after { content: replace(@fa-var-sigma, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sign:after { content: replace(@fa-var-sign, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sign-in:after { content: replace(@fa-var-sign-in, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sign-in-alt:after { content: replace(@fa-var-sign-in-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sign-language:after { content: replace(@fa-var-sign-language, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sign-out:after { content: replace(@fa-var-sign-out, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sign-out-alt:after { content: replace(@fa-var-sign-out-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-signal:after { content: replace(@fa-var-signal, "\\", "\\10"); }
.fad.@{fa-css-prefix}-signal-1:after { content: replace(@fa-var-signal-1, "\\", "\\10"); }
.fad.@{fa-css-prefix}-signal-2:after { content: replace(@fa-var-signal-2, "\\", "\\10"); }
.fad.@{fa-css-prefix}-signal-3:after { content: replace(@fa-var-signal-3, "\\", "\\10"); }
.fad.@{fa-css-prefix}-signal-4:after { content: replace(@fa-var-signal-4, "\\", "\\10"); }
.fad.@{fa-css-prefix}-signal-alt:after { content: replace(@fa-var-signal-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-signal-alt-1:after { content: replace(@fa-var-signal-alt-1, "\\", "\\10"); }
.fad.@{fa-css-prefix}-signal-alt-2:after { content: replace(@fa-var-signal-alt-2, "\\", "\\10"); }
.fad.@{fa-css-prefix}-signal-alt-3:after { content: replace(@fa-var-signal-alt-3, "\\", "\\10"); }
.fad.@{fa-css-prefix}-signal-alt-slash:after { content: replace(@fa-var-signal-alt-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-signal-slash:after { content: replace(@fa-var-signal-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-signature:after { content: replace(@fa-var-signature, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sim-card:after { content: replace(@fa-var-sim-card, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sitemap:after { content: replace(@fa-var-sitemap, "\\", "\\10"); }
.fad.@{fa-css-prefix}-skating:after { content: replace(@fa-var-skating, "\\", "\\10"); }
.fad.@{fa-css-prefix}-skeleton:after { content: replace(@fa-var-skeleton, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ski-jump:after { content: replace(@fa-var-ski-jump, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ski-lift:after { content: replace(@fa-var-ski-lift, "\\", "\\10"); }
.fad.@{fa-css-prefix}-skiing:after { content: replace(@fa-var-skiing, "\\", "\\10"); }
.fad.@{fa-css-prefix}-skiing-nordic:after { content: replace(@fa-var-skiing-nordic, "\\", "\\10"); }
.fad.@{fa-css-prefix}-skull:after { content: replace(@fa-var-skull, "\\", "\\10"); }
.fad.@{fa-css-prefix}-skull-crossbones:after { content: replace(@fa-var-skull-crossbones, "\\", "\\10"); }
.fad.@{fa-css-prefix}-slash:after { content: replace(@fa-var-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sledding:after { content: replace(@fa-var-sledding, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sleigh:after { content: replace(@fa-var-sleigh, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sliders-h:after { content: replace(@fa-var-sliders-h, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sliders-h-square:after { content: replace(@fa-var-sliders-h-square, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sliders-v:after { content: replace(@fa-var-sliders-v, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sliders-v-square:after { content: replace(@fa-var-sliders-v-square, "\\", "\\10"); }
.fad.@{fa-css-prefix}-smile:after { content: replace(@fa-var-smile, "\\", "\\10"); }
.fad.@{fa-css-prefix}-smile-beam:after { content: replace(@fa-var-smile-beam, "\\", "\\10"); }
.fad.@{fa-css-prefix}-smile-plus:after { content: replace(@fa-var-smile-plus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-smile-wink:after { content: replace(@fa-var-smile-wink, "\\", "\\10"); }
.fad.@{fa-css-prefix}-smog:after { content: replace(@fa-var-smog, "\\", "\\10"); }
.fad.@{fa-css-prefix}-smoke:after { content: replace(@fa-var-smoke, "\\", "\\10"); }
.fad.@{fa-css-prefix}-smoking:after { content: replace(@fa-var-smoking, "\\", "\\10"); }
.fad.@{fa-css-prefix}-smoking-ban:after { content: replace(@fa-var-smoking-ban, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sms:after { content: replace(@fa-var-sms, "\\", "\\10"); }
.fad.@{fa-css-prefix}-snake:after { content: replace(@fa-var-snake, "\\", "\\10"); }
.fad.@{fa-css-prefix}-snooze:after { content: replace(@fa-var-snooze, "\\", "\\10"); }
.fad.@{fa-css-prefix}-snow-blowing:after { content: replace(@fa-var-snow-blowing, "\\", "\\10"); }
.fad.@{fa-css-prefix}-snowboarding:after { content: replace(@fa-var-snowboarding, "\\", "\\10"); }
.fad.@{fa-css-prefix}-snowflake:after { content: replace(@fa-var-snowflake, "\\", "\\10"); }
.fad.@{fa-css-prefix}-snowflakes:after { content: replace(@fa-var-snowflakes, "\\", "\\10"); }
.fad.@{fa-css-prefix}-snowman:after { content: replace(@fa-var-snowman, "\\", "\\10"); }
.fad.@{fa-css-prefix}-snowmobile:after { content: replace(@fa-var-snowmobile, "\\", "\\10"); }
.fad.@{fa-css-prefix}-snowplow:after { content: replace(@fa-var-snowplow, "\\", "\\10"); }
.fad.@{fa-css-prefix}-socks:after { content: replace(@fa-var-socks, "\\", "\\10"); }
.fad.@{fa-css-prefix}-solar-panel:after { content: replace(@fa-var-solar-panel, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sort:after { content: replace(@fa-var-sort, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sort-alpha-down:after { content: replace(@fa-var-sort-alpha-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sort-alpha-down-alt:after { content: replace(@fa-var-sort-alpha-down-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sort-alpha-up:after { content: replace(@fa-var-sort-alpha-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sort-alpha-up-alt:after { content: replace(@fa-var-sort-alpha-up-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sort-alt:after { content: replace(@fa-var-sort-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sort-amount-down:after { content: replace(@fa-var-sort-amount-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sort-amount-down-alt:after { content: replace(@fa-var-sort-amount-down-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sort-amount-up:after { content: replace(@fa-var-sort-amount-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sort-amount-up-alt:after { content: replace(@fa-var-sort-amount-up-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sort-down:after { content: replace(@fa-var-sort-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sort-numeric-down:after { content: replace(@fa-var-sort-numeric-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sort-numeric-down-alt:after { content: replace(@fa-var-sort-numeric-down-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sort-numeric-up:after { content: replace(@fa-var-sort-numeric-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sort-numeric-up-alt:after { content: replace(@fa-var-sort-numeric-up-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sort-shapes-down:after { content: replace(@fa-var-sort-shapes-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sort-shapes-down-alt:after { content: replace(@fa-var-sort-shapes-down-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sort-shapes-up:after { content: replace(@fa-var-sort-shapes-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sort-shapes-up-alt:after { content: replace(@fa-var-sort-shapes-up-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sort-size-down:after { content: replace(@fa-var-sort-size-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sort-size-down-alt:after { content: replace(@fa-var-sort-size-down-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sort-size-up:after { content: replace(@fa-var-sort-size-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sort-size-up-alt:after { content: replace(@fa-var-sort-size-up-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sort-up:after { content: replace(@fa-var-sort-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-soup:after { content: replace(@fa-var-soup, "\\", "\\10"); }
.fad.@{fa-css-prefix}-spa:after { content: replace(@fa-var-spa, "\\", "\\10"); }
.fad.@{fa-css-prefix}-space-shuttle:after { content: replace(@fa-var-space-shuttle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-spade:after { content: replace(@fa-var-spade, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sparkles:after { content: replace(@fa-var-sparkles, "\\", "\\10"); }
.fad.@{fa-css-prefix}-spell-check:after { content: replace(@fa-var-spell-check, "\\", "\\10"); }
.fad.@{fa-css-prefix}-spider:after { content: replace(@fa-var-spider, "\\", "\\10"); }
.fad.@{fa-css-prefix}-spider-black-widow:after { content: replace(@fa-var-spider-black-widow, "\\", "\\10"); }
.fad.@{fa-css-prefix}-spider-web:after { content: replace(@fa-var-spider-web, "\\", "\\10"); }
.fad.@{fa-css-prefix}-spinner:after { content: replace(@fa-var-spinner, "\\", "\\10"); }
.fad.@{fa-css-prefix}-spinner-third:after { content: replace(@fa-var-spinner-third, "\\", "\\10"); }
.fad.@{fa-css-prefix}-splotch:after { content: replace(@fa-var-splotch, "\\", "\\10"); }
.fad.@{fa-css-prefix}-spray-can:after { content: replace(@fa-var-spray-can, "\\", "\\10"); }
.fad.@{fa-css-prefix}-square:after { content: replace(@fa-var-square, "\\", "\\10"); }
.fad.@{fa-css-prefix}-square-full:after { content: replace(@fa-var-square-full, "\\", "\\10"); }
.fad.@{fa-css-prefix}-square-root:after { content: replace(@fa-var-square-root, "\\", "\\10"); }
.fad.@{fa-css-prefix}-square-root-alt:after { content: replace(@fa-var-square-root-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-squirrel:after { content: replace(@fa-var-squirrel, "\\", "\\10"); }
.fad.@{fa-css-prefix}-staff:after { content: replace(@fa-var-staff, "\\", "\\10"); }
.fad.@{fa-css-prefix}-stamp:after { content: replace(@fa-var-stamp, "\\", "\\10"); }
.fad.@{fa-css-prefix}-star:after { content: replace(@fa-var-star, "\\", "\\10"); }
.fad.@{fa-css-prefix}-star-and-crescent:after { content: replace(@fa-var-star-and-crescent, "\\", "\\10"); }
.fad.@{fa-css-prefix}-star-christmas:after { content: replace(@fa-var-star-christmas, "\\", "\\10"); }
.fad.@{fa-css-prefix}-star-exclamation:after { content: replace(@fa-var-star-exclamation, "\\", "\\10"); }
.fad.@{fa-css-prefix}-star-half:after { content: replace(@fa-var-star-half, "\\", "\\10"); }
.fad.@{fa-css-prefix}-star-half-alt:after { content: replace(@fa-var-star-half-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-star-of-david:after { content: replace(@fa-var-star-of-david, "\\", "\\10"); }
.fad.@{fa-css-prefix}-star-of-life:after { content: replace(@fa-var-star-of-life, "\\", "\\10"); }
.fad.@{fa-css-prefix}-stars:after { content: replace(@fa-var-stars, "\\", "\\10"); }
.fad.@{fa-css-prefix}-steak:after { content: replace(@fa-var-steak, "\\", "\\10"); }
.fad.@{fa-css-prefix}-steering-wheel:after { content: replace(@fa-var-steering-wheel, "\\", "\\10"); }
.fad.@{fa-css-prefix}-step-backward:after { content: replace(@fa-var-step-backward, "\\", "\\10"); }
.fad.@{fa-css-prefix}-step-forward:after { content: replace(@fa-var-step-forward, "\\", "\\10"); }
.fad.@{fa-css-prefix}-stethoscope:after { content: replace(@fa-var-stethoscope, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sticky-note:after { content: replace(@fa-var-sticky-note, "\\", "\\10"); }
.fad.@{fa-css-prefix}-stocking:after { content: replace(@fa-var-stocking, "\\", "\\10"); }
.fad.@{fa-css-prefix}-stomach:after { content: replace(@fa-var-stomach, "\\", "\\10"); }
.fad.@{fa-css-prefix}-stop:after { content: replace(@fa-var-stop, "\\", "\\10"); }
.fad.@{fa-css-prefix}-stop-circle:after { content: replace(@fa-var-stop-circle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-stopwatch:after { content: replace(@fa-var-stopwatch, "\\", "\\10"); }
.fad.@{fa-css-prefix}-store:after { content: replace(@fa-var-store, "\\", "\\10"); }
.fad.@{fa-css-prefix}-store-alt:after { content: replace(@fa-var-store-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-stream:after { content: replace(@fa-var-stream, "\\", "\\10"); }
.fad.@{fa-css-prefix}-street-view:after { content: replace(@fa-var-street-view, "\\", "\\10"); }
.fad.@{fa-css-prefix}-stretcher:after { content: replace(@fa-var-stretcher, "\\", "\\10"); }
.fad.@{fa-css-prefix}-strikethrough:after { content: replace(@fa-var-strikethrough, "\\", "\\10"); }
.fad.@{fa-css-prefix}-stroopwafel:after { content: replace(@fa-var-stroopwafel, "\\", "\\10"); }
.fad.@{fa-css-prefix}-subscript:after { content: replace(@fa-var-subscript, "\\", "\\10"); }
.fad.@{fa-css-prefix}-subway:after { content: replace(@fa-var-subway, "\\", "\\10"); }
.fad.@{fa-css-prefix}-suitcase:after { content: replace(@fa-var-suitcase, "\\", "\\10"); }
.fad.@{fa-css-prefix}-suitcase-rolling:after { content: replace(@fa-var-suitcase-rolling, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sun:after { content: replace(@fa-var-sun, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sun-cloud:after { content: replace(@fa-var-sun-cloud, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sun-dust:after { content: replace(@fa-var-sun-dust, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sun-haze:after { content: replace(@fa-var-sun-haze, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sunglasses:after { content: replace(@fa-var-sunglasses, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sunrise:after { content: replace(@fa-var-sunrise, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sunset:after { content: replace(@fa-var-sunset, "\\", "\\10"); }
.fad.@{fa-css-prefix}-superscript:after { content: replace(@fa-var-superscript, "\\", "\\10"); }
.fad.@{fa-css-prefix}-surprise:after { content: replace(@fa-var-surprise, "\\", "\\10"); }
.fad.@{fa-css-prefix}-swatchbook:after { content: replace(@fa-var-swatchbook, "\\", "\\10"); }
.fad.@{fa-css-prefix}-swimmer:after { content: replace(@fa-var-swimmer, "\\", "\\10"); }
.fad.@{fa-css-prefix}-swimming-pool:after { content: replace(@fa-var-swimming-pool, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sword:after { content: replace(@fa-var-sword, "\\", "\\10"); }
.fad.@{fa-css-prefix}-swords:after { content: replace(@fa-var-swords, "\\", "\\10"); }
.fad.@{fa-css-prefix}-synagogue:after { content: replace(@fa-var-synagogue, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sync:after { content: replace(@fa-var-sync, "\\", "\\10"); }
.fad.@{fa-css-prefix}-sync-alt:after { content: replace(@fa-var-sync-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-syringe:after { content: replace(@fa-var-syringe, "\\", "\\10"); }
.fad.@{fa-css-prefix}-table:after { content: replace(@fa-var-table, "\\", "\\10"); }
.fad.@{fa-css-prefix}-table-tennis:after { content: replace(@fa-var-table-tennis, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tablet:after { content: replace(@fa-var-tablet, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tablet-alt:after { content: replace(@fa-var-tablet-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tablet-android:after { content: replace(@fa-var-tablet-android, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tablet-android-alt:after { content: replace(@fa-var-tablet-android-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tablet-rugged:after { content: replace(@fa-var-tablet-rugged, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tablets:after { content: replace(@fa-var-tablets, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tachometer:after { content: replace(@fa-var-tachometer, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tachometer-alt:after { content: replace(@fa-var-tachometer-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tachometer-alt-average:after { content: replace(@fa-var-tachometer-alt-average, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tachometer-alt-fast:after { content: replace(@fa-var-tachometer-alt-fast, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tachometer-alt-fastest:after { content: replace(@fa-var-tachometer-alt-fastest, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tachometer-alt-slow:after { content: replace(@fa-var-tachometer-alt-slow, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tachometer-alt-slowest:after { content: replace(@fa-var-tachometer-alt-slowest, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tachometer-average:after { content: replace(@fa-var-tachometer-average, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tachometer-fast:after { content: replace(@fa-var-tachometer-fast, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tachometer-fastest:after { content: replace(@fa-var-tachometer-fastest, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tachometer-slow:after { content: replace(@fa-var-tachometer-slow, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tachometer-slowest:after { content: replace(@fa-var-tachometer-slowest, "\\", "\\10"); }
.fad.@{fa-css-prefix}-taco:after { content: replace(@fa-var-taco, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tag:after { content: replace(@fa-var-tag, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tags:after { content: replace(@fa-var-tags, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tally:after { content: replace(@fa-var-tally, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tanakh:after { content: replace(@fa-var-tanakh, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tape:after { content: replace(@fa-var-tape, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tasks:after { content: replace(@fa-var-tasks, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tasks-alt:after { content: replace(@fa-var-tasks-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-taxi:after { content: replace(@fa-var-taxi, "\\", "\\10"); }
.fad.@{fa-css-prefix}-teeth:after { content: replace(@fa-var-teeth, "\\", "\\10"); }
.fad.@{fa-css-prefix}-teeth-open:after { content: replace(@fa-var-teeth-open, "\\", "\\10"); }
.fad.@{fa-css-prefix}-temperature-frigid:after { content: replace(@fa-var-temperature-frigid, "\\", "\\10"); }
.fad.@{fa-css-prefix}-temperature-high:after { content: replace(@fa-var-temperature-high, "\\", "\\10"); }
.fad.@{fa-css-prefix}-temperature-hot:after { content: replace(@fa-var-temperature-hot, "\\", "\\10"); }
.fad.@{fa-css-prefix}-temperature-low:after { content: replace(@fa-var-temperature-low, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tenge:after { content: replace(@fa-var-tenge, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tennis-ball:after { content: replace(@fa-var-tennis-ball, "\\", "\\10"); }
.fad.@{fa-css-prefix}-terminal:after { content: replace(@fa-var-terminal, "\\", "\\10"); }
.fad.@{fa-css-prefix}-text:after { content: replace(@fa-var-text, "\\", "\\10"); }
.fad.@{fa-css-prefix}-text-height:after { content: replace(@fa-var-text-height, "\\", "\\10"); }
.fad.@{fa-css-prefix}-text-size:after { content: replace(@fa-var-text-size, "\\", "\\10"); }
.fad.@{fa-css-prefix}-text-width:after { content: replace(@fa-var-text-width, "\\", "\\10"); }
.fad.@{fa-css-prefix}-th:after { content: replace(@fa-var-th, "\\", "\\10"); }
.fad.@{fa-css-prefix}-th-large:after { content: replace(@fa-var-th-large, "\\", "\\10"); }
.fad.@{fa-css-prefix}-th-list:after { content: replace(@fa-var-th-list, "\\", "\\10"); }
.fad.@{fa-css-prefix}-theater-masks:after { content: replace(@fa-var-theater-masks, "\\", "\\10"); }
.fad.@{fa-css-prefix}-thermometer:after { content: replace(@fa-var-thermometer, "\\", "\\10"); }
.fad.@{fa-css-prefix}-thermometer-empty:after { content: replace(@fa-var-thermometer-empty, "\\", "\\10"); }
.fad.@{fa-css-prefix}-thermometer-full:after { content: replace(@fa-var-thermometer-full, "\\", "\\10"); }
.fad.@{fa-css-prefix}-thermometer-half:after { content: replace(@fa-var-thermometer-half, "\\", "\\10"); }
.fad.@{fa-css-prefix}-thermometer-quarter:after { content: replace(@fa-var-thermometer-quarter, "\\", "\\10"); }
.fad.@{fa-css-prefix}-thermometer-three-quarters:after { content: replace(@fa-var-thermometer-three-quarters, "\\", "\\10"); }
.fad.@{fa-css-prefix}-theta:after { content: replace(@fa-var-theta, "\\", "\\10"); }
.fad.@{fa-css-prefix}-thumbs-down:after { content: replace(@fa-var-thumbs-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-thumbs-up:after { content: replace(@fa-var-thumbs-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-thumbtack:after { content: replace(@fa-var-thumbtack, "\\", "\\10"); }
.fad.@{fa-css-prefix}-thunderstorm:after { content: replace(@fa-var-thunderstorm, "\\", "\\10"); }
.fad.@{fa-css-prefix}-thunderstorm-moon:after { content: replace(@fa-var-thunderstorm-moon, "\\", "\\10"); }
.fad.@{fa-css-prefix}-thunderstorm-sun:after { content: replace(@fa-var-thunderstorm-sun, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ticket:after { content: replace(@fa-var-ticket, "\\", "\\10"); }
.fad.@{fa-css-prefix}-ticket-alt:after { content: replace(@fa-var-ticket-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tilde:after { content: replace(@fa-var-tilde, "\\", "\\10"); }
.fad.@{fa-css-prefix}-times:after { content: replace(@fa-var-times, "\\", "\\10"); }
.fad.@{fa-css-prefix}-times-circle:after { content: replace(@fa-var-times-circle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-times-hexagon:after { content: replace(@fa-var-times-hexagon, "\\", "\\10"); }
.fad.@{fa-css-prefix}-times-octagon:after { content: replace(@fa-var-times-octagon, "\\", "\\10"); }
.fad.@{fa-css-prefix}-times-square:after { content: replace(@fa-var-times-square, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tint:after { content: replace(@fa-var-tint, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tint-slash:after { content: replace(@fa-var-tint-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tire:after { content: replace(@fa-var-tire, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tire-flat:after { content: replace(@fa-var-tire-flat, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tire-pressure-warning:after { content: replace(@fa-var-tire-pressure-warning, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tire-rugged:after { content: replace(@fa-var-tire-rugged, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tired:after { content: replace(@fa-var-tired, "\\", "\\10"); }
.fad.@{fa-css-prefix}-toggle-off:after { content: replace(@fa-var-toggle-off, "\\", "\\10"); }
.fad.@{fa-css-prefix}-toggle-on:after { content: replace(@fa-var-toggle-on, "\\", "\\10"); }
.fad.@{fa-css-prefix}-toilet:after { content: replace(@fa-var-toilet, "\\", "\\10"); }
.fad.@{fa-css-prefix}-toilet-paper:after { content: replace(@fa-var-toilet-paper, "\\", "\\10"); }
.fad.@{fa-css-prefix}-toilet-paper-alt:after { content: replace(@fa-var-toilet-paper-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tombstone:after { content: replace(@fa-var-tombstone, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tombstone-alt:after { content: replace(@fa-var-tombstone-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-toolbox:after { content: replace(@fa-var-toolbox, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tools:after { content: replace(@fa-var-tools, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tooth:after { content: replace(@fa-var-tooth, "\\", "\\10"); }
.fad.@{fa-css-prefix}-toothbrush:after { content: replace(@fa-var-toothbrush, "\\", "\\10"); }
.fad.@{fa-css-prefix}-torah:after { content: replace(@fa-var-torah, "\\", "\\10"); }
.fad.@{fa-css-prefix}-torii-gate:after { content: replace(@fa-var-torii-gate, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tornado:after { content: replace(@fa-var-tornado, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tractor:after { content: replace(@fa-var-tractor, "\\", "\\10"); }
.fad.@{fa-css-prefix}-trademark:after { content: replace(@fa-var-trademark, "\\", "\\10"); }
.fad.@{fa-css-prefix}-traffic-cone:after { content: replace(@fa-var-traffic-cone, "\\", "\\10"); }
.fad.@{fa-css-prefix}-traffic-light:after { content: replace(@fa-var-traffic-light, "\\", "\\10"); }
.fad.@{fa-css-prefix}-traffic-light-go:after { content: replace(@fa-var-traffic-light-go, "\\", "\\10"); }
.fad.@{fa-css-prefix}-traffic-light-slow:after { content: replace(@fa-var-traffic-light-slow, "\\", "\\10"); }
.fad.@{fa-css-prefix}-traffic-light-stop:after { content: replace(@fa-var-traffic-light-stop, "\\", "\\10"); }
.fad.@{fa-css-prefix}-train:after { content: replace(@fa-var-train, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tram:after { content: replace(@fa-var-tram, "\\", "\\10"); }
.fad.@{fa-css-prefix}-transgender:after { content: replace(@fa-var-transgender, "\\", "\\10"); }
.fad.@{fa-css-prefix}-transgender-alt:after { content: replace(@fa-var-transgender-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-trash:after { content: replace(@fa-var-trash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-trash-alt:after { content: replace(@fa-var-trash-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-trash-restore:after { content: replace(@fa-var-trash-restore, "\\", "\\10"); }
.fad.@{fa-css-prefix}-trash-restore-alt:after { content: replace(@fa-var-trash-restore-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-trash-undo:after { content: replace(@fa-var-trash-undo, "\\", "\\10"); }
.fad.@{fa-css-prefix}-trash-undo-alt:after { content: replace(@fa-var-trash-undo-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-treasure-chest:after { content: replace(@fa-var-treasure-chest, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tree:after { content: replace(@fa-var-tree, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tree-alt:after { content: replace(@fa-var-tree-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tree-christmas:after { content: replace(@fa-var-tree-christmas, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tree-decorated:after { content: replace(@fa-var-tree-decorated, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tree-large:after { content: replace(@fa-var-tree-large, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tree-palm:after { content: replace(@fa-var-tree-palm, "\\", "\\10"); }
.fad.@{fa-css-prefix}-trees:after { content: replace(@fa-var-trees, "\\", "\\10"); }
.fad.@{fa-css-prefix}-triangle:after { content: replace(@fa-var-triangle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-trophy:after { content: replace(@fa-var-trophy, "\\", "\\10"); }
.fad.@{fa-css-prefix}-trophy-alt:after { content: replace(@fa-var-trophy-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-truck:after { content: replace(@fa-var-truck, "\\", "\\10"); }
.fad.@{fa-css-prefix}-truck-container:after { content: replace(@fa-var-truck-container, "\\", "\\10"); }
.fad.@{fa-css-prefix}-truck-couch:after { content: replace(@fa-var-truck-couch, "\\", "\\10"); }
.fad.@{fa-css-prefix}-truck-loading:after { content: replace(@fa-var-truck-loading, "\\", "\\10"); }
.fad.@{fa-css-prefix}-truck-monster:after { content: replace(@fa-var-truck-monster, "\\", "\\10"); }
.fad.@{fa-css-prefix}-truck-moving:after { content: replace(@fa-var-truck-moving, "\\", "\\10"); }
.fad.@{fa-css-prefix}-truck-pickup:after { content: replace(@fa-var-truck-pickup, "\\", "\\10"); }
.fad.@{fa-css-prefix}-truck-plow:after { content: replace(@fa-var-truck-plow, "\\", "\\10"); }
.fad.@{fa-css-prefix}-truck-ramp:after { content: replace(@fa-var-truck-ramp, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tshirt:after { content: replace(@fa-var-tshirt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tty:after { content: replace(@fa-var-tty, "\\", "\\10"); }
.fad.@{fa-css-prefix}-turkey:after { content: replace(@fa-var-turkey, "\\", "\\10"); }
.fad.@{fa-css-prefix}-turtle:after { content: replace(@fa-var-turtle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tv:after { content: replace(@fa-var-tv, "\\", "\\10"); }
.fad.@{fa-css-prefix}-tv-retro:after { content: replace(@fa-var-tv-retro, "\\", "\\10"); }
.fad.@{fa-css-prefix}-umbrella:after { content: replace(@fa-var-umbrella, "\\", "\\10"); }
.fad.@{fa-css-prefix}-umbrella-beach:after { content: replace(@fa-var-umbrella-beach, "\\", "\\10"); }
.fad.@{fa-css-prefix}-underline:after { content: replace(@fa-var-underline, "\\", "\\10"); }
.fad.@{fa-css-prefix}-undo:after { content: replace(@fa-var-undo, "\\", "\\10"); }
.fad.@{fa-css-prefix}-undo-alt:after { content: replace(@fa-var-undo-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-unicorn:after { content: replace(@fa-var-unicorn, "\\", "\\10"); }
.fad.@{fa-css-prefix}-union:after { content: replace(@fa-var-union, "\\", "\\10"); }
.fad.@{fa-css-prefix}-universal-access:after { content: replace(@fa-var-universal-access, "\\", "\\10"); }
.fad.@{fa-css-prefix}-university:after { content: replace(@fa-var-university, "\\", "\\10"); }
.fad.@{fa-css-prefix}-unlink:after { content: replace(@fa-var-unlink, "\\", "\\10"); }
.fad.@{fa-css-prefix}-unlock:after { content: replace(@fa-var-unlock, "\\", "\\10"); }
.fad.@{fa-css-prefix}-unlock-alt:after { content: replace(@fa-var-unlock-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-upload:after { content: replace(@fa-var-upload, "\\", "\\10"); }
.fad.@{fa-css-prefix}-usd-circle:after { content: replace(@fa-var-usd-circle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-usd-square:after { content: replace(@fa-var-usd-square, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user:after { content: replace(@fa-var-user, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-alt:after { content: replace(@fa-var-user-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-alt-slash:after { content: replace(@fa-var-user-alt-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-astronaut:after { content: replace(@fa-var-user-astronaut, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-chart:after { content: replace(@fa-var-user-chart, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-check:after { content: replace(@fa-var-user-check, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-circle:after { content: replace(@fa-var-user-circle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-clock:after { content: replace(@fa-var-user-clock, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-cog:after { content: replace(@fa-var-user-cog, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-crown:after { content: replace(@fa-var-user-crown, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-edit:after { content: replace(@fa-var-user-edit, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-friends:after { content: replace(@fa-var-user-friends, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-graduate:after { content: replace(@fa-var-user-graduate, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-hard-hat:after { content: replace(@fa-var-user-hard-hat, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-headset:after { content: replace(@fa-var-user-headset, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-injured:after { content: replace(@fa-var-user-injured, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-lock:after { content: replace(@fa-var-user-lock, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-md:after { content: replace(@fa-var-user-md, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-md-chat:after { content: replace(@fa-var-user-md-chat, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-minus:after { content: replace(@fa-var-user-minus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-ninja:after { content: replace(@fa-var-user-ninja, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-nurse:after { content: replace(@fa-var-user-nurse, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-plus:after { content: replace(@fa-var-user-plus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-secret:after { content: replace(@fa-var-user-secret, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-shield:after { content: replace(@fa-var-user-shield, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-slash:after { content: replace(@fa-var-user-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-tag:after { content: replace(@fa-var-user-tag, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-tie:after { content: replace(@fa-var-user-tie, "\\", "\\10"); }
.fad.@{fa-css-prefix}-user-times:after { content: replace(@fa-var-user-times, "\\", "\\10"); }
.fad.@{fa-css-prefix}-users:after { content: replace(@fa-var-users, "\\", "\\10"); }
.fad.@{fa-css-prefix}-users-class:after { content: replace(@fa-var-users-class, "\\", "\\10"); }
.fad.@{fa-css-prefix}-users-cog:after { content: replace(@fa-var-users-cog, "\\", "\\10"); }
.fad.@{fa-css-prefix}-users-crown:after { content: replace(@fa-var-users-crown, "\\", "\\10"); }
.fad.@{fa-css-prefix}-users-medical:after { content: replace(@fa-var-users-medical, "\\", "\\10"); }
.fad.@{fa-css-prefix}-utensil-fork:after { content: replace(@fa-var-utensil-fork, "\\", "\\10"); }
.fad.@{fa-css-prefix}-utensil-knife:after { content: replace(@fa-var-utensil-knife, "\\", "\\10"); }
.fad.@{fa-css-prefix}-utensil-spoon:after { content: replace(@fa-var-utensil-spoon, "\\", "\\10"); }
.fad.@{fa-css-prefix}-utensils:after { content: replace(@fa-var-utensils, "\\", "\\10"); }
.fad.@{fa-css-prefix}-utensils-alt:after { content: replace(@fa-var-utensils-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-value-absolute:after { content: replace(@fa-var-value-absolute, "\\", "\\10"); }
.fad.@{fa-css-prefix}-vector-square:after { content: replace(@fa-var-vector-square, "\\", "\\10"); }
.fad.@{fa-css-prefix}-venus:after { content: replace(@fa-var-venus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-venus-double:after { content: replace(@fa-var-venus-double, "\\", "\\10"); }
.fad.@{fa-css-prefix}-venus-mars:after { content: replace(@fa-var-venus-mars, "\\", "\\10"); }
.fad.@{fa-css-prefix}-vial:after { content: replace(@fa-var-vial, "\\", "\\10"); }
.fad.@{fa-css-prefix}-vials:after { content: replace(@fa-var-vials, "\\", "\\10"); }
.fad.@{fa-css-prefix}-video:after { content: replace(@fa-var-video, "\\", "\\10"); }
.fad.@{fa-css-prefix}-video-plus:after { content: replace(@fa-var-video-plus, "\\", "\\10"); }
.fad.@{fa-css-prefix}-video-slash:after { content: replace(@fa-var-video-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-vihara:after { content: replace(@fa-var-vihara, "\\", "\\10"); }
.fad.@{fa-css-prefix}-voicemail:after { content: replace(@fa-var-voicemail, "\\", "\\10"); }
.fad.@{fa-css-prefix}-volcano:after { content: replace(@fa-var-volcano, "\\", "\\10"); }
.fad.@{fa-css-prefix}-volleyball-ball:after { content: replace(@fa-var-volleyball-ball, "\\", "\\10"); }
.fad.@{fa-css-prefix}-volume:after { content: replace(@fa-var-volume, "\\", "\\10"); }
.fad.@{fa-css-prefix}-volume-down:after { content: replace(@fa-var-volume-down, "\\", "\\10"); }
.fad.@{fa-css-prefix}-volume-mute:after { content: replace(@fa-var-volume-mute, "\\", "\\10"); }
.fad.@{fa-css-prefix}-volume-off:after { content: replace(@fa-var-volume-off, "\\", "\\10"); }
.fad.@{fa-css-prefix}-volume-slash:after { content: replace(@fa-var-volume-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-volume-up:after { content: replace(@fa-var-volume-up, "\\", "\\10"); }
.fad.@{fa-css-prefix}-vote-nay:after { content: replace(@fa-var-vote-nay, "\\", "\\10"); }
.fad.@{fa-css-prefix}-vote-yea:after { content: replace(@fa-var-vote-yea, "\\", "\\10"); }
.fad.@{fa-css-prefix}-vr-cardboard:after { content: replace(@fa-var-vr-cardboard, "\\", "\\10"); }
.fad.@{fa-css-prefix}-walker:after { content: replace(@fa-var-walker, "\\", "\\10"); }
.fad.@{fa-css-prefix}-walking:after { content: replace(@fa-var-walking, "\\", "\\10"); }
.fad.@{fa-css-prefix}-wallet:after { content: replace(@fa-var-wallet, "\\", "\\10"); }
.fad.@{fa-css-prefix}-wand:after { content: replace(@fa-var-wand, "\\", "\\10"); }
.fad.@{fa-css-prefix}-wand-magic:after { content: replace(@fa-var-wand-magic, "\\", "\\10"); }
.fad.@{fa-css-prefix}-warehouse:after { content: replace(@fa-var-warehouse, "\\", "\\10"); }
.fad.@{fa-css-prefix}-warehouse-alt:after { content: replace(@fa-var-warehouse-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-washer:after { content: replace(@fa-var-washer, "\\", "\\10"); }
.fad.@{fa-css-prefix}-watch:after { content: replace(@fa-var-watch, "\\", "\\10"); }
.fad.@{fa-css-prefix}-watch-fitness:after { content: replace(@fa-var-watch-fitness, "\\", "\\10"); }
.fad.@{fa-css-prefix}-water:after { content: replace(@fa-var-water, "\\", "\\10"); }
.fad.@{fa-css-prefix}-water-lower:after { content: replace(@fa-var-water-lower, "\\", "\\10"); }
.fad.@{fa-css-prefix}-water-rise:after { content: replace(@fa-var-water-rise, "\\", "\\10"); }
.fad.@{fa-css-prefix}-wave-sine:after { content: replace(@fa-var-wave-sine, "\\", "\\10"); }
.fad.@{fa-css-prefix}-wave-square:after { content: replace(@fa-var-wave-square, "\\", "\\10"); }
.fad.@{fa-css-prefix}-wave-triangle:after { content: replace(@fa-var-wave-triangle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-webcam:after { content: replace(@fa-var-webcam, "\\", "\\10"); }
.fad.@{fa-css-prefix}-webcam-slash:after { content: replace(@fa-var-webcam-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-weight:after { content: replace(@fa-var-weight, "\\", "\\10"); }
.fad.@{fa-css-prefix}-weight-hanging:after { content: replace(@fa-var-weight-hanging, "\\", "\\10"); }
.fad.@{fa-css-prefix}-whale:after { content: replace(@fa-var-whale, "\\", "\\10"); }
.fad.@{fa-css-prefix}-wheat:after { content: replace(@fa-var-wheat, "\\", "\\10"); }
.fad.@{fa-css-prefix}-wheelchair:after { content: replace(@fa-var-wheelchair, "\\", "\\10"); }
.fad.@{fa-css-prefix}-whistle:after { content: replace(@fa-var-whistle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-wifi:after { content: replace(@fa-var-wifi, "\\", "\\10"); }
.fad.@{fa-css-prefix}-wifi-1:after { content: replace(@fa-var-wifi-1, "\\", "\\10"); }
.fad.@{fa-css-prefix}-wifi-2:after { content: replace(@fa-var-wifi-2, "\\", "\\10"); }
.fad.@{fa-css-prefix}-wifi-slash:after { content: replace(@fa-var-wifi-slash, "\\", "\\10"); }
.fad.@{fa-css-prefix}-wind:after { content: replace(@fa-var-wind, "\\", "\\10"); }
.fad.@{fa-css-prefix}-wind-turbine:after { content: replace(@fa-var-wind-turbine, "\\", "\\10"); }
.fad.@{fa-css-prefix}-wind-warning:after { content: replace(@fa-var-wind-warning, "\\", "\\10"); }
.fad.@{fa-css-prefix}-window:after { content: replace(@fa-var-window, "\\", "\\10"); }
.fad.@{fa-css-prefix}-window-alt:after { content: replace(@fa-var-window-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-window-close:after { content: replace(@fa-var-window-close, "\\", "\\10"); }
.fad.@{fa-css-prefix}-window-maximize:after { content: replace(@fa-var-window-maximize, "\\", "\\10"); }
.fad.@{fa-css-prefix}-window-minimize:after { content: replace(@fa-var-window-minimize, "\\", "\\10"); }
.fad.@{fa-css-prefix}-window-restore:after { content: replace(@fa-var-window-restore, "\\", "\\10"); }
.fad.@{fa-css-prefix}-windsock:after { content: replace(@fa-var-windsock, "\\", "\\10"); }
.fad.@{fa-css-prefix}-wine-bottle:after { content: replace(@fa-var-wine-bottle, "\\", "\\10"); }
.fad.@{fa-css-prefix}-wine-glass:after { content: replace(@fa-var-wine-glass, "\\", "\\10"); }
.fad.@{fa-css-prefix}-wine-glass-alt:after { content: replace(@fa-var-wine-glass-alt, "\\", "\\10"); }
.fad.@{fa-css-prefix}-won-sign:after { content: replace(@fa-var-won-sign, "\\", "\\10"); }
.fad.@{fa-css-prefix}-wreath:after { content: replace(@fa-var-wreath, "\\", "\\10"); }
.fad.@{fa-css-prefix}-wrench:after { content: replace(@fa-var-wrench, "\\", "\\10"); }
.fad.@{fa-css-prefix}-x-ray:after { content: replace(@fa-var-x-ray, "\\", "\\10"); }
.fad.@{fa-css-prefix}-yen-sign:after { content: replace(@fa-var-yen-sign, "\\", "\\10"); }
.fad.@{fa-css-prefix}-yin-yang:after { content: replace(@fa-var-yin-yang, "\\", "\\10"); }


/*!
 * Font Awesome Pro by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Commercial License)
 */
@font-face {
  font-family: 'Font Awesome 5 Pro';
  font-style: normal;
  font-weight: 300;
  src: url('@{fa-font-path}/fa-light-300.woff2') format('woff2'),
    url('@{fa-font-path}/fa-light-300.woff') format('woff');
}

.fal {
  font-family: 'Font Awesome 5 Pro';
  position: relative;
  font-weight: 300;
}

/*!
 * Font Awesome Pro by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Commercial License)
 */
@font-face {
  font-family: 'Font Awesome 5 Pro';
  font-style: normal;
  font-weight: 400;
  src: url('@{fa-font-path}/fa-regular-400.woff2') format('woff2'),
    url('@{fa-font-path}/fa-regular-400.woff') format('woff');
}

.far {
  font-family: 'Font Awesome 5 Pro';
  position: relative;
  font-weight: 400;
}

/*!
 * Font Awesome Pro by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Commercial License)
 */
@font-face {
  font-family: 'Font Awesome 5 Pro';
  font-style: normal;
  font-weight: 900;
  src: url('@{fa-font-path}/fa-solid-900.woff2') format('woff2'),
    url('@{fa-font-path}/fa-solid-900.woff') format('woff');
}

.fa,
.fas {
  font-family: 'Font Awesome 5 Pro';
  position: relative;
  font-weight: 900;
}

/*!
 * Font Awesome Pro by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license (Commercial License)
 */
@font-face {
  font-family: 'Font Awesome 5 Brands';
  font-style: normal;
  font-weight: 400;
  src: url('@{fa-font-path}/fa-brands-400.woff2') format('woff2'),
    url('@{fa-font-path}/fa-brands-400.woff') format('woff');
}

.fab {
  font-family: 'Font Awesome 5 Brands';
  position: relative;
  font-weight: 400;
}

// Base Class Definition
// -------------------------

.@{fa-css-prefix}, .fas, .far, .fal, .fad, .fab {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  font-style: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
}


// Icon Sizes
// -------------------------

.larger(@factor) when (@factor > 0) {
  .larger((@factor - 1));

  .@{fa-css-prefix}-@{factor}x {
    font-size: (@factor * 1em);
  }
}

/* makes the font 33% larger relative to the icon container */
.@{fa-css-prefix}-lg {
  font-size: (4em / 3);
  line-height: (3em / 4);
  vertical-align: -.0667em;
}

.@{fa-css-prefix}-xs {
  font-size: .75em;
}

.@{fa-css-prefix}-sm {
  font-size: .875em;
}

.larger(10);


// Fixed Width Icons
// -------------------------
.@{fa-css-prefix}-fw {
  text-align: center;
  width: (20em / 16);
}


// List Icons
// -------------------------

.@{fa-css-prefix}-ul {
  list-style-type: none;
  margin-left: (@fa-li-width * 5/4);
  padding-left: 0;

  > li { position: relative; }
}

.@{fa-css-prefix}-li {
  left: -@fa-li-width;
  position: absolute;
  text-align: center;
  width: @fa-li-width;
  line-height: inherit;
}


// Bordered & Pulled
// -------------------------

.@{fa-css-prefix}-border {
  border-radius: .1em;
  border: solid .08em @fa-border-color;
  padding: .2em .25em .15em;
}

.@{fa-css-prefix}-pull-left { float: left; }
.@{fa-css-prefix}-pull-right { float: right; }

.@{fa-css-prefix}, .fas, .far, .fal, .fab {
  &.@{fa-css-prefix}-pull-left { margin-right: .3em; }
  &.@{fa-css-prefix}-pull-right { margin-left: .3em; }
}


// Animated Icons
// --------------------------

.@{fa-css-prefix}-spin {
  animation: fa-spin 2s infinite linear;
}

.@{fa-css-prefix}-pulse {
  animation: fa-spin 1s infinite steps(8);
}

@keyframes fa-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}


// Rotated & Flipped Icons
// -------------------------

.@{fa-css-prefix}-rotate-90  { .fa-icon-rotate(90deg, 1);  }
.@{fa-css-prefix}-rotate-180 { .fa-icon-rotate(180deg, 2); }
.@{fa-css-prefix}-rotate-270 { .fa-icon-rotate(270deg, 3); }

.@{fa-css-prefix}-flip-horizontal { .fa-icon-flip(-1, 1, 0); }
.@{fa-css-prefix}-flip-vertical   { .fa-icon-flip(1, -1, 2); }
.@{fa-css-prefix}-flip-both, .@{fa-css-prefix}-flip-horizontal.@{fa-css-prefix}-flip-vertical { .fa-icon-flip(-1, -1, 2); }

// Hook for IE8-9
// -------------------------

:root {
  .@{fa-css-prefix}-rotate-90,
  .@{fa-css-prefix}-rotate-180,
  .@{fa-css-prefix}-rotate-270,
  .@{fa-css-prefix}-flip-horizontal,
  .@{fa-css-prefix}-flip-vertical,
  .@{fa-css-prefix}-flip-both {
    filter: none;
  }
}


// Stacked Icons
// -------------------------

.@{fa-css-prefix}-stack {
  display: inline-block;
  height: 2em;
  line-height: 2em;
  position: relative;
  vertical-align: middle;
  width: 2em;
}

.@{fa-css-prefix}-stack-1x, .@{fa-css-prefix}-stack-2x {
  left: 0;
  position: absolute;
  text-align: center;
  width: 100%;
}

.@{fa-css-prefix}-stack-1x { line-height: inherit; }
.@{fa-css-prefix}-stack-2x { font-size: 2em; }
.@{fa-css-prefix}-inverse { color: @fa-inverse; }


/* Font Awesome uses the Unicode Private Use Area (PUA) to ensure screen
   readers do not read off random characters that represent icons */

.@{fa-css-prefix}-500px:before { content: @fa-var-500px; }
.@{fa-css-prefix}-abacus:before { content: @fa-var-abacus; }
.@{fa-css-prefix}-accessible-icon:before { content: @fa-var-accessible-icon; }
.@{fa-css-prefix}-accusoft:before { content: @fa-var-accusoft; }
.@{fa-css-prefix}-acorn:before { content: @fa-var-acorn; }
.@{fa-css-prefix}-acquisitions-incorporated:before { content: @fa-var-acquisitions-incorporated; }
.@{fa-css-prefix}-ad:before { content: @fa-var-ad; }
.@{fa-css-prefix}-address-book:before { content: @fa-var-address-book; }
.@{fa-css-prefix}-address-card:before { content: @fa-var-address-card; }
.@{fa-css-prefix}-adjust:before { content: @fa-var-adjust; }
.@{fa-css-prefix}-adn:before { content: @fa-var-adn; }
.@{fa-css-prefix}-adobe:before { content: @fa-var-adobe; }
.@{fa-css-prefix}-adversal:before { content: @fa-var-adversal; }
.@{fa-css-prefix}-affiliatetheme:before { content: @fa-var-affiliatetheme; }
.@{fa-css-prefix}-air-freshener:before { content: @fa-var-air-freshener; }
.@{fa-css-prefix}-airbnb:before { content: @fa-var-airbnb; }
.@{fa-css-prefix}-alarm-clock:before { content: @fa-var-alarm-clock; }
.@{fa-css-prefix}-alarm-exclamation:before { content: @fa-var-alarm-exclamation; }
.@{fa-css-prefix}-alarm-plus:before { content: @fa-var-alarm-plus; }
.@{fa-css-prefix}-alarm-snooze:before { content: @fa-var-alarm-snooze; }
.@{fa-css-prefix}-algolia:before { content: @fa-var-algolia; }
.@{fa-css-prefix}-alicorn:before { content: @fa-var-alicorn; }
.@{fa-css-prefix}-align-center:before { content: @fa-var-align-center; }
.@{fa-css-prefix}-align-justify:before { content: @fa-var-align-justify; }
.@{fa-css-prefix}-align-left:before { content: @fa-var-align-left; }
.@{fa-css-prefix}-align-right:before { content: @fa-var-align-right; }
.@{fa-css-prefix}-align-slash:before { content: @fa-var-align-slash; }
.@{fa-css-prefix}-alipay:before { content: @fa-var-alipay; }
.@{fa-css-prefix}-allergies:before { content: @fa-var-allergies; }
.@{fa-css-prefix}-amazon:before { content: @fa-var-amazon; }
.@{fa-css-prefix}-amazon-pay:before { content: @fa-var-amazon-pay; }
.@{fa-css-prefix}-ambulance:before { content: @fa-var-ambulance; }
.@{fa-css-prefix}-american-sign-language-interpreting:before { content: @fa-var-american-sign-language-interpreting; }
.@{fa-css-prefix}-amilia:before { content: @fa-var-amilia; }
.@{fa-css-prefix}-analytics:before { content: @fa-var-analytics; }
.@{fa-css-prefix}-anchor:before { content: @fa-var-anchor; }
.@{fa-css-prefix}-android:before { content: @fa-var-android; }
.@{fa-css-prefix}-angel:before { content: @fa-var-angel; }
.@{fa-css-prefix}-angellist:before { content: @fa-var-angellist; }
.@{fa-css-prefix}-angle-double-down:before { content: @fa-var-angle-double-down; }
.@{fa-css-prefix}-angle-double-left:before { content: @fa-var-angle-double-left; }
.@{fa-css-prefix}-angle-double-right:before { content: @fa-var-angle-double-right; }
.@{fa-css-prefix}-angle-double-up:before { content: @fa-var-angle-double-up; }
.@{fa-css-prefix}-angle-down:before { content: @fa-var-angle-down; }
.@{fa-css-prefix}-angle-left:before { content: @fa-var-angle-left; }
.@{fa-css-prefix}-angle-right:before { content: @fa-var-angle-right; }
.@{fa-css-prefix}-angle-up:before { content: @fa-var-angle-up; }
.@{fa-css-prefix}-angry:before { content: @fa-var-angry; }
.@{fa-css-prefix}-angrycreative:before { content: @fa-var-angrycreative; }
.@{fa-css-prefix}-angular:before { content: @fa-var-angular; }
.@{fa-css-prefix}-ankh:before { content: @fa-var-ankh; }
.@{fa-css-prefix}-app-store:before { content: @fa-var-app-store; }
.@{fa-css-prefix}-app-store-ios:before { content: @fa-var-app-store-ios; }
.@{fa-css-prefix}-apper:before { content: @fa-var-apper; }
.@{fa-css-prefix}-apple:before { content: @fa-var-apple; }
.@{fa-css-prefix}-apple-alt:before { content: @fa-var-apple-alt; }
.@{fa-css-prefix}-apple-crate:before { content: @fa-var-apple-crate; }
.@{fa-css-prefix}-apple-pay:before { content: @fa-var-apple-pay; }
.@{fa-css-prefix}-archive:before { content: @fa-var-archive; }
.@{fa-css-prefix}-archway:before { content: @fa-var-archway; }
.@{fa-css-prefix}-arrow-alt-circle-down:before { content: @fa-var-arrow-alt-circle-down; }
.@{fa-css-prefix}-arrow-alt-circle-left:before { content: @fa-var-arrow-alt-circle-left; }
.@{fa-css-prefix}-arrow-alt-circle-right:before { content: @fa-var-arrow-alt-circle-right; }
.@{fa-css-prefix}-arrow-alt-circle-up:before { content: @fa-var-arrow-alt-circle-up; }
.@{fa-css-prefix}-arrow-alt-down:before { content: @fa-var-arrow-alt-down; }
.@{fa-css-prefix}-arrow-alt-from-bottom:before { content: @fa-var-arrow-alt-from-bottom; }
.@{fa-css-prefix}-arrow-alt-from-left:before { content: @fa-var-arrow-alt-from-left; }
.@{fa-css-prefix}-arrow-alt-from-right:before { content: @fa-var-arrow-alt-from-right; }
.@{fa-css-prefix}-arrow-alt-from-top:before { content: @fa-var-arrow-alt-from-top; }
.@{fa-css-prefix}-arrow-alt-left:before { content: @fa-var-arrow-alt-left; }
.@{fa-css-prefix}-arrow-alt-right:before { content: @fa-var-arrow-alt-right; }
.@{fa-css-prefix}-arrow-alt-square-down:before { content: @fa-var-arrow-alt-square-down; }
.@{fa-css-prefix}-arrow-alt-square-left:before { content: @fa-var-arrow-alt-square-left; }
.@{fa-css-prefix}-arrow-alt-square-right:before { content: @fa-var-arrow-alt-square-right; }
.@{fa-css-prefix}-arrow-alt-square-up:before { content: @fa-var-arrow-alt-square-up; }
.@{fa-css-prefix}-arrow-alt-to-bottom:before { content: @fa-var-arrow-alt-to-bottom; }
.@{fa-css-prefix}-arrow-alt-to-left:before { content: @fa-var-arrow-alt-to-left; }
.@{fa-css-prefix}-arrow-alt-to-right:before { content: @fa-var-arrow-alt-to-right; }
.@{fa-css-prefix}-arrow-alt-to-top:before { content: @fa-var-arrow-alt-to-top; }
.@{fa-css-prefix}-arrow-alt-up:before { content: @fa-var-arrow-alt-up; }
.@{fa-css-prefix}-arrow-circle-down:before { content: @fa-var-arrow-circle-down; }
.@{fa-css-prefix}-arrow-circle-left:before { content: @fa-var-arrow-circle-left; }
.@{fa-css-prefix}-arrow-circle-right:before { content: @fa-var-arrow-circle-right; }
.@{fa-css-prefix}-arrow-circle-up:before { content: @fa-var-arrow-circle-up; }
.@{fa-css-prefix}-arrow-down:before { content: @fa-var-arrow-down; }
.@{fa-css-prefix}-arrow-from-bottom:before { content: @fa-var-arrow-from-bottom; }
.@{fa-css-prefix}-arrow-from-left:before { content: @fa-var-arrow-from-left; }
.@{fa-css-prefix}-arrow-from-right:before { content: @fa-var-arrow-from-right; }
.@{fa-css-prefix}-arrow-from-top:before { content: @fa-var-arrow-from-top; }
.@{fa-css-prefix}-arrow-left:before { content: @fa-var-arrow-left; }
.@{fa-css-prefix}-arrow-right:before { content: @fa-var-arrow-right; }
.@{fa-css-prefix}-arrow-square-down:before { content: @fa-var-arrow-square-down; }
.@{fa-css-prefix}-arrow-square-left:before { content: @fa-var-arrow-square-left; }
.@{fa-css-prefix}-arrow-square-right:before { content: @fa-var-arrow-square-right; }
.@{fa-css-prefix}-arrow-square-up:before { content: @fa-var-arrow-square-up; }
.@{fa-css-prefix}-arrow-to-bottom:before { content: @fa-var-arrow-to-bottom; }
.@{fa-css-prefix}-arrow-to-left:before { content: @fa-var-arrow-to-left; }
.@{fa-css-prefix}-arrow-to-right:before { content: @fa-var-arrow-to-right; }
.@{fa-css-prefix}-arrow-to-top:before { content: @fa-var-arrow-to-top; }
.@{fa-css-prefix}-arrow-up:before { content: @fa-var-arrow-up; }
.@{fa-css-prefix}-arrows:before { content: @fa-var-arrows; }
.@{fa-css-prefix}-arrows-alt:before { content: @fa-var-arrows-alt; }
.@{fa-css-prefix}-arrows-alt-h:before { content: @fa-var-arrows-alt-h; }
.@{fa-css-prefix}-arrows-alt-v:before { content: @fa-var-arrows-alt-v; }
.@{fa-css-prefix}-arrows-h:before { content: @fa-var-arrows-h; }
.@{fa-css-prefix}-arrows-v:before { content: @fa-var-arrows-v; }
.@{fa-css-prefix}-artstation:before { content: @fa-var-artstation; }
.@{fa-css-prefix}-assistive-listening-systems:before { content: @fa-var-assistive-listening-systems; }
.@{fa-css-prefix}-asterisk:before { content: @fa-var-asterisk; }
.@{fa-css-prefix}-asymmetrik:before { content: @fa-var-asymmetrik; }
.@{fa-css-prefix}-at:before { content: @fa-var-at; }
.@{fa-css-prefix}-atlas:before { content: @fa-var-atlas; }
.@{fa-css-prefix}-atlassian:before { content: @fa-var-atlassian; }
.@{fa-css-prefix}-atom:before { content: @fa-var-atom; }
.@{fa-css-prefix}-atom-alt:before { content: @fa-var-atom-alt; }
.@{fa-css-prefix}-audible:before { content: @fa-var-audible; }
.@{fa-css-prefix}-audio-description:before { content: @fa-var-audio-description; }
.@{fa-css-prefix}-autoprefixer:before { content: @fa-var-autoprefixer; }
.@{fa-css-prefix}-avianex:before { content: @fa-var-avianex; }
.@{fa-css-prefix}-aviato:before { content: @fa-var-aviato; }
.@{fa-css-prefix}-award:before { content: @fa-var-award; }
.@{fa-css-prefix}-aws:before { content: @fa-var-aws; }
.@{fa-css-prefix}-axe:before { content: @fa-var-axe; }
.@{fa-css-prefix}-axe-battle:before { content: @fa-var-axe-battle; }
.@{fa-css-prefix}-baby:before { content: @fa-var-baby; }
.@{fa-css-prefix}-baby-carriage:before { content: @fa-var-baby-carriage; }
.@{fa-css-prefix}-backpack:before { content: @fa-var-backpack; }
.@{fa-css-prefix}-backspace:before { content: @fa-var-backspace; }
.@{fa-css-prefix}-backward:before { content: @fa-var-backward; }
.@{fa-css-prefix}-bacon:before { content: @fa-var-bacon; }
.@{fa-css-prefix}-badge:before { content: @fa-var-badge; }
.@{fa-css-prefix}-badge-check:before { content: @fa-var-badge-check; }
.@{fa-css-prefix}-badge-dollar:before { content: @fa-var-badge-dollar; }
.@{fa-css-prefix}-badge-percent:before { content: @fa-var-badge-percent; }
.@{fa-css-prefix}-badger-honey:before { content: @fa-var-badger-honey; }
.@{fa-css-prefix}-bags-shopping:before { content: @fa-var-bags-shopping; }
.@{fa-css-prefix}-balance-scale:before { content: @fa-var-balance-scale; }
.@{fa-css-prefix}-balance-scale-left:before { content: @fa-var-balance-scale-left; }
.@{fa-css-prefix}-balance-scale-right:before { content: @fa-var-balance-scale-right; }
.@{fa-css-prefix}-ball-pile:before { content: @fa-var-ball-pile; }
.@{fa-css-prefix}-ballot:before { content: @fa-var-ballot; }
.@{fa-css-prefix}-ballot-check:before { content: @fa-var-ballot-check; }
.@{fa-css-prefix}-ban:before { content: @fa-var-ban; }
.@{fa-css-prefix}-band-aid:before { content: @fa-var-band-aid; }
.@{fa-css-prefix}-bandcamp:before { content: @fa-var-bandcamp; }
.@{fa-css-prefix}-barcode:before { content: @fa-var-barcode; }
.@{fa-css-prefix}-barcode-alt:before { content: @fa-var-barcode-alt; }
.@{fa-css-prefix}-barcode-read:before { content: @fa-var-barcode-read; }
.@{fa-css-prefix}-barcode-scan:before { content: @fa-var-barcode-scan; }
.@{fa-css-prefix}-bars:before { content: @fa-var-bars; }
.@{fa-css-prefix}-baseball:before { content: @fa-var-baseball; }
.@{fa-css-prefix}-baseball-ball:before { content: @fa-var-baseball-ball; }
.@{fa-css-prefix}-basketball-ball:before { content: @fa-var-basketball-ball; }
.@{fa-css-prefix}-basketball-hoop:before { content: @fa-var-basketball-hoop; }
.@{fa-css-prefix}-bat:before { content: @fa-var-bat; }
.@{fa-css-prefix}-bath:before { content: @fa-var-bath; }
.@{fa-css-prefix}-battery-bolt:before { content: @fa-var-battery-bolt; }
.@{fa-css-prefix}-battery-empty:before { content: @fa-var-battery-empty; }
.@{fa-css-prefix}-battery-full:before { content: @fa-var-battery-full; }
.@{fa-css-prefix}-battery-half:before { content: @fa-var-battery-half; }
.@{fa-css-prefix}-battery-quarter:before { content: @fa-var-battery-quarter; }
.@{fa-css-prefix}-battery-slash:before { content: @fa-var-battery-slash; }
.@{fa-css-prefix}-battery-three-quarters:before { content: @fa-var-battery-three-quarters; }
.@{fa-css-prefix}-battle-net:before { content: @fa-var-battle-net; }
.@{fa-css-prefix}-bed:before { content: @fa-var-bed; }
.@{fa-css-prefix}-beer:before { content: @fa-var-beer; }
.@{fa-css-prefix}-behance:before { content: @fa-var-behance; }
.@{fa-css-prefix}-behance-square:before { content: @fa-var-behance-square; }
.@{fa-css-prefix}-bell:before { content: @fa-var-bell; }
.@{fa-css-prefix}-bell-exclamation:before { content: @fa-var-bell-exclamation; }
.@{fa-css-prefix}-bell-plus:before { content: @fa-var-bell-plus; }
.@{fa-css-prefix}-bell-school:before { content: @fa-var-bell-school; }
.@{fa-css-prefix}-bell-school-slash:before { content: @fa-var-bell-school-slash; }
.@{fa-css-prefix}-bell-slash:before { content: @fa-var-bell-slash; }
.@{fa-css-prefix}-bells:before { content: @fa-var-bells; }
.@{fa-css-prefix}-bezier-curve:before { content: @fa-var-bezier-curve; }
.@{fa-css-prefix}-bible:before { content: @fa-var-bible; }
.@{fa-css-prefix}-bicycle:before { content: @fa-var-bicycle; }
.@{fa-css-prefix}-biking:before { content: @fa-var-biking; }
.@{fa-css-prefix}-biking-mountain:before { content: @fa-var-biking-mountain; }
.@{fa-css-prefix}-bimobject:before { content: @fa-var-bimobject; }
.@{fa-css-prefix}-binoculars:before { content: @fa-var-binoculars; }
.@{fa-css-prefix}-biohazard:before { content: @fa-var-biohazard; }
.@{fa-css-prefix}-birthday-cake:before { content: @fa-var-birthday-cake; }
.@{fa-css-prefix}-bitbucket:before { content: @fa-var-bitbucket; }
.@{fa-css-prefix}-bitcoin:before { content: @fa-var-bitcoin; }
.@{fa-css-prefix}-bity:before { content: @fa-var-bity; }
.@{fa-css-prefix}-black-tie:before { content: @fa-var-black-tie; }
.@{fa-css-prefix}-blackberry:before { content: @fa-var-blackberry; }
.@{fa-css-prefix}-blanket:before { content: @fa-var-blanket; }
.@{fa-css-prefix}-blender:before { content: @fa-var-blender; }
.@{fa-css-prefix}-blender-phone:before { content: @fa-var-blender-phone; }
.@{fa-css-prefix}-blind:before { content: @fa-var-blind; }
.@{fa-css-prefix}-blog:before { content: @fa-var-blog; }
.@{fa-css-prefix}-blogger:before { content: @fa-var-blogger; }
.@{fa-css-prefix}-blogger-b:before { content: @fa-var-blogger-b; }
.@{fa-css-prefix}-bluetooth:before { content: @fa-var-bluetooth; }
.@{fa-css-prefix}-bluetooth-b:before { content: @fa-var-bluetooth-b; }
.@{fa-css-prefix}-bold:before { content: @fa-var-bold; }
.@{fa-css-prefix}-bolt:before { content: @fa-var-bolt; }
.@{fa-css-prefix}-bomb:before { content: @fa-var-bomb; }
.@{fa-css-prefix}-bone:before { content: @fa-var-bone; }
.@{fa-css-prefix}-bone-break:before { content: @fa-var-bone-break; }
.@{fa-css-prefix}-bong:before { content: @fa-var-bong; }
.@{fa-css-prefix}-book:before { content: @fa-var-book; }
.@{fa-css-prefix}-book-alt:before { content: @fa-var-book-alt; }
.@{fa-css-prefix}-book-dead:before { content: @fa-var-book-dead; }
.@{fa-css-prefix}-book-heart:before { content: @fa-var-book-heart; }
.@{fa-css-prefix}-book-medical:before { content: @fa-var-book-medical; }
.@{fa-css-prefix}-book-open:before { content: @fa-var-book-open; }
.@{fa-css-prefix}-book-reader:before { content: @fa-var-book-reader; }
.@{fa-css-prefix}-book-spells:before { content: @fa-var-book-spells; }
.@{fa-css-prefix}-book-user:before { content: @fa-var-book-user; }
.@{fa-css-prefix}-bookmark:before { content: @fa-var-bookmark; }
.@{fa-css-prefix}-books:before { content: @fa-var-books; }
.@{fa-css-prefix}-books-medical:before { content: @fa-var-books-medical; }
.@{fa-css-prefix}-boot:before { content: @fa-var-boot; }
.@{fa-css-prefix}-booth-curtain:before { content: @fa-var-booth-curtain; }
.@{fa-css-prefix}-bootstrap:before { content: @fa-var-bootstrap; }
.@{fa-css-prefix}-border-all:before { content: @fa-var-border-all; }
.@{fa-css-prefix}-border-bottom:before { content: @fa-var-border-bottom; }
.@{fa-css-prefix}-border-center-h:before { content: @fa-var-border-center-h; }
.@{fa-css-prefix}-border-center-v:before { content: @fa-var-border-center-v; }
.@{fa-css-prefix}-border-inner:before { content: @fa-var-border-inner; }
.@{fa-css-prefix}-border-left:before { content: @fa-var-border-left; }
.@{fa-css-prefix}-border-none:before { content: @fa-var-border-none; }
.@{fa-css-prefix}-border-outer:before { content: @fa-var-border-outer; }
.@{fa-css-prefix}-border-right:before { content: @fa-var-border-right; }
.@{fa-css-prefix}-border-style:before { content: @fa-var-border-style; }
.@{fa-css-prefix}-border-style-alt:before { content: @fa-var-border-style-alt; }
.@{fa-css-prefix}-border-top:before { content: @fa-var-border-top; }
.@{fa-css-prefix}-bow-arrow:before { content: @fa-var-bow-arrow; }
.@{fa-css-prefix}-bowling-ball:before { content: @fa-var-bowling-ball; }
.@{fa-css-prefix}-bowling-pins:before { content: @fa-var-bowling-pins; }
.@{fa-css-prefix}-box:before { content: @fa-var-box; }
.@{fa-css-prefix}-box-alt:before { content: @fa-var-box-alt; }
.@{fa-css-prefix}-box-ballot:before { content: @fa-var-box-ballot; }
.@{fa-css-prefix}-box-check:before { content: @fa-var-box-check; }
.@{fa-css-prefix}-box-fragile:before { content: @fa-var-box-fragile; }
.@{fa-css-prefix}-box-full:before { content: @fa-var-box-full; }
.@{fa-css-prefix}-box-heart:before { content: @fa-var-box-heart; }
.@{fa-css-prefix}-box-open:before { content: @fa-var-box-open; }
.@{fa-css-prefix}-box-up:before { content: @fa-var-box-up; }
.@{fa-css-prefix}-box-usd:before { content: @fa-var-box-usd; }
.@{fa-css-prefix}-boxes:before { content: @fa-var-boxes; }
.@{fa-css-prefix}-boxes-alt:before { content: @fa-var-boxes-alt; }
.@{fa-css-prefix}-boxing-glove:before { content: @fa-var-boxing-glove; }
.@{fa-css-prefix}-brackets:before { content: @fa-var-brackets; }
.@{fa-css-prefix}-brackets-curly:before { content: @fa-var-brackets-curly; }
.@{fa-css-prefix}-braille:before { content: @fa-var-braille; }
.@{fa-css-prefix}-brain:before { content: @fa-var-brain; }
.@{fa-css-prefix}-bread-loaf:before { content: @fa-var-bread-loaf; }
.@{fa-css-prefix}-bread-slice:before { content: @fa-var-bread-slice; }
.@{fa-css-prefix}-briefcase:before { content: @fa-var-briefcase; }
.@{fa-css-prefix}-briefcase-medical:before { content: @fa-var-briefcase-medical; }
.@{fa-css-prefix}-bring-forward:before { content: @fa-var-bring-forward; }
.@{fa-css-prefix}-bring-front:before { content: @fa-var-bring-front; }
.@{fa-css-prefix}-broadcast-tower:before { content: @fa-var-broadcast-tower; }
.@{fa-css-prefix}-broom:before { content: @fa-var-broom; }
.@{fa-css-prefix}-browser:before { content: @fa-var-browser; }
.@{fa-css-prefix}-brush:before { content: @fa-var-brush; }
.@{fa-css-prefix}-btc:before { content: @fa-var-btc; }
.@{fa-css-prefix}-buffer:before { content: @fa-var-buffer; }
.@{fa-css-prefix}-bug:before { content: @fa-var-bug; }
.@{fa-css-prefix}-building:before { content: @fa-var-building; }
.@{fa-css-prefix}-bullhorn:before { content: @fa-var-bullhorn; }
.@{fa-css-prefix}-bullseye:before { content: @fa-var-bullseye; }
.@{fa-css-prefix}-bullseye-arrow:before { content: @fa-var-bullseye-arrow; }
.@{fa-css-prefix}-bullseye-pointer:before { content: @fa-var-bullseye-pointer; }
.@{fa-css-prefix}-burger-soda:before { content: @fa-var-burger-soda; }
.@{fa-css-prefix}-burn:before { content: @fa-var-burn; }
.@{fa-css-prefix}-buromobelexperte:before { content: @fa-var-buromobelexperte; }
.@{fa-css-prefix}-burrito:before { content: @fa-var-burrito; }
.@{fa-css-prefix}-bus:before { content: @fa-var-bus; }
.@{fa-css-prefix}-bus-alt:before { content: @fa-var-bus-alt; }
.@{fa-css-prefix}-bus-school:before { content: @fa-var-bus-school; }
.@{fa-css-prefix}-business-time:before { content: @fa-var-business-time; }
.@{fa-css-prefix}-buysellads:before { content: @fa-var-buysellads; }
.@{fa-css-prefix}-cabinet-filing:before { content: @fa-var-cabinet-filing; }
.@{fa-css-prefix}-calculator:before { content: @fa-var-calculator; }
.@{fa-css-prefix}-calculator-alt:before { content: @fa-var-calculator-alt; }
.@{fa-css-prefix}-calendar:before { content: @fa-var-calendar; }
.@{fa-css-prefix}-calendar-alt:before { content: @fa-var-calendar-alt; }
.@{fa-css-prefix}-calendar-check:before { content: @fa-var-calendar-check; }
.@{fa-css-prefix}-calendar-day:before { content: @fa-var-calendar-day; }
.@{fa-css-prefix}-calendar-edit:before { content: @fa-var-calendar-edit; }
.@{fa-css-prefix}-calendar-exclamation:before { content: @fa-var-calendar-exclamation; }
.@{fa-css-prefix}-calendar-minus:before { content: @fa-var-calendar-minus; }
.@{fa-css-prefix}-calendar-plus:before { content: @fa-var-calendar-plus; }
.@{fa-css-prefix}-calendar-star:before { content: @fa-var-calendar-star; }
.@{fa-css-prefix}-calendar-times:before { content: @fa-var-calendar-times; }
.@{fa-css-prefix}-calendar-week:before { content: @fa-var-calendar-week; }
.@{fa-css-prefix}-camera:before { content: @fa-var-camera; }
.@{fa-css-prefix}-camera-alt:before { content: @fa-var-camera-alt; }
.@{fa-css-prefix}-camera-retro:before { content: @fa-var-camera-retro; }
.@{fa-css-prefix}-campfire:before { content: @fa-var-campfire; }
.@{fa-css-prefix}-campground:before { content: @fa-var-campground; }
.@{fa-css-prefix}-canadian-maple-leaf:before { content: @fa-var-canadian-maple-leaf; }
.@{fa-css-prefix}-candle-holder:before { content: @fa-var-candle-holder; }
.@{fa-css-prefix}-candy-cane:before { content: @fa-var-candy-cane; }
.@{fa-css-prefix}-candy-corn:before { content: @fa-var-candy-corn; }
.@{fa-css-prefix}-cannabis:before { content: @fa-var-cannabis; }
.@{fa-css-prefix}-capsules:before { content: @fa-var-capsules; }
.@{fa-css-prefix}-car:before { content: @fa-var-car; }
.@{fa-css-prefix}-car-alt:before { content: @fa-var-car-alt; }
.@{fa-css-prefix}-car-battery:before { content: @fa-var-car-battery; }
.@{fa-css-prefix}-car-building:before { content: @fa-var-car-building; }
.@{fa-css-prefix}-car-bump:before { content: @fa-var-car-bump; }
.@{fa-css-prefix}-car-bus:before { content: @fa-var-car-bus; }
.@{fa-css-prefix}-car-crash:before { content: @fa-var-car-crash; }
.@{fa-css-prefix}-car-garage:before { content: @fa-var-car-garage; }
.@{fa-css-prefix}-car-mechanic:before { content: @fa-var-car-mechanic; }
.@{fa-css-prefix}-car-side:before { content: @fa-var-car-side; }
.@{fa-css-prefix}-car-tilt:before { content: @fa-var-car-tilt; }
.@{fa-css-prefix}-car-wash:before { content: @fa-var-car-wash; }
.@{fa-css-prefix}-caret-circle-down:before { content: @fa-var-caret-circle-down; }
.@{fa-css-prefix}-caret-circle-left:before { content: @fa-var-caret-circle-left; }
.@{fa-css-prefix}-caret-circle-right:before { content: @fa-var-caret-circle-right; }
.@{fa-css-prefix}-caret-circle-up:before { content: @fa-var-caret-circle-up; }
.@{fa-css-prefix}-caret-down:before { content: @fa-var-caret-down; }
.@{fa-css-prefix}-caret-left:before { content: @fa-var-caret-left; }
.@{fa-css-prefix}-caret-right:before { content: @fa-var-caret-right; }
.@{fa-css-prefix}-caret-square-down:before { content: @fa-var-caret-square-down; }
.@{fa-css-prefix}-caret-square-left:before { content: @fa-var-caret-square-left; }
.@{fa-css-prefix}-caret-square-right:before { content: @fa-var-caret-square-right; }
.@{fa-css-prefix}-caret-square-up:before { content: @fa-var-caret-square-up; }
.@{fa-css-prefix}-caret-up:before { content: @fa-var-caret-up; }
.@{fa-css-prefix}-carrot:before { content: @fa-var-carrot; }
.@{fa-css-prefix}-cars:before { content: @fa-var-cars; }
.@{fa-css-prefix}-cart-arrow-down:before { content: @fa-var-cart-arrow-down; }
.@{fa-css-prefix}-cart-plus:before { content: @fa-var-cart-plus; }
.@{fa-css-prefix}-cash-register:before { content: @fa-var-cash-register; }
.@{fa-css-prefix}-cat:before { content: @fa-var-cat; }
.@{fa-css-prefix}-cauldron:before { content: @fa-var-cauldron; }
.@{fa-css-prefix}-cc-amazon-pay:before { content: @fa-var-cc-amazon-pay; }
.@{fa-css-prefix}-cc-amex:before { content: @fa-var-cc-amex; }
.@{fa-css-prefix}-cc-apple-pay:before { content: @fa-var-cc-apple-pay; }
.@{fa-css-prefix}-cc-diners-club:before { content: @fa-var-cc-diners-club; }
.@{fa-css-prefix}-cc-discover:before { content: @fa-var-cc-discover; }
.@{fa-css-prefix}-cc-jcb:before { content: @fa-var-cc-jcb; }
.@{fa-css-prefix}-cc-mastercard:before { content: @fa-var-cc-mastercard; }
.@{fa-css-prefix}-cc-paypal:before { content: @fa-var-cc-paypal; }
.@{fa-css-prefix}-cc-stripe:before { content: @fa-var-cc-stripe; }
.@{fa-css-prefix}-cc-visa:before { content: @fa-var-cc-visa; }
.@{fa-css-prefix}-centercode:before { content: @fa-var-centercode; }
.@{fa-css-prefix}-centos:before { content: @fa-var-centos; }
.@{fa-css-prefix}-certificate:before { content: @fa-var-certificate; }
.@{fa-css-prefix}-chair:before { content: @fa-var-chair; }
.@{fa-css-prefix}-chair-office:before { content: @fa-var-chair-office; }
.@{fa-css-prefix}-chalkboard:before { content: @fa-var-chalkboard; }
.@{fa-css-prefix}-chalkboard-teacher:before { content: @fa-var-chalkboard-teacher; }
.@{fa-css-prefix}-charging-station:before { content: @fa-var-charging-station; }
.@{fa-css-prefix}-chart-area:before { content: @fa-var-chart-area; }
.@{fa-css-prefix}-chart-bar:before { content: @fa-var-chart-bar; }
.@{fa-css-prefix}-chart-line:before { content: @fa-var-chart-line; }
.@{fa-css-prefix}-chart-line-down:before { content: @fa-var-chart-line-down; }
.@{fa-css-prefix}-chart-network:before { content: @fa-var-chart-network; }
.@{fa-css-prefix}-chart-pie:before { content: @fa-var-chart-pie; }
.@{fa-css-prefix}-chart-pie-alt:before { content: @fa-var-chart-pie-alt; }
.@{fa-css-prefix}-chart-scatter:before { content: @fa-var-chart-scatter; }
.@{fa-css-prefix}-check:before { content: @fa-var-check; }
.@{fa-css-prefix}-check-circle:before { content: @fa-var-check-circle; }
.@{fa-css-prefix}-check-double:before { content: @fa-var-check-double; }
.@{fa-css-prefix}-check-square:before { content: @fa-var-check-square; }
.@{fa-css-prefix}-cheese:before { content: @fa-var-cheese; }
.@{fa-css-prefix}-cheese-swiss:before { content: @fa-var-cheese-swiss; }
.@{fa-css-prefix}-cheeseburger:before { content: @fa-var-cheeseburger; }
.@{fa-css-prefix}-chess:before { content: @fa-var-chess; }
.@{fa-css-prefix}-chess-bishop:before { content: @fa-var-chess-bishop; }
.@{fa-css-prefix}-chess-bishop-alt:before { content: @fa-var-chess-bishop-alt; }
.@{fa-css-prefix}-chess-board:before { content: @fa-var-chess-board; }
.@{fa-css-prefix}-chess-clock:before { content: @fa-var-chess-clock; }
.@{fa-css-prefix}-chess-clock-alt:before { content: @fa-var-chess-clock-alt; }
.@{fa-css-prefix}-chess-king:before { content: @fa-var-chess-king; }
.@{fa-css-prefix}-chess-king-alt:before { content: @fa-var-chess-king-alt; }
.@{fa-css-prefix}-chess-knight:before { content: @fa-var-chess-knight; }
.@{fa-css-prefix}-chess-knight-alt:before { content: @fa-var-chess-knight-alt; }
.@{fa-css-prefix}-chess-pawn:before { content: @fa-var-chess-pawn; }
.@{fa-css-prefix}-chess-pawn-alt:before { content: @fa-var-chess-pawn-alt; }
.@{fa-css-prefix}-chess-queen:before { content: @fa-var-chess-queen; }
.@{fa-css-prefix}-chess-queen-alt:before { content: @fa-var-chess-queen-alt; }
.@{fa-css-prefix}-chess-rook:before { content: @fa-var-chess-rook; }
.@{fa-css-prefix}-chess-rook-alt:before { content: @fa-var-chess-rook-alt; }
.@{fa-css-prefix}-chevron-circle-down:before { content: @fa-var-chevron-circle-down; }
.@{fa-css-prefix}-chevron-circle-left:before { content: @fa-var-chevron-circle-left; }
.@{fa-css-prefix}-chevron-circle-right:before { content: @fa-var-chevron-circle-right; }
.@{fa-css-prefix}-chevron-circle-up:before { content: @fa-var-chevron-circle-up; }
.@{fa-css-prefix}-chevron-double-down:before { content: @fa-var-chevron-double-down; }
.@{fa-css-prefix}-chevron-double-left:before { content: @fa-var-chevron-double-left; }
.@{fa-css-prefix}-chevron-double-right:before { content: @fa-var-chevron-double-right; }
.@{fa-css-prefix}-chevron-double-up:before { content: @fa-var-chevron-double-up; }
.@{fa-css-prefix}-chevron-down:before { content: @fa-var-chevron-down; }
.@{fa-css-prefix}-chevron-left:before { content: @fa-var-chevron-left; }
.@{fa-css-prefix}-chevron-right:before { content: @fa-var-chevron-right; }
.@{fa-css-prefix}-chevron-square-down:before { content: @fa-var-chevron-square-down; }
.@{fa-css-prefix}-chevron-square-left:before { content: @fa-var-chevron-square-left; }
.@{fa-css-prefix}-chevron-square-right:before { content: @fa-var-chevron-square-right; }
.@{fa-css-prefix}-chevron-square-up:before { content: @fa-var-chevron-square-up; }
.@{fa-css-prefix}-chevron-up:before { content: @fa-var-chevron-up; }
.@{fa-css-prefix}-child:before { content: @fa-var-child; }
.@{fa-css-prefix}-chimney:before { content: @fa-var-chimney; }
.@{fa-css-prefix}-chrome:before { content: @fa-var-chrome; }
.@{fa-css-prefix}-chromecast:before { content: @fa-var-chromecast; }
.@{fa-css-prefix}-church:before { content: @fa-var-church; }
.@{fa-css-prefix}-circle:before { content: @fa-var-circle; }
.@{fa-css-prefix}-circle-notch:before { content: @fa-var-circle-notch; }
.@{fa-css-prefix}-city:before { content: @fa-var-city; }
.@{fa-css-prefix}-claw-marks:before { content: @fa-var-claw-marks; }
.@{fa-css-prefix}-clinic-medical:before { content: @fa-var-clinic-medical; }
.@{fa-css-prefix}-clipboard:before { content: @fa-var-clipboard; }
.@{fa-css-prefix}-clipboard-check:before { content: @fa-var-clipboard-check; }
.@{fa-css-prefix}-clipboard-list:before { content: @fa-var-clipboard-list; }
.@{fa-css-prefix}-clipboard-list-check:before { content: @fa-var-clipboard-list-check; }
.@{fa-css-prefix}-clipboard-prescription:before { content: @fa-var-clipboard-prescription; }
.@{fa-css-prefix}-clipboard-user:before { content: @fa-var-clipboard-user; }
.@{fa-css-prefix}-clock:before { content: @fa-var-clock; }
.@{fa-css-prefix}-clone:before { content: @fa-var-clone; }
.@{fa-css-prefix}-closed-captioning:before { content: @fa-var-closed-captioning; }
.@{fa-css-prefix}-cloud:before { content: @fa-var-cloud; }
.@{fa-css-prefix}-cloud-download:before { content: @fa-var-cloud-download; }
.@{fa-css-prefix}-cloud-download-alt:before { content: @fa-var-cloud-download-alt; }
.@{fa-css-prefix}-cloud-drizzle:before { content: @fa-var-cloud-drizzle; }
.@{fa-css-prefix}-cloud-hail:before { content: @fa-var-cloud-hail; }
.@{fa-css-prefix}-cloud-hail-mixed:before { content: @fa-var-cloud-hail-mixed; }
.@{fa-css-prefix}-cloud-meatball:before { content: @fa-var-cloud-meatball; }
.@{fa-css-prefix}-cloud-moon:before { content: @fa-var-cloud-moon; }
.@{fa-css-prefix}-cloud-moon-rain:before { content: @fa-var-cloud-moon-rain; }
.@{fa-css-prefix}-cloud-rain:before { content: @fa-var-cloud-rain; }
.@{fa-css-prefix}-cloud-rainbow:before { content: @fa-var-cloud-rainbow; }
.@{fa-css-prefix}-cloud-showers:before { content: @fa-var-cloud-showers; }
.@{fa-css-prefix}-cloud-showers-heavy:before { content: @fa-var-cloud-showers-heavy; }
.@{fa-css-prefix}-cloud-sleet:before { content: @fa-var-cloud-sleet; }
.@{fa-css-prefix}-cloud-snow:before { content: @fa-var-cloud-snow; }
.@{fa-css-prefix}-cloud-sun:before { content: @fa-var-cloud-sun; }
.@{fa-css-prefix}-cloud-sun-rain:before { content: @fa-var-cloud-sun-rain; }
.@{fa-css-prefix}-cloud-upload:before { content: @fa-var-cloud-upload; }
.@{fa-css-prefix}-cloud-upload-alt:before { content: @fa-var-cloud-upload-alt; }
.@{fa-css-prefix}-clouds:before { content: @fa-var-clouds; }
.@{fa-css-prefix}-clouds-moon:before { content: @fa-var-clouds-moon; }
.@{fa-css-prefix}-clouds-sun:before { content: @fa-var-clouds-sun; }
.@{fa-css-prefix}-cloudscale:before { content: @fa-var-cloudscale; }
.@{fa-css-prefix}-cloudsmith:before { content: @fa-var-cloudsmith; }
.@{fa-css-prefix}-cloudversify:before { content: @fa-var-cloudversify; }
.@{fa-css-prefix}-club:before { content: @fa-var-club; }
.@{fa-css-prefix}-cocktail:before { content: @fa-var-cocktail; }
.@{fa-css-prefix}-code:before { content: @fa-var-code; }
.@{fa-css-prefix}-code-branch:before { content: @fa-var-code-branch; }
.@{fa-css-prefix}-code-commit:before { content: @fa-var-code-commit; }
.@{fa-css-prefix}-code-merge:before { content: @fa-var-code-merge; }
.@{fa-css-prefix}-codepen:before { content: @fa-var-codepen; }
.@{fa-css-prefix}-codiepie:before { content: @fa-var-codiepie; }
.@{fa-css-prefix}-coffee:before { content: @fa-var-coffee; }
.@{fa-css-prefix}-coffee-togo:before { content: @fa-var-coffee-togo; }
.@{fa-css-prefix}-coffin:before { content: @fa-var-coffin; }
.@{fa-css-prefix}-cog:before { content: @fa-var-cog; }
.@{fa-css-prefix}-cogs:before { content: @fa-var-cogs; }
.@{fa-css-prefix}-coin:before { content: @fa-var-coin; }
.@{fa-css-prefix}-coins:before { content: @fa-var-coins; }
.@{fa-css-prefix}-columns:before { content: @fa-var-columns; }
.@{fa-css-prefix}-comment:before { content: @fa-var-comment; }
.@{fa-css-prefix}-comment-alt:before { content: @fa-var-comment-alt; }
.@{fa-css-prefix}-comment-alt-check:before { content: @fa-var-comment-alt-check; }
.@{fa-css-prefix}-comment-alt-dollar:before { content: @fa-var-comment-alt-dollar; }
.@{fa-css-prefix}-comment-alt-dots:before { content: @fa-var-comment-alt-dots; }
.@{fa-css-prefix}-comment-alt-edit:before { content: @fa-var-comment-alt-edit; }
.@{fa-css-prefix}-comment-alt-exclamation:before { content: @fa-var-comment-alt-exclamation; }
.@{fa-css-prefix}-comment-alt-lines:before { content: @fa-var-comment-alt-lines; }
.@{fa-css-prefix}-comment-alt-medical:before { content: @fa-var-comment-alt-medical; }
.@{fa-css-prefix}-comment-alt-minus:before { content: @fa-var-comment-alt-minus; }
.@{fa-css-prefix}-comment-alt-plus:before { content: @fa-var-comment-alt-plus; }
.@{fa-css-prefix}-comment-alt-slash:before { content: @fa-var-comment-alt-slash; }
.@{fa-css-prefix}-comment-alt-smile:before { content: @fa-var-comment-alt-smile; }
.@{fa-css-prefix}-comment-alt-times:before { content: @fa-var-comment-alt-times; }
.@{fa-css-prefix}-comment-check:before { content: @fa-var-comment-check; }
.@{fa-css-prefix}-comment-dollar:before { content: @fa-var-comment-dollar; }
.@{fa-css-prefix}-comment-dots:before { content: @fa-var-comment-dots; }
.@{fa-css-prefix}-comment-edit:before { content: @fa-var-comment-edit; }
.@{fa-css-prefix}-comment-exclamation:before { content: @fa-var-comment-exclamation; }
.@{fa-css-prefix}-comment-lines:before { content: @fa-var-comment-lines; }
.@{fa-css-prefix}-comment-medical:before { content: @fa-var-comment-medical; }
.@{fa-css-prefix}-comment-minus:before { content: @fa-var-comment-minus; }
.@{fa-css-prefix}-comment-plus:before { content: @fa-var-comment-plus; }
.@{fa-css-prefix}-comment-slash:before { content: @fa-var-comment-slash; }
.@{fa-css-prefix}-comment-smile:before { content: @fa-var-comment-smile; }
.@{fa-css-prefix}-comment-times:before { content: @fa-var-comment-times; }
.@{fa-css-prefix}-comments:before { content: @fa-var-comments; }
.@{fa-css-prefix}-comments-alt:before { content: @fa-var-comments-alt; }
.@{fa-css-prefix}-comments-alt-dollar:before { content: @fa-var-comments-alt-dollar; }
.@{fa-css-prefix}-comments-dollar:before { content: @fa-var-comments-dollar; }
.@{fa-css-prefix}-compact-disc:before { content: @fa-var-compact-disc; }
.@{fa-css-prefix}-compass:before { content: @fa-var-compass; }
.@{fa-css-prefix}-compass-slash:before { content: @fa-var-compass-slash; }
.@{fa-css-prefix}-compress:before { content: @fa-var-compress; }
.@{fa-css-prefix}-compress-alt:before { content: @fa-var-compress-alt; }
.@{fa-css-prefix}-compress-arrows-alt:before { content: @fa-var-compress-arrows-alt; }
.@{fa-css-prefix}-compress-wide:before { content: @fa-var-compress-wide; }
.@{fa-css-prefix}-concierge-bell:before { content: @fa-var-concierge-bell; }
.@{fa-css-prefix}-confluence:before { content: @fa-var-confluence; }
.@{fa-css-prefix}-connectdevelop:before { content: @fa-var-connectdevelop; }
.@{fa-css-prefix}-construction:before { content: @fa-var-construction; }
.@{fa-css-prefix}-container-storage:before { content: @fa-var-container-storage; }
.@{fa-css-prefix}-contao:before { content: @fa-var-contao; }
.@{fa-css-prefix}-conveyor-belt:before { content: @fa-var-conveyor-belt; }
.@{fa-css-prefix}-conveyor-belt-alt:before { content: @fa-var-conveyor-belt-alt; }
.@{fa-css-prefix}-cookie:before { content: @fa-var-cookie; }
.@{fa-css-prefix}-cookie-bite:before { content: @fa-var-cookie-bite; }
.@{fa-css-prefix}-copy:before { content: @fa-var-copy; }
.@{fa-css-prefix}-copyright:before { content: @fa-var-copyright; }
.@{fa-css-prefix}-corn:before { content: @fa-var-corn; }
.@{fa-css-prefix}-cotton-bureau:before { content: @fa-var-cotton-bureau; }
.@{fa-css-prefix}-couch:before { content: @fa-var-couch; }
.@{fa-css-prefix}-cow:before { content: @fa-var-cow; }
.@{fa-css-prefix}-cpanel:before { content: @fa-var-cpanel; }
.@{fa-css-prefix}-creative-commons:before { content: @fa-var-creative-commons; }
.@{fa-css-prefix}-creative-commons-by:before { content: @fa-var-creative-commons-by; }
.@{fa-css-prefix}-creative-commons-nc:before { content: @fa-var-creative-commons-nc; }
.@{fa-css-prefix}-creative-commons-nc-eu:before { content: @fa-var-creative-commons-nc-eu; }
.@{fa-css-prefix}-creative-commons-nc-jp:before { content: @fa-var-creative-commons-nc-jp; }
.@{fa-css-prefix}-creative-commons-nd:before { content: @fa-var-creative-commons-nd; }
.@{fa-css-prefix}-creative-commons-pd:before { content: @fa-var-creative-commons-pd; }
.@{fa-css-prefix}-creative-commons-pd-alt:before { content: @fa-var-creative-commons-pd-alt; }
.@{fa-css-prefix}-creative-commons-remix:before { content: @fa-var-creative-commons-remix; }
.@{fa-css-prefix}-creative-commons-sa:before { content: @fa-var-creative-commons-sa; }
.@{fa-css-prefix}-creative-commons-sampling:before { content: @fa-var-creative-commons-sampling; }
.@{fa-css-prefix}-creative-commons-sampling-plus:before { content: @fa-var-creative-commons-sampling-plus; }
.@{fa-css-prefix}-creative-commons-share:before { content: @fa-var-creative-commons-share; }
.@{fa-css-prefix}-creative-commons-zero:before { content: @fa-var-creative-commons-zero; }
.@{fa-css-prefix}-credit-card:before { content: @fa-var-credit-card; }
.@{fa-css-prefix}-credit-card-blank:before { content: @fa-var-credit-card-blank; }
.@{fa-css-prefix}-credit-card-front:before { content: @fa-var-credit-card-front; }
.@{fa-css-prefix}-cricket:before { content: @fa-var-cricket; }
.@{fa-css-prefix}-critical-role:before { content: @fa-var-critical-role; }
.@{fa-css-prefix}-croissant:before { content: @fa-var-croissant; }
.@{fa-css-prefix}-crop:before { content: @fa-var-crop; }
.@{fa-css-prefix}-crop-alt:before { content: @fa-var-crop-alt; }
.@{fa-css-prefix}-cross:before { content: @fa-var-cross; }
.@{fa-css-prefix}-crosshairs:before { content: @fa-var-crosshairs; }
.@{fa-css-prefix}-crow:before { content: @fa-var-crow; }
.@{fa-css-prefix}-crown:before { content: @fa-var-crown; }
.@{fa-css-prefix}-crutch:before { content: @fa-var-crutch; }
.@{fa-css-prefix}-crutches:before { content: @fa-var-crutches; }
.@{fa-css-prefix}-css3:before { content: @fa-var-css3; }
.@{fa-css-prefix}-css3-alt:before { content: @fa-var-css3-alt; }
.@{fa-css-prefix}-cube:before { content: @fa-var-cube; }
.@{fa-css-prefix}-cubes:before { content: @fa-var-cubes; }
.@{fa-css-prefix}-curling:before { content: @fa-var-curling; }
.@{fa-css-prefix}-cut:before { content: @fa-var-cut; }
.@{fa-css-prefix}-cuttlefish:before { content: @fa-var-cuttlefish; }
.@{fa-css-prefix}-d-and-d:before { content: @fa-var-d-and-d; }
.@{fa-css-prefix}-d-and-d-beyond:before { content: @fa-var-d-and-d-beyond; }
.@{fa-css-prefix}-dagger:before { content: @fa-var-dagger; }
.@{fa-css-prefix}-dashcube:before { content: @fa-var-dashcube; }
.@{fa-css-prefix}-database:before { content: @fa-var-database; }
.@{fa-css-prefix}-deaf:before { content: @fa-var-deaf; }
.@{fa-css-prefix}-debug:before { content: @fa-var-debug; }
.@{fa-css-prefix}-deer:before { content: @fa-var-deer; }
.@{fa-css-prefix}-deer-rudolph:before { content: @fa-var-deer-rudolph; }
.@{fa-css-prefix}-delicious:before { content: @fa-var-delicious; }
.@{fa-css-prefix}-democrat:before { content: @fa-var-democrat; }
.@{fa-css-prefix}-deploydog:before { content: @fa-var-deploydog; }
.@{fa-css-prefix}-deskpro:before { content: @fa-var-deskpro; }
.@{fa-css-prefix}-desktop:before { content: @fa-var-desktop; }
.@{fa-css-prefix}-desktop-alt:before { content: @fa-var-desktop-alt; }
.@{fa-css-prefix}-dev:before { content: @fa-var-dev; }
.@{fa-css-prefix}-deviantart:before { content: @fa-var-deviantart; }
.@{fa-css-prefix}-dewpoint:before { content: @fa-var-dewpoint; }
.@{fa-css-prefix}-dharmachakra:before { content: @fa-var-dharmachakra; }
.@{fa-css-prefix}-dhl:before { content: @fa-var-dhl; }
.@{fa-css-prefix}-diagnoses:before { content: @fa-var-diagnoses; }
.@{fa-css-prefix}-diamond:before { content: @fa-var-diamond; }
.@{fa-css-prefix}-diaspora:before { content: @fa-var-diaspora; }
.@{fa-css-prefix}-dice:before { content: @fa-var-dice; }
.@{fa-css-prefix}-dice-d10:before { content: @fa-var-dice-d10; }
.@{fa-css-prefix}-dice-d12:before { content: @fa-var-dice-d12; }
.@{fa-css-prefix}-dice-d20:before { content: @fa-var-dice-d20; }
.@{fa-css-prefix}-dice-d4:before { content: @fa-var-dice-d4; }
.@{fa-css-prefix}-dice-d6:before { content: @fa-var-dice-d6; }
.@{fa-css-prefix}-dice-d8:before { content: @fa-var-dice-d8; }
.@{fa-css-prefix}-dice-five:before { content: @fa-var-dice-five; }
.@{fa-css-prefix}-dice-four:before { content: @fa-var-dice-four; }
.@{fa-css-prefix}-dice-one:before { content: @fa-var-dice-one; }
.@{fa-css-prefix}-dice-six:before { content: @fa-var-dice-six; }
.@{fa-css-prefix}-dice-three:before { content: @fa-var-dice-three; }
.@{fa-css-prefix}-dice-two:before { content: @fa-var-dice-two; }
.@{fa-css-prefix}-digg:before { content: @fa-var-digg; }
.@{fa-css-prefix}-digging:before { content: @fa-var-digging; }
.@{fa-css-prefix}-digital-ocean:before { content: @fa-var-digital-ocean; }
.@{fa-css-prefix}-digital-tachograph:before { content: @fa-var-digital-tachograph; }
.@{fa-css-prefix}-diploma:before { content: @fa-var-diploma; }
.@{fa-css-prefix}-directions:before { content: @fa-var-directions; }
.@{fa-css-prefix}-discord:before { content: @fa-var-discord; }
.@{fa-css-prefix}-discourse:before { content: @fa-var-discourse; }
.@{fa-css-prefix}-disease:before { content: @fa-var-disease; }
.@{fa-css-prefix}-divide:before { content: @fa-var-divide; }
.@{fa-css-prefix}-dizzy:before { content: @fa-var-dizzy; }
.@{fa-css-prefix}-dna:before { content: @fa-var-dna; }
.@{fa-css-prefix}-do-not-enter:before { content: @fa-var-do-not-enter; }
.@{fa-css-prefix}-dochub:before { content: @fa-var-dochub; }
.@{fa-css-prefix}-docker:before { content: @fa-var-docker; }
.@{fa-css-prefix}-dog:before { content: @fa-var-dog; }
.@{fa-css-prefix}-dog-leashed:before { content: @fa-var-dog-leashed; }
.@{fa-css-prefix}-dollar-sign:before { content: @fa-var-dollar-sign; }
.@{fa-css-prefix}-dolly:before { content: @fa-var-dolly; }
.@{fa-css-prefix}-dolly-empty:before { content: @fa-var-dolly-empty; }
.@{fa-css-prefix}-dolly-flatbed:before { content: @fa-var-dolly-flatbed; }
.@{fa-css-prefix}-dolly-flatbed-alt:before { content: @fa-var-dolly-flatbed-alt; }
.@{fa-css-prefix}-dolly-flatbed-empty:before { content: @fa-var-dolly-flatbed-empty; }
.@{fa-css-prefix}-donate:before { content: @fa-var-donate; }
.@{fa-css-prefix}-door-closed:before { content: @fa-var-door-closed; }
.@{fa-css-prefix}-door-open:before { content: @fa-var-door-open; }
.@{fa-css-prefix}-dot-circle:before { content: @fa-var-dot-circle; }
.@{fa-css-prefix}-dove:before { content: @fa-var-dove; }
.@{fa-css-prefix}-download:before { content: @fa-var-download; }
.@{fa-css-prefix}-draft2digital:before { content: @fa-var-draft2digital; }
.@{fa-css-prefix}-drafting-compass:before { content: @fa-var-drafting-compass; }
.@{fa-css-prefix}-dragon:before { content: @fa-var-dragon; }
.@{fa-css-prefix}-draw-circle:before { content: @fa-var-draw-circle; }
.@{fa-css-prefix}-draw-polygon:before { content: @fa-var-draw-polygon; }
.@{fa-css-prefix}-draw-square:before { content: @fa-var-draw-square; }
.@{fa-css-prefix}-dreidel:before { content: @fa-var-dreidel; }
.@{fa-css-prefix}-dribbble:before { content: @fa-var-dribbble; }
.@{fa-css-prefix}-dribbble-square:before { content: @fa-var-dribbble-square; }
.@{fa-css-prefix}-drone:before { content: @fa-var-drone; }
.@{fa-css-prefix}-drone-alt:before { content: @fa-var-drone-alt; }
.@{fa-css-prefix}-dropbox:before { content: @fa-var-dropbox; }
.@{fa-css-prefix}-drum:before { content: @fa-var-drum; }
.@{fa-css-prefix}-drum-steelpan:before { content: @fa-var-drum-steelpan; }
.@{fa-css-prefix}-drumstick:before { content: @fa-var-drumstick; }
.@{fa-css-prefix}-drumstick-bite:before { content: @fa-var-drumstick-bite; }
.@{fa-css-prefix}-drupal:before { content: @fa-var-drupal; }
.@{fa-css-prefix}-dryer:before { content: @fa-var-dryer; }
.@{fa-css-prefix}-dryer-alt:before { content: @fa-var-dryer-alt; }
.@{fa-css-prefix}-duck:before { content: @fa-var-duck; }
.@{fa-css-prefix}-dumbbell:before { content: @fa-var-dumbbell; }
.@{fa-css-prefix}-dumpster:before { content: @fa-var-dumpster; }
.@{fa-css-prefix}-dumpster-fire:before { content: @fa-var-dumpster-fire; }
.@{fa-css-prefix}-dungeon:before { content: @fa-var-dungeon; }
.@{fa-css-prefix}-dyalog:before { content: @fa-var-dyalog; }
.@{fa-css-prefix}-ear:before { content: @fa-var-ear; }
.@{fa-css-prefix}-ear-muffs:before { content: @fa-var-ear-muffs; }
.@{fa-css-prefix}-earlybirds:before { content: @fa-var-earlybirds; }
.@{fa-css-prefix}-ebay:before { content: @fa-var-ebay; }
.@{fa-css-prefix}-eclipse:before { content: @fa-var-eclipse; }
.@{fa-css-prefix}-eclipse-alt:before { content: @fa-var-eclipse-alt; }
.@{fa-css-prefix}-edge:before { content: @fa-var-edge; }
.@{fa-css-prefix}-edit:before { content: @fa-var-edit; }
.@{fa-css-prefix}-egg:before { content: @fa-var-egg; }
.@{fa-css-prefix}-egg-fried:before { content: @fa-var-egg-fried; }
.@{fa-css-prefix}-eject:before { content: @fa-var-eject; }
.@{fa-css-prefix}-elementor:before { content: @fa-var-elementor; }
.@{fa-css-prefix}-elephant:before { content: @fa-var-elephant; }
.@{fa-css-prefix}-ellipsis-h:before { content: @fa-var-ellipsis-h; }
.@{fa-css-prefix}-ellipsis-h-alt:before { content: @fa-var-ellipsis-h-alt; }
.@{fa-css-prefix}-ellipsis-v:before { content: @fa-var-ellipsis-v; }
.@{fa-css-prefix}-ellipsis-v-alt:before { content: @fa-var-ellipsis-v-alt; }
.@{fa-css-prefix}-ello:before { content: @fa-var-ello; }
.@{fa-css-prefix}-ember:before { content: @fa-var-ember; }
.@{fa-css-prefix}-empire:before { content: @fa-var-empire; }
.@{fa-css-prefix}-empty-set:before { content: @fa-var-empty-set; }
.@{fa-css-prefix}-engine-warning:before { content: @fa-var-engine-warning; }
.@{fa-css-prefix}-envelope:before { content: @fa-var-envelope; }
.@{fa-css-prefix}-envelope-open:before { content: @fa-var-envelope-open; }
.@{fa-css-prefix}-envelope-open-dollar:before { content: @fa-var-envelope-open-dollar; }
.@{fa-css-prefix}-envelope-open-text:before { content: @fa-var-envelope-open-text; }
.@{fa-css-prefix}-envelope-square:before { content: @fa-var-envelope-square; }
.@{fa-css-prefix}-envira:before { content: @fa-var-envira; }
.@{fa-css-prefix}-equals:before { content: @fa-var-equals; }
.@{fa-css-prefix}-eraser:before { content: @fa-var-eraser; }
.@{fa-css-prefix}-erlang:before { content: @fa-var-erlang; }
.@{fa-css-prefix}-ethereum:before { content: @fa-var-ethereum; }
.@{fa-css-prefix}-ethernet:before { content: @fa-var-ethernet; }
.@{fa-css-prefix}-etsy:before { content: @fa-var-etsy; }
.@{fa-css-prefix}-euro-sign:before { content: @fa-var-euro-sign; }
.@{fa-css-prefix}-evernote:before { content: @fa-var-evernote; }
.@{fa-css-prefix}-exchange:before { content: @fa-var-exchange; }
.@{fa-css-prefix}-exchange-alt:before { content: @fa-var-exchange-alt; }
.@{fa-css-prefix}-exclamation:before { content: @fa-var-exclamation; }
.@{fa-css-prefix}-exclamation-circle:before { content: @fa-var-exclamation-circle; }
.@{fa-css-prefix}-exclamation-square:before { content: @fa-var-exclamation-square; }
.@{fa-css-prefix}-exclamation-triangle:before { content: @fa-var-exclamation-triangle; }
.@{fa-css-prefix}-expand:before { content: @fa-var-expand; }
.@{fa-css-prefix}-expand-alt:before { content: @fa-var-expand-alt; }
.@{fa-css-prefix}-expand-arrows:before { content: @fa-var-expand-arrows; }
.@{fa-css-prefix}-expand-arrows-alt:before { content: @fa-var-expand-arrows-alt; }
.@{fa-css-prefix}-expand-wide:before { content: @fa-var-expand-wide; }
.@{fa-css-prefix}-expeditedssl:before { content: @fa-var-expeditedssl; }
.@{fa-css-prefix}-external-link:before { content: @fa-var-external-link; }
.@{fa-css-prefix}-external-link-alt:before { content: @fa-var-external-link-alt; }
.@{fa-css-prefix}-external-link-square:before { content: @fa-var-external-link-square; }
.@{fa-css-prefix}-external-link-square-alt:before { content: @fa-var-external-link-square-alt; }
.@{fa-css-prefix}-eye:before { content: @fa-var-eye; }
.@{fa-css-prefix}-eye-dropper:before { content: @fa-var-eye-dropper; }
.@{fa-css-prefix}-eye-evil:before { content: @fa-var-eye-evil; }
.@{fa-css-prefix}-eye-slash:before { content: @fa-var-eye-slash; }
.@{fa-css-prefix}-facebook:before { content: @fa-var-facebook; }
.@{fa-css-prefix}-facebook-f:before { content: @fa-var-facebook-f; }
.@{fa-css-prefix}-facebook-messenger:before { content: @fa-var-facebook-messenger; }
.@{fa-css-prefix}-facebook-square:before { content: @fa-var-facebook-square; }
.@{fa-css-prefix}-fan:before { content: @fa-var-fan; }
.@{fa-css-prefix}-fantasy-flight-games:before { content: @fa-var-fantasy-flight-games; }
.@{fa-css-prefix}-farm:before { content: @fa-var-farm; }
.@{fa-css-prefix}-fast-backward:before { content: @fa-var-fast-backward; }
.@{fa-css-prefix}-fast-forward:before { content: @fa-var-fast-forward; }
.@{fa-css-prefix}-fax:before { content: @fa-var-fax; }
.@{fa-css-prefix}-feather:before { content: @fa-var-feather; }
.@{fa-css-prefix}-feather-alt:before { content: @fa-var-feather-alt; }
.@{fa-css-prefix}-fedex:before { content: @fa-var-fedex; }
.@{fa-css-prefix}-fedora:before { content: @fa-var-fedora; }
.@{fa-css-prefix}-female:before { content: @fa-var-female; }
.@{fa-css-prefix}-field-hockey:before { content: @fa-var-field-hockey; }
.@{fa-css-prefix}-fighter-jet:before { content: @fa-var-fighter-jet; }
.@{fa-css-prefix}-figma:before { content: @fa-var-figma; }
.@{fa-css-prefix}-file:before { content: @fa-var-file; }
.@{fa-css-prefix}-file-alt:before { content: @fa-var-file-alt; }
.@{fa-css-prefix}-file-archive:before { content: @fa-var-file-archive; }
.@{fa-css-prefix}-file-audio:before { content: @fa-var-file-audio; }
.@{fa-css-prefix}-file-certificate:before { content: @fa-var-file-certificate; }
.@{fa-css-prefix}-file-chart-line:before { content: @fa-var-file-chart-line; }
.@{fa-css-prefix}-file-chart-pie:before { content: @fa-var-file-chart-pie; }
.@{fa-css-prefix}-file-check:before { content: @fa-var-file-check; }
.@{fa-css-prefix}-file-code:before { content: @fa-var-file-code; }
.@{fa-css-prefix}-file-contract:before { content: @fa-var-file-contract; }
.@{fa-css-prefix}-file-csv:before { content: @fa-var-file-csv; }
.@{fa-css-prefix}-file-download:before { content: @fa-var-file-download; }
.@{fa-css-prefix}-file-edit:before { content: @fa-var-file-edit; }
.@{fa-css-prefix}-file-excel:before { content: @fa-var-file-excel; }
.@{fa-css-prefix}-file-exclamation:before { content: @fa-var-file-exclamation; }
.@{fa-css-prefix}-file-export:before { content: @fa-var-file-export; }
.@{fa-css-prefix}-file-image:before { content: @fa-var-file-image; }
.@{fa-css-prefix}-file-import:before { content: @fa-var-file-import; }
.@{fa-css-prefix}-file-invoice:before { content: @fa-var-file-invoice; }
.@{fa-css-prefix}-file-invoice-dollar:before { content: @fa-var-file-invoice-dollar; }
.@{fa-css-prefix}-file-medical:before { content: @fa-var-file-medical; }
.@{fa-css-prefix}-file-medical-alt:before { content: @fa-var-file-medical-alt; }
.@{fa-css-prefix}-file-minus:before { content: @fa-var-file-minus; }
.@{fa-css-prefix}-file-pdf:before { content: @fa-var-file-pdf; }
.@{fa-css-prefix}-file-plus:before { content: @fa-var-file-plus; }
.@{fa-css-prefix}-file-powerpoint:before { content: @fa-var-file-powerpoint; }
.@{fa-css-prefix}-file-prescription:before { content: @fa-var-file-prescription; }
.@{fa-css-prefix}-file-search:before { content: @fa-var-file-search; }
.@{fa-css-prefix}-file-signature:before { content: @fa-var-file-signature; }
.@{fa-css-prefix}-file-spreadsheet:before { content: @fa-var-file-spreadsheet; }
.@{fa-css-prefix}-file-times:before { content: @fa-var-file-times; }
.@{fa-css-prefix}-file-upload:before { content: @fa-var-file-upload; }
.@{fa-css-prefix}-file-user:before { content: @fa-var-file-user; }
.@{fa-css-prefix}-file-video:before { content: @fa-var-file-video; }
.@{fa-css-prefix}-file-word:before { content: @fa-var-file-word; }
.@{fa-css-prefix}-files-medical:before { content: @fa-var-files-medical; }
.@{fa-css-prefix}-fill:before { content: @fa-var-fill; }
.@{fa-css-prefix}-fill-drip:before { content: @fa-var-fill-drip; }
.@{fa-css-prefix}-film:before { content: @fa-var-film; }
.@{fa-css-prefix}-film-alt:before { content: @fa-var-film-alt; }
.@{fa-css-prefix}-filter:before { content: @fa-var-filter; }
.@{fa-css-prefix}-fingerprint:before { content: @fa-var-fingerprint; }
.@{fa-css-prefix}-fire:before { content: @fa-var-fire; }
.@{fa-css-prefix}-fire-alt:before { content: @fa-var-fire-alt; }
.@{fa-css-prefix}-fire-extinguisher:before { content: @fa-var-fire-extinguisher; }
.@{fa-css-prefix}-fire-smoke:before { content: @fa-var-fire-smoke; }
.@{fa-css-prefix}-firefox:before { content: @fa-var-firefox; }
.@{fa-css-prefix}-fireplace:before { content: @fa-var-fireplace; }
.@{fa-css-prefix}-first-aid:before { content: @fa-var-first-aid; }
.@{fa-css-prefix}-first-order:before { content: @fa-var-first-order; }
.@{fa-css-prefix}-first-order-alt:before { content: @fa-var-first-order-alt; }
.@{fa-css-prefix}-firstdraft:before { content: @fa-var-firstdraft; }
.@{fa-css-prefix}-fish:before { content: @fa-var-fish; }
.@{fa-css-prefix}-fish-cooked:before { content: @fa-var-fish-cooked; }
.@{fa-css-prefix}-fist-raised:before { content: @fa-var-fist-raised; }
.@{fa-css-prefix}-flag:before { content: @fa-var-flag; }
.@{fa-css-prefix}-flag-alt:before { content: @fa-var-flag-alt; }
.@{fa-css-prefix}-flag-checkered:before { content: @fa-var-flag-checkered; }
.@{fa-css-prefix}-flag-usa:before { content: @fa-var-flag-usa; }
.@{fa-css-prefix}-flame:before { content: @fa-var-flame; }
.@{fa-css-prefix}-flask:before { content: @fa-var-flask; }
.@{fa-css-prefix}-flask-poison:before { content: @fa-var-flask-poison; }
.@{fa-css-prefix}-flask-potion:before { content: @fa-var-flask-potion; }
.@{fa-css-prefix}-flickr:before { content: @fa-var-flickr; }
.@{fa-css-prefix}-flipboard:before { content: @fa-var-flipboard; }
.@{fa-css-prefix}-flower:before { content: @fa-var-flower; }
.@{fa-css-prefix}-flower-daffodil:before { content: @fa-var-flower-daffodil; }
.@{fa-css-prefix}-flower-tulip:before { content: @fa-var-flower-tulip; }
.@{fa-css-prefix}-flushed:before { content: @fa-var-flushed; }
.@{fa-css-prefix}-fly:before { content: @fa-var-fly; }
.@{fa-css-prefix}-fog:before { content: @fa-var-fog; }
.@{fa-css-prefix}-folder:before { content: @fa-var-folder; }
.@{fa-css-prefix}-folder-minus:before { content: @fa-var-folder-minus; }
.@{fa-css-prefix}-folder-open:before { content: @fa-var-folder-open; }
.@{fa-css-prefix}-folder-plus:before { content: @fa-var-folder-plus; }
.@{fa-css-prefix}-folder-times:before { content: @fa-var-folder-times; }
.@{fa-css-prefix}-folder-tree:before { content: @fa-var-folder-tree; }
.@{fa-css-prefix}-folders:before { content: @fa-var-folders; }
.@{fa-css-prefix}-font:before { content: @fa-var-font; }
.@{fa-css-prefix}-font-awesome:before { content: @fa-var-font-awesome; }
.@{fa-css-prefix}-font-awesome-alt:before { content: @fa-var-font-awesome-alt; }
.@{fa-css-prefix}-font-awesome-flag:before { content: @fa-var-font-awesome-flag; }
.@{fa-css-prefix}-font-awesome-logo-full:before { content: @fa-var-font-awesome-logo-full; }
.@{fa-css-prefix}-font-case:before { content: @fa-var-font-case; }
.@{fa-css-prefix}-fonticons:before { content: @fa-var-fonticons; }
.@{fa-css-prefix}-fonticons-fi:before { content: @fa-var-fonticons-fi; }
.@{fa-css-prefix}-football-ball:before { content: @fa-var-football-ball; }
.@{fa-css-prefix}-football-helmet:before { content: @fa-var-football-helmet; }
.@{fa-css-prefix}-forklift:before { content: @fa-var-forklift; }
.@{fa-css-prefix}-fort-awesome:before { content: @fa-var-fort-awesome; }
.@{fa-css-prefix}-fort-awesome-alt:before { content: @fa-var-fort-awesome-alt; }
.@{fa-css-prefix}-forumbee:before { content: @fa-var-forumbee; }
.@{fa-css-prefix}-forward:before { content: @fa-var-forward; }
.@{fa-css-prefix}-foursquare:before { content: @fa-var-foursquare; }
.@{fa-css-prefix}-fragile:before { content: @fa-var-fragile; }
.@{fa-css-prefix}-free-code-camp:before { content: @fa-var-free-code-camp; }
.@{fa-css-prefix}-freebsd:before { content: @fa-var-freebsd; }
.@{fa-css-prefix}-french-fries:before { content: @fa-var-french-fries; }
.@{fa-css-prefix}-frog:before { content: @fa-var-frog; }
.@{fa-css-prefix}-frosty-head:before { content: @fa-var-frosty-head; }
.@{fa-css-prefix}-frown:before { content: @fa-var-frown; }
.@{fa-css-prefix}-frown-open:before { content: @fa-var-frown-open; }
.@{fa-css-prefix}-fulcrum:before { content: @fa-var-fulcrum; }
.@{fa-css-prefix}-function:before { content: @fa-var-function; }
.@{fa-css-prefix}-funnel-dollar:before { content: @fa-var-funnel-dollar; }
.@{fa-css-prefix}-futbol:before { content: @fa-var-futbol; }
.@{fa-css-prefix}-galactic-republic:before { content: @fa-var-galactic-republic; }
.@{fa-css-prefix}-galactic-senate:before { content: @fa-var-galactic-senate; }
.@{fa-css-prefix}-game-board:before { content: @fa-var-game-board; }
.@{fa-css-prefix}-game-board-alt:before { content: @fa-var-game-board-alt; }
.@{fa-css-prefix}-gamepad:before { content: @fa-var-gamepad; }
.@{fa-css-prefix}-gas-pump:before { content: @fa-var-gas-pump; }
.@{fa-css-prefix}-gas-pump-slash:before { content: @fa-var-gas-pump-slash; }
.@{fa-css-prefix}-gavel:before { content: @fa-var-gavel; }
.@{fa-css-prefix}-gem:before { content: @fa-var-gem; }
.@{fa-css-prefix}-genderless:before { content: @fa-var-genderless; }
.@{fa-css-prefix}-get-pocket:before { content: @fa-var-get-pocket; }
.@{fa-css-prefix}-gg:before { content: @fa-var-gg; }
.@{fa-css-prefix}-gg-circle:before { content: @fa-var-gg-circle; }
.@{fa-css-prefix}-ghost:before { content: @fa-var-ghost; }
.@{fa-css-prefix}-gift:before { content: @fa-var-gift; }
.@{fa-css-prefix}-gift-card:before { content: @fa-var-gift-card; }
.@{fa-css-prefix}-gifts:before { content: @fa-var-gifts; }
.@{fa-css-prefix}-gingerbread-man:before { content: @fa-var-gingerbread-man; }
.@{fa-css-prefix}-git:before { content: @fa-var-git; }
.@{fa-css-prefix}-git-alt:before { content: @fa-var-git-alt; }
.@{fa-css-prefix}-git-square:before { content: @fa-var-git-square; }
.@{fa-css-prefix}-github:before { content: @fa-var-github; }
.@{fa-css-prefix}-github-alt:before { content: @fa-var-github-alt; }
.@{fa-css-prefix}-github-square:before { content: @fa-var-github-square; }
.@{fa-css-prefix}-gitkraken:before { content: @fa-var-gitkraken; }
.@{fa-css-prefix}-gitlab:before { content: @fa-var-gitlab; }
.@{fa-css-prefix}-gitter:before { content: @fa-var-gitter; }
.@{fa-css-prefix}-glass:before { content: @fa-var-glass; }
.@{fa-css-prefix}-glass-champagne:before { content: @fa-var-glass-champagne; }
.@{fa-css-prefix}-glass-cheers:before { content: @fa-var-glass-cheers; }
.@{fa-css-prefix}-glass-citrus:before { content: @fa-var-glass-citrus; }
.@{fa-css-prefix}-glass-martini:before { content: @fa-var-glass-martini; }
.@{fa-css-prefix}-glass-martini-alt:before { content: @fa-var-glass-martini-alt; }
.@{fa-css-prefix}-glass-whiskey:before { content: @fa-var-glass-whiskey; }
.@{fa-css-prefix}-glass-whiskey-rocks:before { content: @fa-var-glass-whiskey-rocks; }
.@{fa-css-prefix}-glasses:before { content: @fa-var-glasses; }
.@{fa-css-prefix}-glasses-alt:before { content: @fa-var-glasses-alt; }
.@{fa-css-prefix}-glide:before { content: @fa-var-glide; }
.@{fa-css-prefix}-glide-g:before { content: @fa-var-glide-g; }
.@{fa-css-prefix}-globe:before { content: @fa-var-globe; }
.@{fa-css-prefix}-globe-africa:before { content: @fa-var-globe-africa; }
.@{fa-css-prefix}-globe-americas:before { content: @fa-var-globe-americas; }
.@{fa-css-prefix}-globe-asia:before { content: @fa-var-globe-asia; }
.@{fa-css-prefix}-globe-europe:before { content: @fa-var-globe-europe; }
.@{fa-css-prefix}-globe-snow:before { content: @fa-var-globe-snow; }
.@{fa-css-prefix}-globe-stand:before { content: @fa-var-globe-stand; }
.@{fa-css-prefix}-gofore:before { content: @fa-var-gofore; }
.@{fa-css-prefix}-golf-ball:before { content: @fa-var-golf-ball; }
.@{fa-css-prefix}-golf-club:before { content: @fa-var-golf-club; }
.@{fa-css-prefix}-goodreads:before { content: @fa-var-goodreads; }
.@{fa-css-prefix}-goodreads-g:before { content: @fa-var-goodreads-g; }
.@{fa-css-prefix}-google:before { content: @fa-var-google; }
.@{fa-css-prefix}-google-drive:before { content: @fa-var-google-drive; }
.@{fa-css-prefix}-google-play:before { content: @fa-var-google-play; }
.@{fa-css-prefix}-google-plus:before { content: @fa-var-google-plus; }
.@{fa-css-prefix}-google-plus-g:before { content: @fa-var-google-plus-g; }
.@{fa-css-prefix}-google-plus-square:before { content: @fa-var-google-plus-square; }
.@{fa-css-prefix}-google-wallet:before { content: @fa-var-google-wallet; }
.@{fa-css-prefix}-gopuram:before { content: @fa-var-gopuram; }
.@{fa-css-prefix}-graduation-cap:before { content: @fa-var-graduation-cap; }
.@{fa-css-prefix}-gratipay:before { content: @fa-var-gratipay; }
.@{fa-css-prefix}-grav:before { content: @fa-var-grav; }
.@{fa-css-prefix}-greater-than:before { content: @fa-var-greater-than; }
.@{fa-css-prefix}-greater-than-equal:before { content: @fa-var-greater-than-equal; }
.@{fa-css-prefix}-grimace:before { content: @fa-var-grimace; }
.@{fa-css-prefix}-grin:before { content: @fa-var-grin; }
.@{fa-css-prefix}-grin-alt:before { content: @fa-var-grin-alt; }
.@{fa-css-prefix}-grin-beam:before { content: @fa-var-grin-beam; }
.@{fa-css-prefix}-grin-beam-sweat:before { content: @fa-var-grin-beam-sweat; }
.@{fa-css-prefix}-grin-hearts:before { content: @fa-var-grin-hearts; }
.@{fa-css-prefix}-grin-squint:before { content: @fa-var-grin-squint; }
.@{fa-css-prefix}-grin-squint-tears:before { content: @fa-var-grin-squint-tears; }
.@{fa-css-prefix}-grin-stars:before { content: @fa-var-grin-stars; }
.@{fa-css-prefix}-grin-tears:before { content: @fa-var-grin-tears; }
.@{fa-css-prefix}-grin-tongue:before { content: @fa-var-grin-tongue; }
.@{fa-css-prefix}-grin-tongue-squint:before { content: @fa-var-grin-tongue-squint; }
.@{fa-css-prefix}-grin-tongue-wink:before { content: @fa-var-grin-tongue-wink; }
.@{fa-css-prefix}-grin-wink:before { content: @fa-var-grin-wink; }
.@{fa-css-prefix}-grip-horizontal:before { content: @fa-var-grip-horizontal; }
.@{fa-css-prefix}-grip-lines:before { content: @fa-var-grip-lines; }
.@{fa-css-prefix}-grip-lines-vertical:before { content: @fa-var-grip-lines-vertical; }
.@{fa-css-prefix}-grip-vertical:before { content: @fa-var-grip-vertical; }
.@{fa-css-prefix}-gripfire:before { content: @fa-var-gripfire; }
.@{fa-css-prefix}-grunt:before { content: @fa-var-grunt; }
.@{fa-css-prefix}-guitar:before { content: @fa-var-guitar; }
.@{fa-css-prefix}-gulp:before { content: @fa-var-gulp; }
.@{fa-css-prefix}-h-square:before { content: @fa-var-h-square; }
.@{fa-css-prefix}-h1:before { content: @fa-var-h1; }
.@{fa-css-prefix}-h2:before { content: @fa-var-h2; }
.@{fa-css-prefix}-h3:before { content: @fa-var-h3; }
.@{fa-css-prefix}-h4:before { content: @fa-var-h4; }
.@{fa-css-prefix}-hacker-news:before { content: @fa-var-hacker-news; }
.@{fa-css-prefix}-hacker-news-square:before { content: @fa-var-hacker-news-square; }
.@{fa-css-prefix}-hackerrank:before { content: @fa-var-hackerrank; }
.@{fa-css-prefix}-hamburger:before { content: @fa-var-hamburger; }
.@{fa-css-prefix}-hammer:before { content: @fa-var-hammer; }
.@{fa-css-prefix}-hammer-war:before { content: @fa-var-hammer-war; }
.@{fa-css-prefix}-hamsa:before { content: @fa-var-hamsa; }
.@{fa-css-prefix}-hand-heart:before { content: @fa-var-hand-heart; }
.@{fa-css-prefix}-hand-holding:before { content: @fa-var-hand-holding; }
.@{fa-css-prefix}-hand-holding-box:before { content: @fa-var-hand-holding-box; }
.@{fa-css-prefix}-hand-holding-heart:before { content: @fa-var-hand-holding-heart; }
.@{fa-css-prefix}-hand-holding-magic:before { content: @fa-var-hand-holding-magic; }
.@{fa-css-prefix}-hand-holding-seedling:before { content: @fa-var-hand-holding-seedling; }
.@{fa-css-prefix}-hand-holding-usd:before { content: @fa-var-hand-holding-usd; }
.@{fa-css-prefix}-hand-holding-water:before { content: @fa-var-hand-holding-water; }
.@{fa-css-prefix}-hand-lizard:before { content: @fa-var-hand-lizard; }
.@{fa-css-prefix}-hand-middle-finger:before { content: @fa-var-hand-middle-finger; }
.@{fa-css-prefix}-hand-paper:before { content: @fa-var-hand-paper; }
.@{fa-css-prefix}-hand-peace:before { content: @fa-var-hand-peace; }
.@{fa-css-prefix}-hand-point-down:before { content: @fa-var-hand-point-down; }
.@{fa-css-prefix}-hand-point-left:before { content: @fa-var-hand-point-left; }
.@{fa-css-prefix}-hand-point-right:before { content: @fa-var-hand-point-right; }
.@{fa-css-prefix}-hand-point-up:before { content: @fa-var-hand-point-up; }
.@{fa-css-prefix}-hand-pointer:before { content: @fa-var-hand-pointer; }
.@{fa-css-prefix}-hand-receiving:before { content: @fa-var-hand-receiving; }
.@{fa-css-prefix}-hand-rock:before { content: @fa-var-hand-rock; }
.@{fa-css-prefix}-hand-scissors:before { content: @fa-var-hand-scissors; }
.@{fa-css-prefix}-hand-spock:before { content: @fa-var-hand-spock; }
.@{fa-css-prefix}-hands:before { content: @fa-var-hands; }
.@{fa-css-prefix}-hands-heart:before { content: @fa-var-hands-heart; }
.@{fa-css-prefix}-hands-helping:before { content: @fa-var-hands-helping; }
.@{fa-css-prefix}-hands-usd:before { content: @fa-var-hands-usd; }
.@{fa-css-prefix}-handshake:before { content: @fa-var-handshake; }
.@{fa-css-prefix}-handshake-alt:before { content: @fa-var-handshake-alt; }
.@{fa-css-prefix}-hanukiah:before { content: @fa-var-hanukiah; }
.@{fa-css-prefix}-hard-hat:before { content: @fa-var-hard-hat; }
.@{fa-css-prefix}-hashtag:before { content: @fa-var-hashtag; }
.@{fa-css-prefix}-hat-chef:before { content: @fa-var-hat-chef; }
.@{fa-css-prefix}-hat-santa:before { content: @fa-var-hat-santa; }
.@{fa-css-prefix}-hat-winter:before { content: @fa-var-hat-winter; }
.@{fa-css-prefix}-hat-witch:before { content: @fa-var-hat-witch; }
.@{fa-css-prefix}-hat-wizard:before { content: @fa-var-hat-wizard; }
.@{fa-css-prefix}-haykal:before { content: @fa-var-haykal; }
.@{fa-css-prefix}-hdd:before { content: @fa-var-hdd; }
.@{fa-css-prefix}-head-side:before { content: @fa-var-head-side; }
.@{fa-css-prefix}-head-side-brain:before { content: @fa-var-head-side-brain; }
.@{fa-css-prefix}-head-side-medical:before { content: @fa-var-head-side-medical; }
.@{fa-css-prefix}-head-vr:before { content: @fa-var-head-vr; }
.@{fa-css-prefix}-heading:before { content: @fa-var-heading; }
.@{fa-css-prefix}-headphones:before { content: @fa-var-headphones; }
.@{fa-css-prefix}-headphones-alt:before { content: @fa-var-headphones-alt; }
.@{fa-css-prefix}-headset:before { content: @fa-var-headset; }
.@{fa-css-prefix}-heart:before { content: @fa-var-heart; }
.@{fa-css-prefix}-heart-broken:before { content: @fa-var-heart-broken; }
.@{fa-css-prefix}-heart-circle:before { content: @fa-var-heart-circle; }
.@{fa-css-prefix}-heart-rate:before { content: @fa-var-heart-rate; }
.@{fa-css-prefix}-heart-square:before { content: @fa-var-heart-square; }
.@{fa-css-prefix}-heartbeat:before { content: @fa-var-heartbeat; }
.@{fa-css-prefix}-helicopter:before { content: @fa-var-helicopter; }
.@{fa-css-prefix}-helmet-battle:before { content: @fa-var-helmet-battle; }
.@{fa-css-prefix}-hexagon:before { content: @fa-var-hexagon; }
.@{fa-css-prefix}-highlighter:before { content: @fa-var-highlighter; }
.@{fa-css-prefix}-hiking:before { content: @fa-var-hiking; }
.@{fa-css-prefix}-hippo:before { content: @fa-var-hippo; }
.@{fa-css-prefix}-hips:before { content: @fa-var-hips; }
.@{fa-css-prefix}-hire-a-helper:before { content: @fa-var-hire-a-helper; }
.@{fa-css-prefix}-history:before { content: @fa-var-history; }
.@{fa-css-prefix}-hockey-mask:before { content: @fa-var-hockey-mask; }
.@{fa-css-prefix}-hockey-puck:before { content: @fa-var-hockey-puck; }
.@{fa-css-prefix}-hockey-sticks:before { content: @fa-var-hockey-sticks; }
.@{fa-css-prefix}-holly-berry:before { content: @fa-var-holly-berry; }
.@{fa-css-prefix}-home:before { content: @fa-var-home; }
.@{fa-css-prefix}-home-alt:before { content: @fa-var-home-alt; }
.@{fa-css-prefix}-home-heart:before { content: @fa-var-home-heart; }
.@{fa-css-prefix}-home-lg:before { content: @fa-var-home-lg; }
.@{fa-css-prefix}-home-lg-alt:before { content: @fa-var-home-lg-alt; }
.@{fa-css-prefix}-hood-cloak:before { content: @fa-var-hood-cloak; }
.@{fa-css-prefix}-hooli:before { content: @fa-var-hooli; }
.@{fa-css-prefix}-horizontal-rule:before { content: @fa-var-horizontal-rule; }
.@{fa-css-prefix}-hornbill:before { content: @fa-var-hornbill; }
.@{fa-css-prefix}-horse:before { content: @fa-var-horse; }
.@{fa-css-prefix}-horse-head:before { content: @fa-var-horse-head; }
.@{fa-css-prefix}-hospital:before { content: @fa-var-hospital; }
.@{fa-css-prefix}-hospital-alt:before { content: @fa-var-hospital-alt; }
.@{fa-css-prefix}-hospital-symbol:before { content: @fa-var-hospital-symbol; }
.@{fa-css-prefix}-hospital-user:before { content: @fa-var-hospital-user; }
.@{fa-css-prefix}-hospitals:before { content: @fa-var-hospitals; }
.@{fa-css-prefix}-hot-tub:before { content: @fa-var-hot-tub; }
.@{fa-css-prefix}-hotdog:before { content: @fa-var-hotdog; }
.@{fa-css-prefix}-hotel:before { content: @fa-var-hotel; }
.@{fa-css-prefix}-hotjar:before { content: @fa-var-hotjar; }
.@{fa-css-prefix}-hourglass:before { content: @fa-var-hourglass; }
.@{fa-css-prefix}-hourglass-end:before { content: @fa-var-hourglass-end; }
.@{fa-css-prefix}-hourglass-half:before { content: @fa-var-hourglass-half; }
.@{fa-css-prefix}-hourglass-start:before { content: @fa-var-hourglass-start; }
.@{fa-css-prefix}-house-damage:before { content: @fa-var-house-damage; }
.@{fa-css-prefix}-house-flood:before { content: @fa-var-house-flood; }
.@{fa-css-prefix}-houzz:before { content: @fa-var-houzz; }
.@{fa-css-prefix}-hryvnia:before { content: @fa-var-hryvnia; }
.@{fa-css-prefix}-html5:before { content: @fa-var-html5; }
.@{fa-css-prefix}-hubspot:before { content: @fa-var-hubspot; }
.@{fa-css-prefix}-humidity:before { content: @fa-var-humidity; }
.@{fa-css-prefix}-hurricane:before { content: @fa-var-hurricane; }
.@{fa-css-prefix}-i-cursor:before { content: @fa-var-i-cursor; }
.@{fa-css-prefix}-ice-cream:before { content: @fa-var-ice-cream; }
.@{fa-css-prefix}-ice-skate:before { content: @fa-var-ice-skate; }
.@{fa-css-prefix}-icicles:before { content: @fa-var-icicles; }
.@{fa-css-prefix}-icons:before { content: @fa-var-icons; }
.@{fa-css-prefix}-icons-alt:before { content: @fa-var-icons-alt; }
.@{fa-css-prefix}-id-badge:before { content: @fa-var-id-badge; }
.@{fa-css-prefix}-id-card:before { content: @fa-var-id-card; }
.@{fa-css-prefix}-id-card-alt:before { content: @fa-var-id-card-alt; }
.@{fa-css-prefix}-igloo:before { content: @fa-var-igloo; }
.@{fa-css-prefix}-image:before { content: @fa-var-image; }
.@{fa-css-prefix}-images:before { content: @fa-var-images; }
.@{fa-css-prefix}-imdb:before { content: @fa-var-imdb; }
.@{fa-css-prefix}-inbox:before { content: @fa-var-inbox; }
.@{fa-css-prefix}-inbox-in:before { content: @fa-var-inbox-in; }
.@{fa-css-prefix}-inbox-out:before { content: @fa-var-inbox-out; }
.@{fa-css-prefix}-indent:before { content: @fa-var-indent; }
.@{fa-css-prefix}-industry:before { content: @fa-var-industry; }
.@{fa-css-prefix}-industry-alt:before { content: @fa-var-industry-alt; }
.@{fa-css-prefix}-infinity:before { content: @fa-var-infinity; }
.@{fa-css-prefix}-info:before { content: @fa-var-info; }
.@{fa-css-prefix}-info-circle:before { content: @fa-var-info-circle; }
.@{fa-css-prefix}-info-square:before { content: @fa-var-info-square; }
.@{fa-css-prefix}-inhaler:before { content: @fa-var-inhaler; }
.@{fa-css-prefix}-instagram:before { content: @fa-var-instagram; }
.@{fa-css-prefix}-integral:before { content: @fa-var-integral; }
.@{fa-css-prefix}-intercom:before { content: @fa-var-intercom; }
.@{fa-css-prefix}-internet-explorer:before { content: @fa-var-internet-explorer; }
.@{fa-css-prefix}-intersection:before { content: @fa-var-intersection; }
.@{fa-css-prefix}-inventory:before { content: @fa-var-inventory; }
.@{fa-css-prefix}-invision:before { content: @fa-var-invision; }
.@{fa-css-prefix}-ioxhost:before { content: @fa-var-ioxhost; }
.@{fa-css-prefix}-island-tropical:before { content: @fa-var-island-tropical; }
.@{fa-css-prefix}-italic:before { content: @fa-var-italic; }
.@{fa-css-prefix}-itch-io:before { content: @fa-var-itch-io; }
.@{fa-css-prefix}-itunes:before { content: @fa-var-itunes; }
.@{fa-css-prefix}-itunes-note:before { content: @fa-var-itunes-note; }
.@{fa-css-prefix}-jack-o-lantern:before { content: @fa-var-jack-o-lantern; }
.@{fa-css-prefix}-java:before { content: @fa-var-java; }
.@{fa-css-prefix}-jedi:before { content: @fa-var-jedi; }
.@{fa-css-prefix}-jedi-order:before { content: @fa-var-jedi-order; }
.@{fa-css-prefix}-jenkins:before { content: @fa-var-jenkins; }
.@{fa-css-prefix}-jira:before { content: @fa-var-jira; }
.@{fa-css-prefix}-joget:before { content: @fa-var-joget; }
.@{fa-css-prefix}-joint:before { content: @fa-var-joint; }
.@{fa-css-prefix}-joomla:before { content: @fa-var-joomla; }
.@{fa-css-prefix}-journal-whills:before { content: @fa-var-journal-whills; }
.@{fa-css-prefix}-js:before { content: @fa-var-js; }
.@{fa-css-prefix}-js-square:before { content: @fa-var-js-square; }
.@{fa-css-prefix}-jsfiddle:before { content: @fa-var-jsfiddle; }
.@{fa-css-prefix}-kaaba:before { content: @fa-var-kaaba; }
.@{fa-css-prefix}-kaggle:before { content: @fa-var-kaggle; }
.@{fa-css-prefix}-kerning:before { content: @fa-var-kerning; }
.@{fa-css-prefix}-key:before { content: @fa-var-key; }
.@{fa-css-prefix}-key-skeleton:before { content: @fa-var-key-skeleton; }
.@{fa-css-prefix}-keybase:before { content: @fa-var-keybase; }
.@{fa-css-prefix}-keyboard:before { content: @fa-var-keyboard; }
.@{fa-css-prefix}-keycdn:before { content: @fa-var-keycdn; }
.@{fa-css-prefix}-keynote:before { content: @fa-var-keynote; }
.@{fa-css-prefix}-khanda:before { content: @fa-var-khanda; }
.@{fa-css-prefix}-kickstarter:before { content: @fa-var-kickstarter; }
.@{fa-css-prefix}-kickstarter-k:before { content: @fa-var-kickstarter-k; }
.@{fa-css-prefix}-kidneys:before { content: @fa-var-kidneys; }
.@{fa-css-prefix}-kiss:before { content: @fa-var-kiss; }
.@{fa-css-prefix}-kiss-beam:before { content: @fa-var-kiss-beam; }
.@{fa-css-prefix}-kiss-wink-heart:before { content: @fa-var-kiss-wink-heart; }
.@{fa-css-prefix}-kite:before { content: @fa-var-kite; }
.@{fa-css-prefix}-kiwi-bird:before { content: @fa-var-kiwi-bird; }
.@{fa-css-prefix}-knife-kitchen:before { content: @fa-var-knife-kitchen; }
.@{fa-css-prefix}-korvue:before { content: @fa-var-korvue; }
.@{fa-css-prefix}-lambda:before { content: @fa-var-lambda; }
.@{fa-css-prefix}-lamp:before { content: @fa-var-lamp; }
.@{fa-css-prefix}-landmark:before { content: @fa-var-landmark; }
.@{fa-css-prefix}-landmark-alt:before { content: @fa-var-landmark-alt; }
.@{fa-css-prefix}-language:before { content: @fa-var-language; }
.@{fa-css-prefix}-laptop:before { content: @fa-var-laptop; }
.@{fa-css-prefix}-laptop-code:before { content: @fa-var-laptop-code; }
.@{fa-css-prefix}-laptop-medical:before { content: @fa-var-laptop-medical; }
.@{fa-css-prefix}-laravel:before { content: @fa-var-laravel; }
.@{fa-css-prefix}-lastfm:before { content: @fa-var-lastfm; }
.@{fa-css-prefix}-lastfm-square:before { content: @fa-var-lastfm-square; }
.@{fa-css-prefix}-laugh:before { content: @fa-var-laugh; }
.@{fa-css-prefix}-laugh-beam:before { content: @fa-var-laugh-beam; }
.@{fa-css-prefix}-laugh-squint:before { content: @fa-var-laugh-squint; }
.@{fa-css-prefix}-laugh-wink:before { content: @fa-var-laugh-wink; }
.@{fa-css-prefix}-layer-group:before { content: @fa-var-layer-group; }
.@{fa-css-prefix}-layer-minus:before { content: @fa-var-layer-minus; }
.@{fa-css-prefix}-layer-plus:before { content: @fa-var-layer-plus; }
.@{fa-css-prefix}-leaf:before { content: @fa-var-leaf; }
.@{fa-css-prefix}-leaf-heart:before { content: @fa-var-leaf-heart; }
.@{fa-css-prefix}-leaf-maple:before { content: @fa-var-leaf-maple; }
.@{fa-css-prefix}-leaf-oak:before { content: @fa-var-leaf-oak; }
.@{fa-css-prefix}-leanpub:before { content: @fa-var-leanpub; }
.@{fa-css-prefix}-lemon:before { content: @fa-var-lemon; }
.@{fa-css-prefix}-less:before { content: @fa-var-less; }
.@{fa-css-prefix}-less-than:before { content: @fa-var-less-than; }
.@{fa-css-prefix}-less-than-equal:before { content: @fa-var-less-than-equal; }
.@{fa-css-prefix}-level-down:before { content: @fa-var-level-down; }
.@{fa-css-prefix}-level-down-alt:before { content: @fa-var-level-down-alt; }
.@{fa-css-prefix}-level-up:before { content: @fa-var-level-up; }
.@{fa-css-prefix}-level-up-alt:before { content: @fa-var-level-up-alt; }
.@{fa-css-prefix}-life-ring:before { content: @fa-var-life-ring; }
.@{fa-css-prefix}-lightbulb:before { content: @fa-var-lightbulb; }
.@{fa-css-prefix}-lightbulb-dollar:before { content: @fa-var-lightbulb-dollar; }
.@{fa-css-prefix}-lightbulb-exclamation:before { content: @fa-var-lightbulb-exclamation; }
.@{fa-css-prefix}-lightbulb-on:before { content: @fa-var-lightbulb-on; }
.@{fa-css-prefix}-lightbulb-slash:before { content: @fa-var-lightbulb-slash; }
.@{fa-css-prefix}-lights-holiday:before { content: @fa-var-lights-holiday; }
.@{fa-css-prefix}-line:before { content: @fa-var-line; }
.@{fa-css-prefix}-line-columns:before { content: @fa-var-line-columns; }
.@{fa-css-prefix}-line-height:before { content: @fa-var-line-height; }
.@{fa-css-prefix}-link:before { content: @fa-var-link; }
.@{fa-css-prefix}-linkedin:before { content: @fa-var-linkedin; }
.@{fa-css-prefix}-linkedin-in:before { content: @fa-var-linkedin-in; }
.@{fa-css-prefix}-linode:before { content: @fa-var-linode; }
.@{fa-css-prefix}-linux:before { content: @fa-var-linux; }
.@{fa-css-prefix}-lips:before { content: @fa-var-lips; }
.@{fa-css-prefix}-lira-sign:before { content: @fa-var-lira-sign; }
.@{fa-css-prefix}-list:before { content: @fa-var-list; }
.@{fa-css-prefix}-list-alt:before { content: @fa-var-list-alt; }
.@{fa-css-prefix}-list-ol:before { content: @fa-var-list-ol; }
.@{fa-css-prefix}-list-ul:before { content: @fa-var-list-ul; }
.@{fa-css-prefix}-location:before { content: @fa-var-location; }
.@{fa-css-prefix}-location-arrow:before { content: @fa-var-location-arrow; }
.@{fa-css-prefix}-location-circle:before { content: @fa-var-location-circle; }
.@{fa-css-prefix}-location-slash:before { content: @fa-var-location-slash; }
.@{fa-css-prefix}-lock:before { content: @fa-var-lock; }
.@{fa-css-prefix}-lock-alt:before { content: @fa-var-lock-alt; }
.@{fa-css-prefix}-lock-open:before { content: @fa-var-lock-open; }
.@{fa-css-prefix}-lock-open-alt:before { content: @fa-var-lock-open-alt; }
.@{fa-css-prefix}-long-arrow-alt-down:before { content: @fa-var-long-arrow-alt-down; }
.@{fa-css-prefix}-long-arrow-alt-left:before { content: @fa-var-long-arrow-alt-left; }
.@{fa-css-prefix}-long-arrow-alt-right:before { content: @fa-var-long-arrow-alt-right; }
.@{fa-css-prefix}-long-arrow-alt-up:before { content: @fa-var-long-arrow-alt-up; }
.@{fa-css-prefix}-long-arrow-down:before { content: @fa-var-long-arrow-down; }
.@{fa-css-prefix}-long-arrow-left:before { content: @fa-var-long-arrow-left; }
.@{fa-css-prefix}-long-arrow-right:before { content: @fa-var-long-arrow-right; }
.@{fa-css-prefix}-long-arrow-up:before { content: @fa-var-long-arrow-up; }
.@{fa-css-prefix}-loveseat:before { content: @fa-var-loveseat; }
.@{fa-css-prefix}-low-vision:before { content: @fa-var-low-vision; }
.@{fa-css-prefix}-luchador:before { content: @fa-var-luchador; }
.@{fa-css-prefix}-luggage-cart:before { content: @fa-var-luggage-cart; }
.@{fa-css-prefix}-lungs:before { content: @fa-var-lungs; }
.@{fa-css-prefix}-lyft:before { content: @fa-var-lyft; }
.@{fa-css-prefix}-mace:before { content: @fa-var-mace; }
.@{fa-css-prefix}-magento:before { content: @fa-var-magento; }
.@{fa-css-prefix}-magic:before { content: @fa-var-magic; }
.@{fa-css-prefix}-magnet:before { content: @fa-var-magnet; }
.@{fa-css-prefix}-mail-bulk:before { content: @fa-var-mail-bulk; }
.@{fa-css-prefix}-mailbox:before { content: @fa-var-mailbox; }
.@{fa-css-prefix}-mailchimp:before { content: @fa-var-mailchimp; }
.@{fa-css-prefix}-male:before { content: @fa-var-male; }
.@{fa-css-prefix}-mandalorian:before { content: @fa-var-mandalorian; }
.@{fa-css-prefix}-mandolin:before { content: @fa-var-mandolin; }
.@{fa-css-prefix}-map:before { content: @fa-var-map; }
.@{fa-css-prefix}-map-marked:before { content: @fa-var-map-marked; }
.@{fa-css-prefix}-map-marked-alt:before { content: @fa-var-map-marked-alt; }
.@{fa-css-prefix}-map-marker:before { content: @fa-var-map-marker; }
.@{fa-css-prefix}-map-marker-alt:before { content: @fa-var-map-marker-alt; }
.@{fa-css-prefix}-map-marker-alt-slash:before { content: @fa-var-map-marker-alt-slash; }
.@{fa-css-prefix}-map-marker-check:before { content: @fa-var-map-marker-check; }
.@{fa-css-prefix}-map-marker-edit:before { content: @fa-var-map-marker-edit; }
.@{fa-css-prefix}-map-marker-exclamation:before { content: @fa-var-map-marker-exclamation; }
.@{fa-css-prefix}-map-marker-minus:before { content: @fa-var-map-marker-minus; }
.@{fa-css-prefix}-map-marker-plus:before { content: @fa-var-map-marker-plus; }
.@{fa-css-prefix}-map-marker-question:before { content: @fa-var-map-marker-question; }
.@{fa-css-prefix}-map-marker-slash:before { content: @fa-var-map-marker-slash; }
.@{fa-css-prefix}-map-marker-smile:before { content: @fa-var-map-marker-smile; }
.@{fa-css-prefix}-map-marker-times:before { content: @fa-var-map-marker-times; }
.@{fa-css-prefix}-map-pin:before { content: @fa-var-map-pin; }
.@{fa-css-prefix}-map-signs:before { content: @fa-var-map-signs; }
.@{fa-css-prefix}-markdown:before { content: @fa-var-markdown; }
.@{fa-css-prefix}-marker:before { content: @fa-var-marker; }
.@{fa-css-prefix}-mars:before { content: @fa-var-mars; }
.@{fa-css-prefix}-mars-double:before { content: @fa-var-mars-double; }
.@{fa-css-prefix}-mars-stroke:before { content: @fa-var-mars-stroke; }
.@{fa-css-prefix}-mars-stroke-h:before { content: @fa-var-mars-stroke-h; }
.@{fa-css-prefix}-mars-stroke-v:before { content: @fa-var-mars-stroke-v; }
.@{fa-css-prefix}-mask:before { content: @fa-var-mask; }
.@{fa-css-prefix}-mastodon:before { content: @fa-var-mastodon; }
.@{fa-css-prefix}-maxcdn:before { content: @fa-var-maxcdn; }
.@{fa-css-prefix}-meat:before { content: @fa-var-meat; }
.@{fa-css-prefix}-medal:before { content: @fa-var-medal; }
.@{fa-css-prefix}-medapps:before { content: @fa-var-medapps; }
.@{fa-css-prefix}-medium:before { content: @fa-var-medium; }
.@{fa-css-prefix}-medium-m:before { content: @fa-var-medium-m; }
.@{fa-css-prefix}-medkit:before { content: @fa-var-medkit; }
.@{fa-css-prefix}-medrt:before { content: @fa-var-medrt; }
.@{fa-css-prefix}-meetup:before { content: @fa-var-meetup; }
.@{fa-css-prefix}-megaphone:before { content: @fa-var-megaphone; }
.@{fa-css-prefix}-megaport:before { content: @fa-var-megaport; }
.@{fa-css-prefix}-meh:before { content: @fa-var-meh; }
.@{fa-css-prefix}-meh-blank:before { content: @fa-var-meh-blank; }
.@{fa-css-prefix}-meh-rolling-eyes:before { content: @fa-var-meh-rolling-eyes; }
.@{fa-css-prefix}-memory:before { content: @fa-var-memory; }
.@{fa-css-prefix}-mendeley:before { content: @fa-var-mendeley; }
.@{fa-css-prefix}-menorah:before { content: @fa-var-menorah; }
.@{fa-css-prefix}-mercury:before { content: @fa-var-mercury; }
.@{fa-css-prefix}-meteor:before { content: @fa-var-meteor; }
.@{fa-css-prefix}-microchip:before { content: @fa-var-microchip; }
.@{fa-css-prefix}-microphone:before { content: @fa-var-microphone; }
.@{fa-css-prefix}-microphone-alt:before { content: @fa-var-microphone-alt; }
.@{fa-css-prefix}-microphone-alt-slash:before { content: @fa-var-microphone-alt-slash; }
.@{fa-css-prefix}-microphone-slash:before { content: @fa-var-microphone-slash; }
.@{fa-css-prefix}-microscope:before { content: @fa-var-microscope; }
.@{fa-css-prefix}-microsoft:before { content: @fa-var-microsoft; }
.@{fa-css-prefix}-mind-share:before { content: @fa-var-mind-share; }
.@{fa-css-prefix}-minus:before { content: @fa-var-minus; }
.@{fa-css-prefix}-minus-circle:before { content: @fa-var-minus-circle; }
.@{fa-css-prefix}-minus-hexagon:before { content: @fa-var-minus-hexagon; }
.@{fa-css-prefix}-minus-octagon:before { content: @fa-var-minus-octagon; }
.@{fa-css-prefix}-minus-square:before { content: @fa-var-minus-square; }
.@{fa-css-prefix}-mistletoe:before { content: @fa-var-mistletoe; }
.@{fa-css-prefix}-mitten:before { content: @fa-var-mitten; }
.@{fa-css-prefix}-mix:before { content: @fa-var-mix; }
.@{fa-css-prefix}-mixcloud:before { content: @fa-var-mixcloud; }
.@{fa-css-prefix}-mizuni:before { content: @fa-var-mizuni; }
.@{fa-css-prefix}-mobile:before { content: @fa-var-mobile; }
.@{fa-css-prefix}-mobile-alt:before { content: @fa-var-mobile-alt; }
.@{fa-css-prefix}-mobile-android:before { content: @fa-var-mobile-android; }
.@{fa-css-prefix}-mobile-android-alt:before { content: @fa-var-mobile-android-alt; }
.@{fa-css-prefix}-modx:before { content: @fa-var-modx; }
.@{fa-css-prefix}-monero:before { content: @fa-var-monero; }
.@{fa-css-prefix}-money-bill:before { content: @fa-var-money-bill; }
.@{fa-css-prefix}-money-bill-alt:before { content: @fa-var-money-bill-alt; }
.@{fa-css-prefix}-money-bill-wave:before { content: @fa-var-money-bill-wave; }
.@{fa-css-prefix}-money-bill-wave-alt:before { content: @fa-var-money-bill-wave-alt; }
.@{fa-css-prefix}-money-check:before { content: @fa-var-money-check; }
.@{fa-css-prefix}-money-check-alt:before { content: @fa-var-money-check-alt; }
.@{fa-css-prefix}-money-check-edit:before { content: @fa-var-money-check-edit; }
.@{fa-css-prefix}-money-check-edit-alt:before { content: @fa-var-money-check-edit-alt; }
.@{fa-css-prefix}-monitor-heart-rate:before { content: @fa-var-monitor-heart-rate; }
.@{fa-css-prefix}-monkey:before { content: @fa-var-monkey; }
.@{fa-css-prefix}-monument:before { content: @fa-var-monument; }
.@{fa-css-prefix}-moon:before { content: @fa-var-moon; }
.@{fa-css-prefix}-moon-cloud:before { content: @fa-var-moon-cloud; }
.@{fa-css-prefix}-moon-stars:before { content: @fa-var-moon-stars; }
.@{fa-css-prefix}-mortar-pestle:before { content: @fa-var-mortar-pestle; }
.@{fa-css-prefix}-mosque:before { content: @fa-var-mosque; }
.@{fa-css-prefix}-motorcycle:before { content: @fa-var-motorcycle; }
.@{fa-css-prefix}-mountain:before { content: @fa-var-mountain; }
.@{fa-css-prefix}-mountains:before { content: @fa-var-mountains; }
.@{fa-css-prefix}-mouse-pointer:before { content: @fa-var-mouse-pointer; }
.@{fa-css-prefix}-mug:before { content: @fa-var-mug; }
.@{fa-css-prefix}-mug-hot:before { content: @fa-var-mug-hot; }
.@{fa-css-prefix}-mug-marshmallows:before { content: @fa-var-mug-marshmallows; }
.@{fa-css-prefix}-mug-tea:before { content: @fa-var-mug-tea; }
.@{fa-css-prefix}-music:before { content: @fa-var-music; }
.@{fa-css-prefix}-napster:before { content: @fa-var-napster; }
.@{fa-css-prefix}-narwhal:before { content: @fa-var-narwhal; }
.@{fa-css-prefix}-neos:before { content: @fa-var-neos; }
.@{fa-css-prefix}-network-wired:before { content: @fa-var-network-wired; }
.@{fa-css-prefix}-neuter:before { content: @fa-var-neuter; }
.@{fa-css-prefix}-newspaper:before { content: @fa-var-newspaper; }
.@{fa-css-prefix}-nimblr:before { content: @fa-var-nimblr; }
.@{fa-css-prefix}-node:before { content: @fa-var-node; }
.@{fa-css-prefix}-node-js:before { content: @fa-var-node-js; }
.@{fa-css-prefix}-not-equal:before { content: @fa-var-not-equal; }
.@{fa-css-prefix}-notes-medical:before { content: @fa-var-notes-medical; }
.@{fa-css-prefix}-npm:before { content: @fa-var-npm; }
.@{fa-css-prefix}-ns8:before { content: @fa-var-ns8; }
.@{fa-css-prefix}-nutritionix:before { content: @fa-var-nutritionix; }
.@{fa-css-prefix}-object-group:before { content: @fa-var-object-group; }
.@{fa-css-prefix}-object-ungroup:before { content: @fa-var-object-ungroup; }
.@{fa-css-prefix}-octagon:before { content: @fa-var-octagon; }
.@{fa-css-prefix}-odnoklassniki:before { content: @fa-var-odnoklassniki; }
.@{fa-css-prefix}-odnoklassniki-square:before { content: @fa-var-odnoklassniki-square; }
.@{fa-css-prefix}-oil-can:before { content: @fa-var-oil-can; }
.@{fa-css-prefix}-oil-temp:before { content: @fa-var-oil-temp; }
.@{fa-css-prefix}-old-republic:before { content: @fa-var-old-republic; }
.@{fa-css-prefix}-om:before { content: @fa-var-om; }
.@{fa-css-prefix}-omega:before { content: @fa-var-omega; }
.@{fa-css-prefix}-opencart:before { content: @fa-var-opencart; }
.@{fa-css-prefix}-openid:before { content: @fa-var-openid; }
.@{fa-css-prefix}-opera:before { content: @fa-var-opera; }
.@{fa-css-prefix}-optin-monster:before { content: @fa-var-optin-monster; }
.@{fa-css-prefix}-ornament:before { content: @fa-var-ornament; }
.@{fa-css-prefix}-osi:before { content: @fa-var-osi; }
.@{fa-css-prefix}-otter:before { content: @fa-var-otter; }
.@{fa-css-prefix}-outdent:before { content: @fa-var-outdent; }
.@{fa-css-prefix}-overline:before { content: @fa-var-overline; }
.@{fa-css-prefix}-page-break:before { content: @fa-var-page-break; }
.@{fa-css-prefix}-page4:before { content: @fa-var-page4; }
.@{fa-css-prefix}-pagelines:before { content: @fa-var-pagelines; }
.@{fa-css-prefix}-pager:before { content: @fa-var-pager; }
.@{fa-css-prefix}-paint-brush:before { content: @fa-var-paint-brush; }
.@{fa-css-prefix}-paint-brush-alt:before { content: @fa-var-paint-brush-alt; }
.@{fa-css-prefix}-paint-roller:before { content: @fa-var-paint-roller; }
.@{fa-css-prefix}-palette:before { content: @fa-var-palette; }
.@{fa-css-prefix}-palfed:before { content: @fa-var-palfed; }
.@{fa-css-prefix}-pallet:before { content: @fa-var-pallet; }
.@{fa-css-prefix}-pallet-alt:before { content: @fa-var-pallet-alt; }
.@{fa-css-prefix}-paper-plane:before { content: @fa-var-paper-plane; }
.@{fa-css-prefix}-paperclip:before { content: @fa-var-paperclip; }
.@{fa-css-prefix}-parachute-box:before { content: @fa-var-parachute-box; }
.@{fa-css-prefix}-paragraph:before { content: @fa-var-paragraph; }
.@{fa-css-prefix}-paragraph-rtl:before { content: @fa-var-paragraph-rtl; }
.@{fa-css-prefix}-parking:before { content: @fa-var-parking; }
.@{fa-css-prefix}-parking-circle:before { content: @fa-var-parking-circle; }
.@{fa-css-prefix}-parking-circle-slash:before { content: @fa-var-parking-circle-slash; }
.@{fa-css-prefix}-parking-slash:before { content: @fa-var-parking-slash; }
.@{fa-css-prefix}-passport:before { content: @fa-var-passport; }
.@{fa-css-prefix}-pastafarianism:before { content: @fa-var-pastafarianism; }
.@{fa-css-prefix}-paste:before { content: @fa-var-paste; }
.@{fa-css-prefix}-patreon:before { content: @fa-var-patreon; }
.@{fa-css-prefix}-pause:before { content: @fa-var-pause; }
.@{fa-css-prefix}-pause-circle:before { content: @fa-var-pause-circle; }
.@{fa-css-prefix}-paw:before { content: @fa-var-paw; }
.@{fa-css-prefix}-paw-alt:before { content: @fa-var-paw-alt; }
.@{fa-css-prefix}-paw-claws:before { content: @fa-var-paw-claws; }
.@{fa-css-prefix}-paypal:before { content: @fa-var-paypal; }
.@{fa-css-prefix}-peace:before { content: @fa-var-peace; }
.@{fa-css-prefix}-pegasus:before { content: @fa-var-pegasus; }
.@{fa-css-prefix}-pen:before { content: @fa-var-pen; }
.@{fa-css-prefix}-pen-alt:before { content: @fa-var-pen-alt; }
.@{fa-css-prefix}-pen-fancy:before { content: @fa-var-pen-fancy; }
.@{fa-css-prefix}-pen-nib:before { content: @fa-var-pen-nib; }
.@{fa-css-prefix}-pen-square:before { content: @fa-var-pen-square; }
.@{fa-css-prefix}-pencil:before { content: @fa-var-pencil; }
.@{fa-css-prefix}-pencil-alt:before { content: @fa-var-pencil-alt; }
.@{fa-css-prefix}-pencil-paintbrush:before { content: @fa-var-pencil-paintbrush; }
.@{fa-css-prefix}-pencil-ruler:before { content: @fa-var-pencil-ruler; }
.@{fa-css-prefix}-pennant:before { content: @fa-var-pennant; }
.@{fa-css-prefix}-penny-arcade:before { content: @fa-var-penny-arcade; }
.@{fa-css-prefix}-people-carry:before { content: @fa-var-people-carry; }
.@{fa-css-prefix}-pepper-hot:before { content: @fa-var-pepper-hot; }
.@{fa-css-prefix}-percent:before { content: @fa-var-percent; }
.@{fa-css-prefix}-percentage:before { content: @fa-var-percentage; }
.@{fa-css-prefix}-periscope:before { content: @fa-var-periscope; }
.@{fa-css-prefix}-person-booth:before { content: @fa-var-person-booth; }
.@{fa-css-prefix}-person-carry:before { content: @fa-var-person-carry; }
.@{fa-css-prefix}-person-dolly:before { content: @fa-var-person-dolly; }
.@{fa-css-prefix}-person-dolly-empty:before { content: @fa-var-person-dolly-empty; }
.@{fa-css-prefix}-person-sign:before { content: @fa-var-person-sign; }
.@{fa-css-prefix}-phabricator:before { content: @fa-var-phabricator; }
.@{fa-css-prefix}-phoenix-framework:before { content: @fa-var-phoenix-framework; }
.@{fa-css-prefix}-phoenix-squadron:before { content: @fa-var-phoenix-squadron; }
.@{fa-css-prefix}-phone:before { content: @fa-var-phone; }
.@{fa-css-prefix}-phone-alt:before { content: @fa-var-phone-alt; }
.@{fa-css-prefix}-phone-laptop:before { content: @fa-var-phone-laptop; }
.@{fa-css-prefix}-phone-office:before { content: @fa-var-phone-office; }
.@{fa-css-prefix}-phone-plus:before { content: @fa-var-phone-plus; }
.@{fa-css-prefix}-phone-slash:before { content: @fa-var-phone-slash; }
.@{fa-css-prefix}-phone-square:before { content: @fa-var-phone-square; }
.@{fa-css-prefix}-phone-square-alt:before { content: @fa-var-phone-square-alt; }
.@{fa-css-prefix}-phone-volume:before { content: @fa-var-phone-volume; }
.@{fa-css-prefix}-photo-video:before { content: @fa-var-photo-video; }
.@{fa-css-prefix}-php:before { content: @fa-var-php; }
.@{fa-css-prefix}-pi:before { content: @fa-var-pi; }
.@{fa-css-prefix}-pie:before { content: @fa-var-pie; }
.@{fa-css-prefix}-pied-piper:before { content: @fa-var-pied-piper; }
.@{fa-css-prefix}-pied-piper-alt:before { content: @fa-var-pied-piper-alt; }
.@{fa-css-prefix}-pied-piper-hat:before { content: @fa-var-pied-piper-hat; }
.@{fa-css-prefix}-pied-piper-pp:before { content: @fa-var-pied-piper-pp; }
.@{fa-css-prefix}-pig:before { content: @fa-var-pig; }
.@{fa-css-prefix}-piggy-bank:before { content: @fa-var-piggy-bank; }
.@{fa-css-prefix}-pills:before { content: @fa-var-pills; }
.@{fa-css-prefix}-pinterest:before { content: @fa-var-pinterest; }
.@{fa-css-prefix}-pinterest-p:before { content: @fa-var-pinterest-p; }
.@{fa-css-prefix}-pinterest-square:before { content: @fa-var-pinterest-square; }
.@{fa-css-prefix}-pizza:before { content: @fa-var-pizza; }
.@{fa-css-prefix}-pizza-slice:before { content: @fa-var-pizza-slice; }
.@{fa-css-prefix}-place-of-worship:before { content: @fa-var-place-of-worship; }
.@{fa-css-prefix}-plane:before { content: @fa-var-plane; }
.@{fa-css-prefix}-plane-alt:before { content: @fa-var-plane-alt; }
.@{fa-css-prefix}-plane-arrival:before { content: @fa-var-plane-arrival; }
.@{fa-css-prefix}-plane-departure:before { content: @fa-var-plane-departure; }
.@{fa-css-prefix}-play:before { content: @fa-var-play; }
.@{fa-css-prefix}-play-circle:before { content: @fa-var-play-circle; }
.@{fa-css-prefix}-playstation:before { content: @fa-var-playstation; }
.@{fa-css-prefix}-plug:before { content: @fa-var-plug; }
.@{fa-css-prefix}-plus:before { content: @fa-var-plus; }
.@{fa-css-prefix}-plus-circle:before { content: @fa-var-plus-circle; }
.@{fa-css-prefix}-plus-hexagon:before { content: @fa-var-plus-hexagon; }
.@{fa-css-prefix}-plus-octagon:before { content: @fa-var-plus-octagon; }
.@{fa-css-prefix}-plus-square:before { content: @fa-var-plus-square; }
.@{fa-css-prefix}-podcast:before { content: @fa-var-podcast; }
.@{fa-css-prefix}-podium:before { content: @fa-var-podium; }
.@{fa-css-prefix}-podium-star:before { content: @fa-var-podium-star; }
.@{fa-css-prefix}-poll:before { content: @fa-var-poll; }
.@{fa-css-prefix}-poll-h:before { content: @fa-var-poll-h; }
.@{fa-css-prefix}-poll-people:before { content: @fa-var-poll-people; }
.@{fa-css-prefix}-poo:before { content: @fa-var-poo; }
.@{fa-css-prefix}-poo-storm:before { content: @fa-var-poo-storm; }
.@{fa-css-prefix}-poop:before { content: @fa-var-poop; }
.@{fa-css-prefix}-popcorn:before { content: @fa-var-popcorn; }
.@{fa-css-prefix}-portrait:before { content: @fa-var-portrait; }
.@{fa-css-prefix}-pound-sign:before { content: @fa-var-pound-sign; }
.@{fa-css-prefix}-power-off:before { content: @fa-var-power-off; }
.@{fa-css-prefix}-pray:before { content: @fa-var-pray; }
.@{fa-css-prefix}-praying-hands:before { content: @fa-var-praying-hands; }
.@{fa-css-prefix}-prescription:before { content: @fa-var-prescription; }
.@{fa-css-prefix}-prescription-bottle:before { content: @fa-var-prescription-bottle; }
.@{fa-css-prefix}-prescription-bottle-alt:before { content: @fa-var-prescription-bottle-alt; }
.@{fa-css-prefix}-presentation:before { content: @fa-var-presentation; }
.@{fa-css-prefix}-print:before { content: @fa-var-print; }
.@{fa-css-prefix}-print-search:before { content: @fa-var-print-search; }
.@{fa-css-prefix}-print-slash:before { content: @fa-var-print-slash; }
.@{fa-css-prefix}-procedures:before { content: @fa-var-procedures; }
.@{fa-css-prefix}-product-hunt:before { content: @fa-var-product-hunt; }
.@{fa-css-prefix}-project-diagram:before { content: @fa-var-project-diagram; }
.@{fa-css-prefix}-pumpkin:before { content: @fa-var-pumpkin; }
.@{fa-css-prefix}-pushed:before { content: @fa-var-pushed; }
.@{fa-css-prefix}-puzzle-piece:before { content: @fa-var-puzzle-piece; }
.@{fa-css-prefix}-python:before { content: @fa-var-python; }
.@{fa-css-prefix}-qq:before { content: @fa-var-qq; }
.@{fa-css-prefix}-qrcode:before { content: @fa-var-qrcode; }
.@{fa-css-prefix}-question:before { content: @fa-var-question; }
.@{fa-css-prefix}-question-circle:before { content: @fa-var-question-circle; }
.@{fa-css-prefix}-question-square:before { content: @fa-var-question-square; }
.@{fa-css-prefix}-quidditch:before { content: @fa-var-quidditch; }
.@{fa-css-prefix}-quinscape:before { content: @fa-var-quinscape; }
.@{fa-css-prefix}-quora:before { content: @fa-var-quora; }
.@{fa-css-prefix}-quote-left:before { content: @fa-var-quote-left; }
.@{fa-css-prefix}-quote-right:before { content: @fa-var-quote-right; }
.@{fa-css-prefix}-quran:before { content: @fa-var-quran; }
.@{fa-css-prefix}-r-project:before { content: @fa-var-r-project; }
.@{fa-css-prefix}-rabbit:before { content: @fa-var-rabbit; }
.@{fa-css-prefix}-rabbit-fast:before { content: @fa-var-rabbit-fast; }
.@{fa-css-prefix}-racquet:before { content: @fa-var-racquet; }
.@{fa-css-prefix}-radiation:before { content: @fa-var-radiation; }
.@{fa-css-prefix}-radiation-alt:before { content: @fa-var-radiation-alt; }
.@{fa-css-prefix}-rainbow:before { content: @fa-var-rainbow; }
.@{fa-css-prefix}-raindrops:before { content: @fa-var-raindrops; }
.@{fa-css-prefix}-ram:before { content: @fa-var-ram; }
.@{fa-css-prefix}-ramp-loading:before { content: @fa-var-ramp-loading; }
.@{fa-css-prefix}-random:before { content: @fa-var-random; }
.@{fa-css-prefix}-raspberry-pi:before { content: @fa-var-raspberry-pi; }
.@{fa-css-prefix}-ravelry:before { content: @fa-var-ravelry; }
.@{fa-css-prefix}-react:before { content: @fa-var-react; }
.@{fa-css-prefix}-reacteurope:before { content: @fa-var-reacteurope; }
.@{fa-css-prefix}-readme:before { content: @fa-var-readme; }
.@{fa-css-prefix}-rebel:before { content: @fa-var-rebel; }
.@{fa-css-prefix}-receipt:before { content: @fa-var-receipt; }
.@{fa-css-prefix}-rectangle-landscape:before { content: @fa-var-rectangle-landscape; }
.@{fa-css-prefix}-rectangle-portrait:before { content: @fa-var-rectangle-portrait; }
.@{fa-css-prefix}-rectangle-wide:before { content: @fa-var-rectangle-wide; }
.@{fa-css-prefix}-recycle:before { content: @fa-var-recycle; }
.@{fa-css-prefix}-red-river:before { content: @fa-var-red-river; }
.@{fa-css-prefix}-reddit:before { content: @fa-var-reddit; }
.@{fa-css-prefix}-reddit-alien:before { content: @fa-var-reddit-alien; }
.@{fa-css-prefix}-reddit-square:before { content: @fa-var-reddit-square; }
.@{fa-css-prefix}-redhat:before { content: @fa-var-redhat; }
.@{fa-css-prefix}-redo:before { content: @fa-var-redo; }
.@{fa-css-prefix}-redo-alt:before { content: @fa-var-redo-alt; }
.@{fa-css-prefix}-registered:before { content: @fa-var-registered; }
.@{fa-css-prefix}-remove-format:before { content: @fa-var-remove-format; }
.@{fa-css-prefix}-renren:before { content: @fa-var-renren; }
.@{fa-css-prefix}-repeat:before { content: @fa-var-repeat; }
.@{fa-css-prefix}-repeat-1:before { content: @fa-var-repeat-1; }
.@{fa-css-prefix}-repeat-1-alt:before { content: @fa-var-repeat-1-alt; }
.@{fa-css-prefix}-repeat-alt:before { content: @fa-var-repeat-alt; }
.@{fa-css-prefix}-reply:before { content: @fa-var-reply; }
.@{fa-css-prefix}-reply-all:before { content: @fa-var-reply-all; }
.@{fa-css-prefix}-replyd:before { content: @fa-var-replyd; }
.@{fa-css-prefix}-republican:before { content: @fa-var-republican; }
.@{fa-css-prefix}-researchgate:before { content: @fa-var-researchgate; }
.@{fa-css-prefix}-resolving:before { content: @fa-var-resolving; }
.@{fa-css-prefix}-restroom:before { content: @fa-var-restroom; }
.@{fa-css-prefix}-retweet:before { content: @fa-var-retweet; }
.@{fa-css-prefix}-retweet-alt:before { content: @fa-var-retweet-alt; }
.@{fa-css-prefix}-rev:before { content: @fa-var-rev; }
.@{fa-css-prefix}-ribbon:before { content: @fa-var-ribbon; }
.@{fa-css-prefix}-ring:before { content: @fa-var-ring; }
.@{fa-css-prefix}-rings-wedding:before { content: @fa-var-rings-wedding; }
.@{fa-css-prefix}-road:before { content: @fa-var-road; }
.@{fa-css-prefix}-robot:before { content: @fa-var-robot; }
.@{fa-css-prefix}-rocket:before { content: @fa-var-rocket; }
.@{fa-css-prefix}-rocketchat:before { content: @fa-var-rocketchat; }
.@{fa-css-prefix}-rockrms:before { content: @fa-var-rockrms; }
.@{fa-css-prefix}-route:before { content: @fa-var-route; }
.@{fa-css-prefix}-route-highway:before { content: @fa-var-route-highway; }
.@{fa-css-prefix}-route-interstate:before { content: @fa-var-route-interstate; }
.@{fa-css-prefix}-rss:before { content: @fa-var-rss; }
.@{fa-css-prefix}-rss-square:before { content: @fa-var-rss-square; }
.@{fa-css-prefix}-ruble-sign:before { content: @fa-var-ruble-sign; }
.@{fa-css-prefix}-ruler:before { content: @fa-var-ruler; }
.@{fa-css-prefix}-ruler-combined:before { content: @fa-var-ruler-combined; }
.@{fa-css-prefix}-ruler-horizontal:before { content: @fa-var-ruler-horizontal; }
.@{fa-css-prefix}-ruler-triangle:before { content: @fa-var-ruler-triangle; }
.@{fa-css-prefix}-ruler-vertical:before { content: @fa-var-ruler-vertical; }
.@{fa-css-prefix}-running:before { content: @fa-var-running; }
.@{fa-css-prefix}-rupee-sign:before { content: @fa-var-rupee-sign; }
.@{fa-css-prefix}-rv:before { content: @fa-var-rv; }
.@{fa-css-prefix}-sack:before { content: @fa-var-sack; }
.@{fa-css-prefix}-sack-dollar:before { content: @fa-var-sack-dollar; }
.@{fa-css-prefix}-sad-cry:before { content: @fa-var-sad-cry; }
.@{fa-css-prefix}-sad-tear:before { content: @fa-var-sad-tear; }
.@{fa-css-prefix}-safari:before { content: @fa-var-safari; }
.@{fa-css-prefix}-salad:before { content: @fa-var-salad; }
.@{fa-css-prefix}-salesforce:before { content: @fa-var-salesforce; }
.@{fa-css-prefix}-sandwich:before { content: @fa-var-sandwich; }
.@{fa-css-prefix}-sass:before { content: @fa-var-sass; }
.@{fa-css-prefix}-satellite:before { content: @fa-var-satellite; }
.@{fa-css-prefix}-satellite-dish:before { content: @fa-var-satellite-dish; }
.@{fa-css-prefix}-sausage:before { content: @fa-var-sausage; }
.@{fa-css-prefix}-save:before { content: @fa-var-save; }
.@{fa-css-prefix}-scalpel:before { content: @fa-var-scalpel; }
.@{fa-css-prefix}-scalpel-path:before { content: @fa-var-scalpel-path; }
.@{fa-css-prefix}-scanner:before { content: @fa-var-scanner; }
.@{fa-css-prefix}-scanner-keyboard:before { content: @fa-var-scanner-keyboard; }
.@{fa-css-prefix}-scanner-touchscreen:before { content: @fa-var-scanner-touchscreen; }
.@{fa-css-prefix}-scarecrow:before { content: @fa-var-scarecrow; }
.@{fa-css-prefix}-scarf:before { content: @fa-var-scarf; }
.@{fa-css-prefix}-schlix:before { content: @fa-var-schlix; }
.@{fa-css-prefix}-school:before { content: @fa-var-school; }
.@{fa-css-prefix}-screwdriver:before { content: @fa-var-screwdriver; }
.@{fa-css-prefix}-scribd:before { content: @fa-var-scribd; }
.@{fa-css-prefix}-scroll:before { content: @fa-var-scroll; }
.@{fa-css-prefix}-scroll-old:before { content: @fa-var-scroll-old; }
.@{fa-css-prefix}-scrubber:before { content: @fa-var-scrubber; }
.@{fa-css-prefix}-scythe:before { content: @fa-var-scythe; }
.@{fa-css-prefix}-sd-card:before { content: @fa-var-sd-card; }
.@{fa-css-prefix}-search:before { content: @fa-var-search; }
.@{fa-css-prefix}-search-dollar:before { content: @fa-var-search-dollar; }
.@{fa-css-prefix}-search-location:before { content: @fa-var-search-location; }
.@{fa-css-prefix}-search-minus:before { content: @fa-var-search-minus; }
.@{fa-css-prefix}-search-plus:before { content: @fa-var-search-plus; }
.@{fa-css-prefix}-searchengin:before { content: @fa-var-searchengin; }
.@{fa-css-prefix}-seedling:before { content: @fa-var-seedling; }
.@{fa-css-prefix}-sellcast:before { content: @fa-var-sellcast; }
.@{fa-css-prefix}-sellsy:before { content: @fa-var-sellsy; }
.@{fa-css-prefix}-send-back:before { content: @fa-var-send-back; }
.@{fa-css-prefix}-send-backward:before { content: @fa-var-send-backward; }
.@{fa-css-prefix}-server:before { content: @fa-var-server; }
.@{fa-css-prefix}-servicestack:before { content: @fa-var-servicestack; }
.@{fa-css-prefix}-shapes:before { content: @fa-var-shapes; }
.@{fa-css-prefix}-share:before { content: @fa-var-share; }
.@{fa-css-prefix}-share-all:before { content: @fa-var-share-all; }
.@{fa-css-prefix}-share-alt:before { content: @fa-var-share-alt; }
.@{fa-css-prefix}-share-alt-square:before { content: @fa-var-share-alt-square; }
.@{fa-css-prefix}-share-square:before { content: @fa-var-share-square; }
.@{fa-css-prefix}-sheep:before { content: @fa-var-sheep; }
.@{fa-css-prefix}-shekel-sign:before { content: @fa-var-shekel-sign; }
.@{fa-css-prefix}-shield:before { content: @fa-var-shield; }
.@{fa-css-prefix}-shield-alt:before { content: @fa-var-shield-alt; }
.@{fa-css-prefix}-shield-check:before { content: @fa-var-shield-check; }
.@{fa-css-prefix}-shield-cross:before { content: @fa-var-shield-cross; }
.@{fa-css-prefix}-ship:before { content: @fa-var-ship; }
.@{fa-css-prefix}-shipping-fast:before { content: @fa-var-shipping-fast; }
.@{fa-css-prefix}-shipping-timed:before { content: @fa-var-shipping-timed; }
.@{fa-css-prefix}-shirtsinbulk:before { content: @fa-var-shirtsinbulk; }
.@{fa-css-prefix}-shish-kebab:before { content: @fa-var-shish-kebab; }
.@{fa-css-prefix}-shoe-prints:before { content: @fa-var-shoe-prints; }
.@{fa-css-prefix}-shopping-bag:before { content: @fa-var-shopping-bag; }
.@{fa-css-prefix}-shopping-basket:before { content: @fa-var-shopping-basket; }
.@{fa-css-prefix}-shopping-cart:before { content: @fa-var-shopping-cart; }
.@{fa-css-prefix}-shopware:before { content: @fa-var-shopware; }
.@{fa-css-prefix}-shovel:before { content: @fa-var-shovel; }
.@{fa-css-prefix}-shovel-snow:before { content: @fa-var-shovel-snow; }
.@{fa-css-prefix}-shower:before { content: @fa-var-shower; }
.@{fa-css-prefix}-shredder:before { content: @fa-var-shredder; }
.@{fa-css-prefix}-shuttle-van:before { content: @fa-var-shuttle-van; }
.@{fa-css-prefix}-shuttlecock:before { content: @fa-var-shuttlecock; }
.@{fa-css-prefix}-sickle:before { content: @fa-var-sickle; }
.@{fa-css-prefix}-sigma:before { content: @fa-var-sigma; }
.@{fa-css-prefix}-sign:before { content: @fa-var-sign; }
.@{fa-css-prefix}-sign-in:before { content: @fa-var-sign-in; }
.@{fa-css-prefix}-sign-in-alt:before { content: @fa-var-sign-in-alt; }
.@{fa-css-prefix}-sign-language:before { content: @fa-var-sign-language; }
.@{fa-css-prefix}-sign-out:before { content: @fa-var-sign-out; }
.@{fa-css-prefix}-sign-out-alt:before { content: @fa-var-sign-out-alt; }
.@{fa-css-prefix}-signal:before { content: @fa-var-signal; }
.@{fa-css-prefix}-signal-1:before { content: @fa-var-signal-1; }
.@{fa-css-prefix}-signal-2:before { content: @fa-var-signal-2; }
.@{fa-css-prefix}-signal-3:before { content: @fa-var-signal-3; }
.@{fa-css-prefix}-signal-4:before { content: @fa-var-signal-4; }
.@{fa-css-prefix}-signal-alt:before { content: @fa-var-signal-alt; }
.@{fa-css-prefix}-signal-alt-1:before { content: @fa-var-signal-alt-1; }
.@{fa-css-prefix}-signal-alt-2:before { content: @fa-var-signal-alt-2; }
.@{fa-css-prefix}-signal-alt-3:before { content: @fa-var-signal-alt-3; }
.@{fa-css-prefix}-signal-alt-slash:before { content: @fa-var-signal-alt-slash; }
.@{fa-css-prefix}-signal-slash:before { content: @fa-var-signal-slash; }
.@{fa-css-prefix}-signature:before { content: @fa-var-signature; }
.@{fa-css-prefix}-sim-card:before { content: @fa-var-sim-card; }
.@{fa-css-prefix}-simplybuilt:before { content: @fa-var-simplybuilt; }
.@{fa-css-prefix}-sistrix:before { content: @fa-var-sistrix; }
.@{fa-css-prefix}-sitemap:before { content: @fa-var-sitemap; }
.@{fa-css-prefix}-sith:before { content: @fa-var-sith; }
.@{fa-css-prefix}-skating:before { content: @fa-var-skating; }
.@{fa-css-prefix}-skeleton:before { content: @fa-var-skeleton; }
.@{fa-css-prefix}-sketch:before { content: @fa-var-sketch; }
.@{fa-css-prefix}-ski-jump:before { content: @fa-var-ski-jump; }
.@{fa-css-prefix}-ski-lift:before { content: @fa-var-ski-lift; }
.@{fa-css-prefix}-skiing:before { content: @fa-var-skiing; }
.@{fa-css-prefix}-skiing-nordic:before { content: @fa-var-skiing-nordic; }
.@{fa-css-prefix}-skull:before { content: @fa-var-skull; }
.@{fa-css-prefix}-skull-crossbones:before { content: @fa-var-skull-crossbones; }
.@{fa-css-prefix}-skyatlas:before { content: @fa-var-skyatlas; }
.@{fa-css-prefix}-skype:before { content: @fa-var-skype; }
.@{fa-css-prefix}-slack:before { content: @fa-var-slack; }
.@{fa-css-prefix}-slack-hash:before { content: @fa-var-slack-hash; }
.@{fa-css-prefix}-slash:before { content: @fa-var-slash; }
.@{fa-css-prefix}-sledding:before { content: @fa-var-sledding; }
.@{fa-css-prefix}-sleigh:before { content: @fa-var-sleigh; }
.@{fa-css-prefix}-sliders-h:before { content: @fa-var-sliders-h; }
.@{fa-css-prefix}-sliders-h-square:before { content: @fa-var-sliders-h-square; }
.@{fa-css-prefix}-sliders-v:before { content: @fa-var-sliders-v; }
.@{fa-css-prefix}-sliders-v-square:before { content: @fa-var-sliders-v-square; }
.@{fa-css-prefix}-slideshare:before { content: @fa-var-slideshare; }
.@{fa-css-prefix}-smile:before { content: @fa-var-smile; }
.@{fa-css-prefix}-smile-beam:before { content: @fa-var-smile-beam; }
.@{fa-css-prefix}-smile-plus:before { content: @fa-var-smile-plus; }
.@{fa-css-prefix}-smile-wink:before { content: @fa-var-smile-wink; }
.@{fa-css-prefix}-smog:before { content: @fa-var-smog; }
.@{fa-css-prefix}-smoke:before { content: @fa-var-smoke; }
.@{fa-css-prefix}-smoking:before { content: @fa-var-smoking; }
.@{fa-css-prefix}-smoking-ban:before { content: @fa-var-smoking-ban; }
.@{fa-css-prefix}-sms:before { content: @fa-var-sms; }
.@{fa-css-prefix}-snake:before { content: @fa-var-snake; }
.@{fa-css-prefix}-snapchat:before { content: @fa-var-snapchat; }
.@{fa-css-prefix}-snapchat-ghost:before { content: @fa-var-snapchat-ghost; }
.@{fa-css-prefix}-snapchat-square:before { content: @fa-var-snapchat-square; }
.@{fa-css-prefix}-snooze:before { content: @fa-var-snooze; }
.@{fa-css-prefix}-snow-blowing:before { content: @fa-var-snow-blowing; }
.@{fa-css-prefix}-snowboarding:before { content: @fa-var-snowboarding; }
.@{fa-css-prefix}-snowflake:before { content: @fa-var-snowflake; }
.@{fa-css-prefix}-snowflakes:before { content: @fa-var-snowflakes; }
.@{fa-css-prefix}-snowman:before { content: @fa-var-snowman; }
.@{fa-css-prefix}-snowmobile:before { content: @fa-var-snowmobile; }
.@{fa-css-prefix}-snowplow:before { content: @fa-var-snowplow; }
.@{fa-css-prefix}-socks:before { content: @fa-var-socks; }
.@{fa-css-prefix}-solar-panel:before { content: @fa-var-solar-panel; }
.@{fa-css-prefix}-sort:before { content: @fa-var-sort; }
.@{fa-css-prefix}-sort-alpha-down:before { content: @fa-var-sort-alpha-down; }
.@{fa-css-prefix}-sort-alpha-down-alt:before { content: @fa-var-sort-alpha-down-alt; }
.@{fa-css-prefix}-sort-alpha-up:before { content: @fa-var-sort-alpha-up; }
.@{fa-css-prefix}-sort-alpha-up-alt:before { content: @fa-var-sort-alpha-up-alt; }
.@{fa-css-prefix}-sort-alt:before { content: @fa-var-sort-alt; }
.@{fa-css-prefix}-sort-amount-down:before { content: @fa-var-sort-amount-down; }
.@{fa-css-prefix}-sort-amount-down-alt:before { content: @fa-var-sort-amount-down-alt; }
.@{fa-css-prefix}-sort-amount-up:before { content: @fa-var-sort-amount-up; }
.@{fa-css-prefix}-sort-amount-up-alt:before { content: @fa-var-sort-amount-up-alt; }
.@{fa-css-prefix}-sort-down:before { content: @fa-var-sort-down; }
.@{fa-css-prefix}-sort-numeric-down:before { content: @fa-var-sort-numeric-down; }
.@{fa-css-prefix}-sort-numeric-down-alt:before { content: @fa-var-sort-numeric-down-alt; }
.@{fa-css-prefix}-sort-numeric-up:before { content: @fa-var-sort-numeric-up; }
.@{fa-css-prefix}-sort-numeric-up-alt:before { content: @fa-var-sort-numeric-up-alt; }
.@{fa-css-prefix}-sort-shapes-down:before { content: @fa-var-sort-shapes-down; }
.@{fa-css-prefix}-sort-shapes-down-alt:before { content: @fa-var-sort-shapes-down-alt; }
.@{fa-css-prefix}-sort-shapes-up:before { content: @fa-var-sort-shapes-up; }
.@{fa-css-prefix}-sort-shapes-up-alt:before { content: @fa-var-sort-shapes-up-alt; }
.@{fa-css-prefix}-sort-size-down:before { content: @fa-var-sort-size-down; }
.@{fa-css-prefix}-sort-size-down-alt:before { content: @fa-var-sort-size-down-alt; }
.@{fa-css-prefix}-sort-size-up:before { content: @fa-var-sort-size-up; }
.@{fa-css-prefix}-sort-size-up-alt:before { content: @fa-var-sort-size-up-alt; }
.@{fa-css-prefix}-sort-up:before { content: @fa-var-sort-up; }
.@{fa-css-prefix}-soundcloud:before { content: @fa-var-soundcloud; }
.@{fa-css-prefix}-soup:before { content: @fa-var-soup; }
.@{fa-css-prefix}-sourcetree:before { content: @fa-var-sourcetree; }
.@{fa-css-prefix}-spa:before { content: @fa-var-spa; }
.@{fa-css-prefix}-space-shuttle:before { content: @fa-var-space-shuttle; }
.@{fa-css-prefix}-spade:before { content: @fa-var-spade; }
.@{fa-css-prefix}-sparkles:before { content: @fa-var-sparkles; }
.@{fa-css-prefix}-speakap:before { content: @fa-var-speakap; }
.@{fa-css-prefix}-speaker-deck:before { content: @fa-var-speaker-deck; }
.@{fa-css-prefix}-spell-check:before { content: @fa-var-spell-check; }
.@{fa-css-prefix}-spider:before { content: @fa-var-spider; }
.@{fa-css-prefix}-spider-black-widow:before { content: @fa-var-spider-black-widow; }
.@{fa-css-prefix}-spider-web:before { content: @fa-var-spider-web; }
.@{fa-css-prefix}-spinner:before { content: @fa-var-spinner; }
.@{fa-css-prefix}-spinner-third:before { content: @fa-var-spinner-third; }
.@{fa-css-prefix}-splotch:before { content: @fa-var-splotch; }
.@{fa-css-prefix}-spotify:before { content: @fa-var-spotify; }
.@{fa-css-prefix}-spray-can:before { content: @fa-var-spray-can; }
.@{fa-css-prefix}-square:before { content: @fa-var-square; }
.@{fa-css-prefix}-square-full:before { content: @fa-var-square-full; }
.@{fa-css-prefix}-square-root:before { content: @fa-var-square-root; }
.@{fa-css-prefix}-square-root-alt:before { content: @fa-var-square-root-alt; }
.@{fa-css-prefix}-squarespace:before { content: @fa-var-squarespace; }
.@{fa-css-prefix}-squirrel:before { content: @fa-var-squirrel; }
.@{fa-css-prefix}-stack-exchange:before { content: @fa-var-stack-exchange; }
.@{fa-css-prefix}-stack-overflow:before { content: @fa-var-stack-overflow; }
.@{fa-css-prefix}-stackpath:before { content: @fa-var-stackpath; }
.@{fa-css-prefix}-staff:before { content: @fa-var-staff; }
.@{fa-css-prefix}-stamp:before { content: @fa-var-stamp; }
.@{fa-css-prefix}-star:before { content: @fa-var-star; }
.@{fa-css-prefix}-star-and-crescent:before { content: @fa-var-star-and-crescent; }
.@{fa-css-prefix}-star-christmas:before { content: @fa-var-star-christmas; }
.@{fa-css-prefix}-star-exclamation:before { content: @fa-var-star-exclamation; }
.@{fa-css-prefix}-star-half:before { content: @fa-var-star-half; }
.@{fa-css-prefix}-star-half-alt:before { content: @fa-var-star-half-alt; }
.@{fa-css-prefix}-star-of-david:before { content: @fa-var-star-of-david; }
.@{fa-css-prefix}-star-of-life:before { content: @fa-var-star-of-life; }
.@{fa-css-prefix}-stars:before { content: @fa-var-stars; }
.@{fa-css-prefix}-staylinked:before { content: @fa-var-staylinked; }
.@{fa-css-prefix}-steak:before { content: @fa-var-steak; }
.@{fa-css-prefix}-steam:before { content: @fa-var-steam; }
.@{fa-css-prefix}-steam-square:before { content: @fa-var-steam-square; }
.@{fa-css-prefix}-steam-symbol:before { content: @fa-var-steam-symbol; }
.@{fa-css-prefix}-steering-wheel:before { content: @fa-var-steering-wheel; }
.@{fa-css-prefix}-step-backward:before { content: @fa-var-step-backward; }
.@{fa-css-prefix}-step-forward:before { content: @fa-var-step-forward; }
.@{fa-css-prefix}-stethoscope:before { content: @fa-var-stethoscope; }
.@{fa-css-prefix}-sticker-mule:before { content: @fa-var-sticker-mule; }
.@{fa-css-prefix}-sticky-note:before { content: @fa-var-sticky-note; }
.@{fa-css-prefix}-stocking:before { content: @fa-var-stocking; }
.@{fa-css-prefix}-stomach:before { content: @fa-var-stomach; }
.@{fa-css-prefix}-stop:before { content: @fa-var-stop; }
.@{fa-css-prefix}-stop-circle:before { content: @fa-var-stop-circle; }
.@{fa-css-prefix}-stopwatch:before { content: @fa-var-stopwatch; }
.@{fa-css-prefix}-store:before { content: @fa-var-store; }
.@{fa-css-prefix}-store-alt:before { content: @fa-var-store-alt; }
.@{fa-css-prefix}-strava:before { content: @fa-var-strava; }
.@{fa-css-prefix}-stream:before { content: @fa-var-stream; }
.@{fa-css-prefix}-street-view:before { content: @fa-var-street-view; }
.@{fa-css-prefix}-stretcher:before { content: @fa-var-stretcher; }
.@{fa-css-prefix}-strikethrough:before { content: @fa-var-strikethrough; }
.@{fa-css-prefix}-stripe:before { content: @fa-var-stripe; }
.@{fa-css-prefix}-stripe-s:before { content: @fa-var-stripe-s; }
.@{fa-css-prefix}-stroopwafel:before { content: @fa-var-stroopwafel; }
.@{fa-css-prefix}-studiovinari:before { content: @fa-var-studiovinari; }
.@{fa-css-prefix}-stumbleupon:before { content: @fa-var-stumbleupon; }
.@{fa-css-prefix}-stumbleupon-circle:before { content: @fa-var-stumbleupon-circle; }
.@{fa-css-prefix}-subscript:before { content: @fa-var-subscript; }
.@{fa-css-prefix}-subway:before { content: @fa-var-subway; }
.@{fa-css-prefix}-suitcase:before { content: @fa-var-suitcase; }
.@{fa-css-prefix}-suitcase-rolling:before { content: @fa-var-suitcase-rolling; }
.@{fa-css-prefix}-sun:before { content: @fa-var-sun; }
.@{fa-css-prefix}-sun-cloud:before { content: @fa-var-sun-cloud; }
.@{fa-css-prefix}-sun-dust:before { content: @fa-var-sun-dust; }
.@{fa-css-prefix}-sun-haze:before { content: @fa-var-sun-haze; }
.@{fa-css-prefix}-sunglasses:before { content: @fa-var-sunglasses; }
.@{fa-css-prefix}-sunrise:before { content: @fa-var-sunrise; }
.@{fa-css-prefix}-sunset:before { content: @fa-var-sunset; }
.@{fa-css-prefix}-superpowers:before { content: @fa-var-superpowers; }
.@{fa-css-prefix}-superscript:before { content: @fa-var-superscript; }
.@{fa-css-prefix}-supple:before { content: @fa-var-supple; }
.@{fa-css-prefix}-surprise:before { content: @fa-var-surprise; }
.@{fa-css-prefix}-suse:before { content: @fa-var-suse; }
.@{fa-css-prefix}-swatchbook:before { content: @fa-var-swatchbook; }
.@{fa-css-prefix}-swimmer:before { content: @fa-var-swimmer; }
.@{fa-css-prefix}-swimming-pool:before { content: @fa-var-swimming-pool; }
.@{fa-css-prefix}-sword:before { content: @fa-var-sword; }
.@{fa-css-prefix}-swords:before { content: @fa-var-swords; }
.@{fa-css-prefix}-symfony:before { content: @fa-var-symfony; }
.@{fa-css-prefix}-synagogue:before { content: @fa-var-synagogue; }
.@{fa-css-prefix}-sync:before { content: @fa-var-sync; }
.@{fa-css-prefix}-sync-alt:before { content: @fa-var-sync-alt; }
.@{fa-css-prefix}-syringe:before { content: @fa-var-syringe; }
.@{fa-css-prefix}-table:before { content: @fa-var-table; }
.@{fa-css-prefix}-table-tennis:before { content: @fa-var-table-tennis; }
.@{fa-css-prefix}-tablet:before { content: @fa-var-tablet; }
.@{fa-css-prefix}-tablet-alt:before { content: @fa-var-tablet-alt; }
.@{fa-css-prefix}-tablet-android:before { content: @fa-var-tablet-android; }
.@{fa-css-prefix}-tablet-android-alt:before { content: @fa-var-tablet-android-alt; }
.@{fa-css-prefix}-tablet-rugged:before { content: @fa-var-tablet-rugged; }
.@{fa-css-prefix}-tablets:before { content: @fa-var-tablets; }
.@{fa-css-prefix}-tachometer:before { content: @fa-var-tachometer; }
.@{fa-css-prefix}-tachometer-alt:before { content: @fa-var-tachometer-alt; }
.@{fa-css-prefix}-tachometer-alt-average:before { content: @fa-var-tachometer-alt-average; }
.@{fa-css-prefix}-tachometer-alt-fast:before { content: @fa-var-tachometer-alt-fast; }
.@{fa-css-prefix}-tachometer-alt-fastest:before { content: @fa-var-tachometer-alt-fastest; }
.@{fa-css-prefix}-tachometer-alt-slow:before { content: @fa-var-tachometer-alt-slow; }
.@{fa-css-prefix}-tachometer-alt-slowest:before { content: @fa-var-tachometer-alt-slowest; }
.@{fa-css-prefix}-tachometer-average:before { content: @fa-var-tachometer-average; }
.@{fa-css-prefix}-tachometer-fast:before { content: @fa-var-tachometer-fast; }
.@{fa-css-prefix}-tachometer-fastest:before { content: @fa-var-tachometer-fastest; }
.@{fa-css-prefix}-tachometer-slow:before { content: @fa-var-tachometer-slow; }
.@{fa-css-prefix}-tachometer-slowest:before { content: @fa-var-tachometer-slowest; }
.@{fa-css-prefix}-taco:before { content: @fa-var-taco; }
.@{fa-css-prefix}-tag:before { content: @fa-var-tag; }
.@{fa-css-prefix}-tags:before { content: @fa-var-tags; }
.@{fa-css-prefix}-tally:before { content: @fa-var-tally; }
.@{fa-css-prefix}-tanakh:before { content: @fa-var-tanakh; }
.@{fa-css-prefix}-tape:before { content: @fa-var-tape; }
.@{fa-css-prefix}-tasks:before { content: @fa-var-tasks; }
.@{fa-css-prefix}-tasks-alt:before { content: @fa-var-tasks-alt; }
.@{fa-css-prefix}-taxi:before { content: @fa-var-taxi; }
.@{fa-css-prefix}-teamspeak:before { content: @fa-var-teamspeak; }
.@{fa-css-prefix}-teeth:before { content: @fa-var-teeth; }
.@{fa-css-prefix}-teeth-open:before { content: @fa-var-teeth-open; }
.@{fa-css-prefix}-telegram:before { content: @fa-var-telegram; }
.@{fa-css-prefix}-telegram-plane:before { content: @fa-var-telegram-plane; }
.@{fa-css-prefix}-temperature-frigid:before { content: @fa-var-temperature-frigid; }
.@{fa-css-prefix}-temperature-high:before { content: @fa-var-temperature-high; }
.@{fa-css-prefix}-temperature-hot:before { content: @fa-var-temperature-hot; }
.@{fa-css-prefix}-temperature-low:before { content: @fa-var-temperature-low; }
.@{fa-css-prefix}-tencent-weibo:before { content: @fa-var-tencent-weibo; }
.@{fa-css-prefix}-tenge:before { content: @fa-var-tenge; }
.@{fa-css-prefix}-tennis-ball:before { content: @fa-var-tennis-ball; }
.@{fa-css-prefix}-terminal:before { content: @fa-var-terminal; }
.@{fa-css-prefix}-text:before { content: @fa-var-text; }
.@{fa-css-prefix}-text-height:before { content: @fa-var-text-height; }
.@{fa-css-prefix}-text-size:before { content: @fa-var-text-size; }
.@{fa-css-prefix}-text-width:before { content: @fa-var-text-width; }
.@{fa-css-prefix}-th:before { content: @fa-var-th; }
.@{fa-css-prefix}-th-large:before { content: @fa-var-th-large; }
.@{fa-css-prefix}-th-list:before { content: @fa-var-th-list; }
.@{fa-css-prefix}-the-red-yeti:before { content: @fa-var-the-red-yeti; }
.@{fa-css-prefix}-theater-masks:before { content: @fa-var-theater-masks; }
.@{fa-css-prefix}-themeco:before { content: @fa-var-themeco; }
.@{fa-css-prefix}-themeisle:before { content: @fa-var-themeisle; }
.@{fa-css-prefix}-thermometer:before { content: @fa-var-thermometer; }
.@{fa-css-prefix}-thermometer-empty:before { content: @fa-var-thermometer-empty; }
.@{fa-css-prefix}-thermometer-full:before { content: @fa-var-thermometer-full; }
.@{fa-css-prefix}-thermometer-half:before { content: @fa-var-thermometer-half; }
.@{fa-css-prefix}-thermometer-quarter:before { content: @fa-var-thermometer-quarter; }
.@{fa-css-prefix}-thermometer-three-quarters:before { content: @fa-var-thermometer-three-quarters; }
.@{fa-css-prefix}-theta:before { content: @fa-var-theta; }
.@{fa-css-prefix}-think-peaks:before { content: @fa-var-think-peaks; }
.@{fa-css-prefix}-thumbs-down:before { content: @fa-var-thumbs-down; }
.@{fa-css-prefix}-thumbs-up:before { content: @fa-var-thumbs-up; }
.@{fa-css-prefix}-thumbtack:before { content: @fa-var-thumbtack; }
.@{fa-css-prefix}-thunderstorm:before { content: @fa-var-thunderstorm; }
.@{fa-css-prefix}-thunderstorm-moon:before { content: @fa-var-thunderstorm-moon; }
.@{fa-css-prefix}-thunderstorm-sun:before { content: @fa-var-thunderstorm-sun; }
.@{fa-css-prefix}-ticket:before { content: @fa-var-ticket; }
.@{fa-css-prefix}-ticket-alt:before { content: @fa-var-ticket-alt; }
.@{fa-css-prefix}-tilde:before { content: @fa-var-tilde; }
.@{fa-css-prefix}-times:before { content: @fa-var-times; }
.@{fa-css-prefix}-times-circle:before { content: @fa-var-times-circle; }
.@{fa-css-prefix}-times-hexagon:before { content: @fa-var-times-hexagon; }
.@{fa-css-prefix}-times-octagon:before { content: @fa-var-times-octagon; }
.@{fa-css-prefix}-times-square:before { content: @fa-var-times-square; }
.@{fa-css-prefix}-tint:before { content: @fa-var-tint; }
.@{fa-css-prefix}-tint-slash:before { content: @fa-var-tint-slash; }
.@{fa-css-prefix}-tire:before { content: @fa-var-tire; }
.@{fa-css-prefix}-tire-flat:before { content: @fa-var-tire-flat; }
.@{fa-css-prefix}-tire-pressure-warning:before { content: @fa-var-tire-pressure-warning; }
.@{fa-css-prefix}-tire-rugged:before { content: @fa-var-tire-rugged; }
.@{fa-css-prefix}-tired:before { content: @fa-var-tired; }
.@{fa-css-prefix}-toggle-off:before { content: @fa-var-toggle-off; }
.@{fa-css-prefix}-toggle-on:before { content: @fa-var-toggle-on; }
.@{fa-css-prefix}-toilet:before { content: @fa-var-toilet; }
.@{fa-css-prefix}-toilet-paper:before { content: @fa-var-toilet-paper; }
.@{fa-css-prefix}-toilet-paper-alt:before { content: @fa-var-toilet-paper-alt; }
.@{fa-css-prefix}-tombstone:before { content: @fa-var-tombstone; }
.@{fa-css-prefix}-tombstone-alt:before { content: @fa-var-tombstone-alt; }
.@{fa-css-prefix}-toolbox:before { content: @fa-var-toolbox; }
.@{fa-css-prefix}-tools:before { content: @fa-var-tools; }
.@{fa-css-prefix}-tooth:before { content: @fa-var-tooth; }
.@{fa-css-prefix}-toothbrush:before { content: @fa-var-toothbrush; }
.@{fa-css-prefix}-torah:before { content: @fa-var-torah; }
.@{fa-css-prefix}-torii-gate:before { content: @fa-var-torii-gate; }
.@{fa-css-prefix}-tornado:before { content: @fa-var-tornado; }
.@{fa-css-prefix}-tractor:before { content: @fa-var-tractor; }
.@{fa-css-prefix}-trade-federation:before { content: @fa-var-trade-federation; }
.@{fa-css-prefix}-trademark:before { content: @fa-var-trademark; }
.@{fa-css-prefix}-traffic-cone:before { content: @fa-var-traffic-cone; }
.@{fa-css-prefix}-traffic-light:before { content: @fa-var-traffic-light; }
.@{fa-css-prefix}-traffic-light-go:before { content: @fa-var-traffic-light-go; }
.@{fa-css-prefix}-traffic-light-slow:before { content: @fa-var-traffic-light-slow; }
.@{fa-css-prefix}-traffic-light-stop:before { content: @fa-var-traffic-light-stop; }
.@{fa-css-prefix}-train:before { content: @fa-var-train; }
.@{fa-css-prefix}-tram:before { content: @fa-var-tram; }
.@{fa-css-prefix}-transgender:before { content: @fa-var-transgender; }
.@{fa-css-prefix}-transgender-alt:before { content: @fa-var-transgender-alt; }
.@{fa-css-prefix}-trash:before { content: @fa-var-trash; }
.@{fa-css-prefix}-trash-alt:before { content: @fa-var-trash-alt; }
.@{fa-css-prefix}-trash-restore:before { content: @fa-var-trash-restore; }
.@{fa-css-prefix}-trash-restore-alt:before { content: @fa-var-trash-restore-alt; }
.@{fa-css-prefix}-trash-undo:before { content: @fa-var-trash-undo; }
.@{fa-css-prefix}-trash-undo-alt:before { content: @fa-var-trash-undo-alt; }
.@{fa-css-prefix}-treasure-chest:before { content: @fa-var-treasure-chest; }
.@{fa-css-prefix}-tree:before { content: @fa-var-tree; }
.@{fa-css-prefix}-tree-alt:before { content: @fa-var-tree-alt; }
.@{fa-css-prefix}-tree-christmas:before { content: @fa-var-tree-christmas; }
.@{fa-css-prefix}-tree-decorated:before { content: @fa-var-tree-decorated; }
.@{fa-css-prefix}-tree-large:before { content: @fa-var-tree-large; }
.@{fa-css-prefix}-tree-palm:before { content: @fa-var-tree-palm; }
.@{fa-css-prefix}-trees:before { content: @fa-var-trees; }
.@{fa-css-prefix}-trello:before { content: @fa-var-trello; }
.@{fa-css-prefix}-triangle:before { content: @fa-var-triangle; }
.@{fa-css-prefix}-tripadvisor:before { content: @fa-var-tripadvisor; }
.@{fa-css-prefix}-trophy:before { content: @fa-var-trophy; }
.@{fa-css-prefix}-trophy-alt:before { content: @fa-var-trophy-alt; }
.@{fa-css-prefix}-truck:before { content: @fa-var-truck; }
.@{fa-css-prefix}-truck-container:before { content: @fa-var-truck-container; }
.@{fa-css-prefix}-truck-couch:before { content: @fa-var-truck-couch; }
.@{fa-css-prefix}-truck-loading:before { content: @fa-var-truck-loading; }
.@{fa-css-prefix}-truck-monster:before { content: @fa-var-truck-monster; }
.@{fa-css-prefix}-truck-moving:before { content: @fa-var-truck-moving; }
.@{fa-css-prefix}-truck-pickup:before { content: @fa-var-truck-pickup; }
.@{fa-css-prefix}-truck-plow:before { content: @fa-var-truck-plow; }
.@{fa-css-prefix}-truck-ramp:before { content: @fa-var-truck-ramp; }
.@{fa-css-prefix}-tshirt:before { content: @fa-var-tshirt; }
.@{fa-css-prefix}-tty:before { content: @fa-var-tty; }
.@{fa-css-prefix}-tumblr:before { content: @fa-var-tumblr; }
.@{fa-css-prefix}-tumblr-square:before { content: @fa-var-tumblr-square; }
.@{fa-css-prefix}-turkey:before { content: @fa-var-turkey; }
.@{fa-css-prefix}-turtle:before { content: @fa-var-turtle; }
.@{fa-css-prefix}-tv:before { content: @fa-var-tv; }
.@{fa-css-prefix}-tv-retro:before { content: @fa-var-tv-retro; }
.@{fa-css-prefix}-twitch:before { content: @fa-var-twitch; }
.@{fa-css-prefix}-twitter:before { content: @fa-var-twitter; }
.@{fa-css-prefix}-twitter-square:before { content: @fa-var-twitter-square; }
.@{fa-css-prefix}-typo3:before { content: @fa-var-typo3; }
.@{fa-css-prefix}-uber:before { content: @fa-var-uber; }
.@{fa-css-prefix}-ubuntu:before { content: @fa-var-ubuntu; }
.@{fa-css-prefix}-uikit:before { content: @fa-var-uikit; }
.@{fa-css-prefix}-umbrella:before { content: @fa-var-umbrella; }
.@{fa-css-prefix}-umbrella-beach:before { content: @fa-var-umbrella-beach; }
.@{fa-css-prefix}-underline:before { content: @fa-var-underline; }
.@{fa-css-prefix}-undo:before { content: @fa-var-undo; }
.@{fa-css-prefix}-undo-alt:before { content: @fa-var-undo-alt; }
.@{fa-css-prefix}-unicorn:before { content: @fa-var-unicorn; }
.@{fa-css-prefix}-union:before { content: @fa-var-union; }
.@{fa-css-prefix}-uniregistry:before { content: @fa-var-uniregistry; }
.@{fa-css-prefix}-universal-access:before { content: @fa-var-universal-access; }
.@{fa-css-prefix}-university:before { content: @fa-var-university; }
.@{fa-css-prefix}-unlink:before { content: @fa-var-unlink; }
.@{fa-css-prefix}-unlock:before { content: @fa-var-unlock; }
.@{fa-css-prefix}-unlock-alt:before { content: @fa-var-unlock-alt; }
.@{fa-css-prefix}-untappd:before { content: @fa-var-untappd; }
.@{fa-css-prefix}-upload:before { content: @fa-var-upload; }
.@{fa-css-prefix}-ups:before { content: @fa-var-ups; }
.@{fa-css-prefix}-usb:before { content: @fa-var-usb; }
.@{fa-css-prefix}-usd-circle:before { content: @fa-var-usd-circle; }
.@{fa-css-prefix}-usd-square:before { content: @fa-var-usd-square; }
.@{fa-css-prefix}-user:before { content: @fa-var-user; }
.@{fa-css-prefix}-user-alt:before { content: @fa-var-user-alt; }
.@{fa-css-prefix}-user-alt-slash:before { content: @fa-var-user-alt-slash; }
.@{fa-css-prefix}-user-astronaut:before { content: @fa-var-user-astronaut; }
.@{fa-css-prefix}-user-chart:before { content: @fa-var-user-chart; }
.@{fa-css-prefix}-user-check:before { content: @fa-var-user-check; }
.@{fa-css-prefix}-user-circle:before { content: @fa-var-user-circle; }
.@{fa-css-prefix}-user-clock:before { content: @fa-var-user-clock; }
.@{fa-css-prefix}-user-cog:before { content: @fa-var-user-cog; }
.@{fa-css-prefix}-user-crown:before { content: @fa-var-user-crown; }
.@{fa-css-prefix}-user-edit:before { content: @fa-var-user-edit; }
.@{fa-css-prefix}-user-friends:before { content: @fa-var-user-friends; }
.@{fa-css-prefix}-user-graduate:before { content: @fa-var-user-graduate; }
.@{fa-css-prefix}-user-hard-hat:before { content: @fa-var-user-hard-hat; }
.@{fa-css-prefix}-user-headset:before { content: @fa-var-user-headset; }
.@{fa-css-prefix}-user-injured:before { content: @fa-var-user-injured; }
.@{fa-css-prefix}-user-lock:before { content: @fa-var-user-lock; }
.@{fa-css-prefix}-user-md:before { content: @fa-var-user-md; }
.@{fa-css-prefix}-user-md-chat:before { content: @fa-var-user-md-chat; }
.@{fa-css-prefix}-user-minus:before { content: @fa-var-user-minus; }
.@{fa-css-prefix}-user-ninja:before { content: @fa-var-user-ninja; }
.@{fa-css-prefix}-user-nurse:before { content: @fa-var-user-nurse; }
.@{fa-css-prefix}-user-plus:before { content: @fa-var-user-plus; }
.@{fa-css-prefix}-user-secret:before { content: @fa-var-user-secret; }
.@{fa-css-prefix}-user-shield:before { content: @fa-var-user-shield; }
.@{fa-css-prefix}-user-slash:before { content: @fa-var-user-slash; }
.@{fa-css-prefix}-user-tag:before { content: @fa-var-user-tag; }
.@{fa-css-prefix}-user-tie:before { content: @fa-var-user-tie; }
.@{fa-css-prefix}-user-times:before { content: @fa-var-user-times; }
.@{fa-css-prefix}-users:before { content: @fa-var-users; }
.@{fa-css-prefix}-users-class:before { content: @fa-var-users-class; }
.@{fa-css-prefix}-users-cog:before { content: @fa-var-users-cog; }
.@{fa-css-prefix}-users-crown:before { content: @fa-var-users-crown; }
.@{fa-css-prefix}-users-medical:before { content: @fa-var-users-medical; }
.@{fa-css-prefix}-usps:before { content: @fa-var-usps; }
.@{fa-css-prefix}-ussunnah:before { content: @fa-var-ussunnah; }
.@{fa-css-prefix}-utensil-fork:before { content: @fa-var-utensil-fork; }
.@{fa-css-prefix}-utensil-knife:before { content: @fa-var-utensil-knife; }
.@{fa-css-prefix}-utensil-spoon:before { content: @fa-var-utensil-spoon; }
.@{fa-css-prefix}-utensils:before { content: @fa-var-utensils; }
.@{fa-css-prefix}-utensils-alt:before { content: @fa-var-utensils-alt; }
.@{fa-css-prefix}-vaadin:before { content: @fa-var-vaadin; }
.@{fa-css-prefix}-value-absolute:before { content: @fa-var-value-absolute; }
.@{fa-css-prefix}-vector-square:before { content: @fa-var-vector-square; }
.@{fa-css-prefix}-venus:before { content: @fa-var-venus; }
.@{fa-css-prefix}-venus-double:before { content: @fa-var-venus-double; }
.@{fa-css-prefix}-venus-mars:before { content: @fa-var-venus-mars; }
.@{fa-css-prefix}-viacoin:before { content: @fa-var-viacoin; }
.@{fa-css-prefix}-viadeo:before { content: @fa-var-viadeo; }
.@{fa-css-prefix}-viadeo-square:before { content: @fa-var-viadeo-square; }
.@{fa-css-prefix}-vial:before { content: @fa-var-vial; }
.@{fa-css-prefix}-vials:before { content: @fa-var-vials; }
.@{fa-css-prefix}-viber:before { content: @fa-var-viber; }
.@{fa-css-prefix}-video:before { content: @fa-var-video; }
.@{fa-css-prefix}-video-plus:before { content: @fa-var-video-plus; }
.@{fa-css-prefix}-video-slash:before { content: @fa-var-video-slash; }
.@{fa-css-prefix}-vihara:before { content: @fa-var-vihara; }
.@{fa-css-prefix}-vimeo:before { content: @fa-var-vimeo; }
.@{fa-css-prefix}-vimeo-square:before { content: @fa-var-vimeo-square; }
.@{fa-css-prefix}-vimeo-v:before { content: @fa-var-vimeo-v; }
.@{fa-css-prefix}-vine:before { content: @fa-var-vine; }
.@{fa-css-prefix}-vk:before { content: @fa-var-vk; }
.@{fa-css-prefix}-vnv:before { content: @fa-var-vnv; }
.@{fa-css-prefix}-voicemail:before { content: @fa-var-voicemail; }
.@{fa-css-prefix}-volcano:before { content: @fa-var-volcano; }
.@{fa-css-prefix}-volleyball-ball:before { content: @fa-var-volleyball-ball; }
.@{fa-css-prefix}-volume:before { content: @fa-var-volume; }
.@{fa-css-prefix}-volume-down:before { content: @fa-var-volume-down; }
.@{fa-css-prefix}-volume-mute:before { content: @fa-var-volume-mute; }
.@{fa-css-prefix}-volume-off:before { content: @fa-var-volume-off; }
.@{fa-css-prefix}-volume-slash:before { content: @fa-var-volume-slash; }
.@{fa-css-prefix}-volume-up:before { content: @fa-var-volume-up; }
.@{fa-css-prefix}-vote-nay:before { content: @fa-var-vote-nay; }
.@{fa-css-prefix}-vote-yea:before { content: @fa-var-vote-yea; }
.@{fa-css-prefix}-vr-cardboard:before { content: @fa-var-vr-cardboard; }
.@{fa-css-prefix}-vuejs:before { content: @fa-var-vuejs; }
.@{fa-css-prefix}-walker:before { content: @fa-var-walker; }
.@{fa-css-prefix}-walking:before { content: @fa-var-walking; }
.@{fa-css-prefix}-wallet:before { content: @fa-var-wallet; }
.@{fa-css-prefix}-wand:before { content: @fa-var-wand; }
.@{fa-css-prefix}-wand-magic:before { content: @fa-var-wand-magic; }
.@{fa-css-prefix}-warehouse:before { content: @fa-var-warehouse; }
.@{fa-css-prefix}-warehouse-alt:before { content: @fa-var-warehouse-alt; }
.@{fa-css-prefix}-washer:before { content: @fa-var-washer; }
.@{fa-css-prefix}-watch:before { content: @fa-var-watch; }
.@{fa-css-prefix}-watch-fitness:before { content: @fa-var-watch-fitness; }
.@{fa-css-prefix}-water:before { content: @fa-var-water; }
.@{fa-css-prefix}-water-lower:before { content: @fa-var-water-lower; }
.@{fa-css-prefix}-water-rise:before { content: @fa-var-water-rise; }
.@{fa-css-prefix}-wave-sine:before { content: @fa-var-wave-sine; }
.@{fa-css-prefix}-wave-square:before { content: @fa-var-wave-square; }
.@{fa-css-prefix}-wave-triangle:before { content: @fa-var-wave-triangle; }
.@{fa-css-prefix}-waze:before { content: @fa-var-waze; }
.@{fa-css-prefix}-webcam:before { content: @fa-var-webcam; }
.@{fa-css-prefix}-webcam-slash:before { content: @fa-var-webcam-slash; }
.@{fa-css-prefix}-weebly:before { content: @fa-var-weebly; }
.@{fa-css-prefix}-weibo:before { content: @fa-var-weibo; }
.@{fa-css-prefix}-weight:before { content: @fa-var-weight; }
.@{fa-css-prefix}-weight-hanging:before { content: @fa-var-weight-hanging; }
.@{fa-css-prefix}-weixin:before { content: @fa-var-weixin; }
.@{fa-css-prefix}-whale:before { content: @fa-var-whale; }
.@{fa-css-prefix}-whatsapp:before { content: @fa-var-whatsapp; }
.@{fa-css-prefix}-whatsapp-square:before { content: @fa-var-whatsapp-square; }
.@{fa-css-prefix}-wheat:before { content: @fa-var-wheat; }
.@{fa-css-prefix}-wheelchair:before { content: @fa-var-wheelchair; }
.@{fa-css-prefix}-whistle:before { content: @fa-var-whistle; }
.@{fa-css-prefix}-whmcs:before { content: @fa-var-whmcs; }
.@{fa-css-prefix}-wifi:before { content: @fa-var-wifi; }
.@{fa-css-prefix}-wifi-1:before { content: @fa-var-wifi-1; }
.@{fa-css-prefix}-wifi-2:before { content: @fa-var-wifi-2; }
.@{fa-css-prefix}-wifi-slash:before { content: @fa-var-wifi-slash; }
.@{fa-css-prefix}-wikipedia-w:before { content: @fa-var-wikipedia-w; }
.@{fa-css-prefix}-wind:before { content: @fa-var-wind; }
.@{fa-css-prefix}-wind-turbine:before { content: @fa-var-wind-turbine; }
.@{fa-css-prefix}-wind-warning:before { content: @fa-var-wind-warning; }
.@{fa-css-prefix}-window:before { content: @fa-var-window; }
.@{fa-css-prefix}-window-alt:before { content: @fa-var-window-alt; }
.@{fa-css-prefix}-window-close:before { content: @fa-var-window-close; }
.@{fa-css-prefix}-window-maximize:before { content: @fa-var-window-maximize; }
.@{fa-css-prefix}-window-minimize:before { content: @fa-var-window-minimize; }
.@{fa-css-prefix}-window-restore:before { content: @fa-var-window-restore; }
.@{fa-css-prefix}-windows:before { content: @fa-var-windows; }
.@{fa-css-prefix}-windsock:before { content: @fa-var-windsock; }
.@{fa-css-prefix}-wine-bottle:before { content: @fa-var-wine-bottle; }
.@{fa-css-prefix}-wine-glass:before { content: @fa-var-wine-glass; }
.@{fa-css-prefix}-wine-glass-alt:before { content: @fa-var-wine-glass-alt; }
.@{fa-css-prefix}-wix:before { content: @fa-var-wix; }
.@{fa-css-prefix}-wizards-of-the-coast:before { content: @fa-var-wizards-of-the-coast; }
.@{fa-css-prefix}-wolf-pack-battalion:before { content: @fa-var-wolf-pack-battalion; }
.@{fa-css-prefix}-won-sign:before { content: @fa-var-won-sign; }
.@{fa-css-prefix}-wordpress:before { content: @fa-var-wordpress; }
.@{fa-css-prefix}-wordpress-simple:before { content: @fa-var-wordpress-simple; }
.@{fa-css-prefix}-wpbeginner:before { content: @fa-var-wpbeginner; }
.@{fa-css-prefix}-wpexplorer:before { content: @fa-var-wpexplorer; }
.@{fa-css-prefix}-wpforms:before { content: @fa-var-wpforms; }
.@{fa-css-prefix}-wpressr:before { content: @fa-var-wpressr; }
.@{fa-css-prefix}-wreath:before { content: @fa-var-wreath; }
.@{fa-css-prefix}-wrench:before { content: @fa-var-wrench; }
.@{fa-css-prefix}-x-ray:before { content: @fa-var-x-ray; }
.@{fa-css-prefix}-xbox:before { content: @fa-var-xbox; }
.@{fa-css-prefix}-xing:before { content: @fa-var-xing; }
.@{fa-css-prefix}-xing-square:before { content: @fa-var-xing-square; }
.@{fa-css-prefix}-y-combinator:before { content: @fa-var-y-combinator; }
.@{fa-css-prefix}-yahoo:before { content: @fa-var-yahoo; }
.@{fa-css-prefix}-yammer:before { content: @fa-var-yammer; }
.@{fa-css-prefix}-yandex:before { content: @fa-var-yandex; }
.@{fa-css-prefix}-yandex-international:before { content: @fa-var-yandex-international; }
.@{fa-css-prefix}-yarn:before { content: @fa-var-yarn; }
.@{fa-css-prefix}-yelp:before { content: @fa-var-yelp; }
.@{fa-css-prefix}-yen-sign:before { content: @fa-var-yen-sign; }
.@{fa-css-prefix}-yin-yang:before { content: @fa-var-yin-yang; }
.@{fa-css-prefix}-yoast:before { content: @fa-var-yoast; }
.@{fa-css-prefix}-youtube:before { content: @fa-var-youtube; }
.@{fa-css-prefix}-youtube-square:before { content: @fa-var-youtube-square; }
.@{fa-css-prefix}-zhihu:before { content: @fa-var-zhihu; }


// Screen Readers
// -------------------------

.sr-only { .sr-only(); }
.sr-only-focusable { .sr-only-focusable(); }]]></template>
    <template title="core_filter.less" type="public" addon_id="XF" version_id="2010070" version_string="2.1.0"><![CDATA[// ##################### FILTERING #####################

.filterBlock
{
	padding: @xf-paddingMedium;
	font-size: @xf-fontSizeSmaller;
	float: right;
	.xf-contentBase();
	.xf-blockBorder();
	border-radius: @xf-blockBorderRadius;
	.m-clearFix();

	.filterBlock-input
	{
		width: 150px;
		display: inline;
		font-size: @xf-fontSizeSmaller;

		&.filterBlock-input--small
		{
			width: 100px;
		}
	}

	select.filterBlock-input
	{
		width: auto;
	}
}

.quickFilter
{
	position: relative;

	.input
	{
		width: 180px;
		font-size: @xf-fontSizeSmaller;
	}

	label
	{
		font-size: @xf-fontSizeSmaller;
	}

	input[type=checkbox]
	{
		.m-checkboxAligner();
	}

	.js-filterClear
	{
		color: @controlColor;

		&:hover
		{
			color: @controlColor--hover;
		}

		&:before
		{
			.m-faBase();
			.m-faContent(@fa-var-times);
		}
	}
}

.filterBar
{
	.m-clearFix();
}

.filterBar-filters
{
	.m-listPlain();
	display: inline;

	> li
	{
		display: inline;
	}
}

.filterBar-filterToggle
{
	display: inline-block;
	text-decoration: none;
	color: inherit;
	padding: 1px 8px;
	border-radius: @xf-borderRadiusMedium;
	.m-transition();

	&:after
	{
		.m-faBase();
		font-size: 80%;
		.m-faContent(" @{fa-var-times}");
		opacity: .5;
		.m-transition(opacity);
	}

	&:hover
	{
		text-decoration: none;

		&:after
		{
			opacity: 1;
		}
	}
}

.filterBar-filterToggle-label
{
	opacity: .75;
}

.filterBar-menuTrigger
{
	float: right;
	white-space: nowrap;
	color: @xf-textColorEmphasized;
	border-radius: @xf-borderRadiusMedium;
	text-decoration: none;
	padding: 1px  5px;

	&:after
	{
		.m-menuGadget(true);
	}
	
	&:hover {
		color: inherit;
	}
}

@media (max-width: @xf-responsiveMedium)
{
	.filterBar-filterToggle-label
	{
		display: none;
	}
}]]></template>
    <template title="core_formrow.less" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[// ########################################### FORM ROWS #################################

@_form-labelShiftInput: @xf-paddingMedium + @xf-borderSize; // technically input border-top-width + padding-top
@_form-labelButtonInput: 5px; // technically button border-top-width + padding-top, adjusted for text size differences
@_form-elementSpacer: @xf-paddingMedium;

.m-formRowBlockStyle()
{
	display: block;

	> dt,
	> dd
	{
		width: auto;
		display: block;
		padding: ((@xf-formRowPaddingV) / 2) @xf-formRowPaddingHOuter @xf-formRowPaddingV;
	}

	> dt
	{
		background: none;
		border: none;
		text-align: left;
		padding-bottom: 0;

		.formRow-hint
		{
			display: inline;
		}
	}

	&.formRow--input,
	&.formRow--button
	{
		> dt
		{
			padding-top: ((@xf-formRowPaddingV) / 2);
		}
	}

	> dd
	{
		padding-top: ((@xf-formRowPaddingV) / 2);
	}

	> dd > .inputChoices:first-child
	{
		padding-top: 0;
	}
}

.formRow
{
	display: table;
	table-layout: fixed;
	width: 100%;
	margin: 0;
	position: relative;

	> dt,
	> dd
	{
		display: table-cell;
		vertical-align: top;
		margin: 0;
	}

	> dt
	{
		border-right: @xf-borderSize solid transparent;
		.xf-formLabel();
		width: @xf-formLabelWidth;
		padding: @xf-formRowPaddingV @xf-formRowPaddingHInner @xf-formRowPaddingV @xf-formRowPaddingHOuter;
	}

	> dd
	{
		width: (100% - @xf-formLabelWidth);
		padding: @xf-formRowPaddingV @xf-formRowPaddingHOuter @xf-formRowPaddingV @xf-formRowPaddingHInner;
	}

	&.formRow--input > dt
	{
		padding-top: (@xf-formRowPaddingV + @_form-labelShiftInput);
	}

	&.formRow--button > dt
	{
		padding-top: (@xf-formRowPaddingV + @_form-labelButtonInput);
	}

	&.formRow--inputLabelPair > dt
	{
		padding-top: (@xf-formRowPaddingV * 2);
	}

	&.formRow--valueToEdge > dd
	{
		padding-left: 0;
		padding-right: 0;
	}

	&.formRow--noValuePadding > dd
	{
		padding: 0;
	}

	&.formRow--limited
	{
		display: none;
	}

	&.formRow--fullWidth
	{
		.m-formRowBlockStyle();

		& + .formRow,
		.formRow + &,
		& + * > .formRow:first-of-type, // allows formRows to be wrapped
		.formRow + * > &:first-of-type //  in a single-depth grouping element
		{
			border-top: @xf-borderSize solid @xf-borderColorLight;
		}

		&.formRow--noLabel
		{
			> dt
			{
				display: none;
			}

			> dd
			{
				padding-top: @xf-formRowPaddingV;
			}
		}

		& + .formRow--mergePrev,
		& + * > .formRow:first-of-type.formRow--mergePrev,
		&.formRow--mergeNext + &,
		&.formRow--mergeNext + * > &:first-of-type
		{
			border-top: 0;

			> dt
			{
				padding-top: 0;
			}
		}

		&.formRow--noGutter
		{
			> dt,
			> dd
			{
				padding-left: 0;
				padding-right: 0;
			}
		}

		&.formRow--noPadding
		{
			> dt,
			> dd
			{
				padding: 0;
			}
		}

		&.formRow--noPadding + &,
		&.formRow--noPadding + * > &:first-of-type
		{
			> dt
			{
				padding-top: @xf-formRowPaddingV;
			}
		}
	}

	&.formRow--inputMultiLine > dd
	{
		> .input,
		> .inputGroup
		{
			margin-bottom: @_form-elementSpacer;

			&:last-child
			{
				margin-bottom: 0;
			}
		}
	}

	.formRow-label
	{
		.m-appendColon();
	}

	&.formRow--noColon .formRow-label:after
	{
		content: "";
	}

	.formRow-explain
	{
		margin: @_form-elementSpacer 0 0;
		.m-formElementExplain();
	}

	&.formRow--explainOffset .formRow-explain
	{
		margin-top: (@_form-elementSpacer) * 2;
	}

	.formRow-hint
	{
		display: block;
		font-style: normal;
		.xf-formHint();

		.m-textColoredLinks();

		.formRow-hint-featured
		{
			display: block;
			//font-weight: @xf-fontWeightHeavy;
			color: @xf-textColorFeature;
		}
	}

	+ .formInfoRow
	{
		border-top: @xf-borderSize solid @xf-borderColorLight;
	}

	@media (max-width: @xf-formResponsive)
	{
		.m-formRowBlockStyle();
	}
}

.formButtonGroup
{
	display: flex;
	flex-wrap: wrap;
	margin-top: @xf-paddingLarge;
	margin-bottom: -5px;

	&.formButtonGroup--close
	{
		margin-top: 0;
	}
}

.formButtonGroup-primary
{
	order: 2;
	margin-left: auto;
	margin-bottom: 5px;

	.formButtonGroup--simple &
	{
		margin-left: 0;
	}
}

.formButtonGroup-extra
{
	order: 1;
	margin-bottom: 5px;
}

.formInfoRow
{
	padding: @xf-formRowPaddingV @xf-formRowPaddingHOuter;

	&.formInfoRow--close
	{
		padding-top: ((@xf-formRowPaddingV) / 2);
		padding-bottom: ((@xf-formRowPaddingV) / 2);
	}

	&.formInfoRow--noPadding
	{
		padding: 0;
	}

	&.formInfoRow--confirm
	{
		text-align: center;

		strong
		{
			display: block;
			margin: .5em 0;
			font-size: @xf-fontSizeLarger;

			&:last-child
			{
				margin-bottom: 0;
			}
		}
	}

	+ .formRow
	{
		border-top: @xf-borderSize solid @xf-borderColorLight;
	}

	&.u-hidden:not(.is-active)
	{
		+ .formRow
		{
			border-top: none;
		}
	}

	> .blockMessage
	{
		&:first-child { margin-top: 0; }
		&:last-child { margin-bottom: 0; }
	}
}

.formSubmitRow
{
	position: relative;

	> dt
	{
		display: none;
	}

	> dd
	{
		width: 100%;
		padding: 0;
	}

	&.formSubmitRow--sticky.is-sticky
	{
		.formSubmitRow-main
		{
			position: fixed;
			bottom: 0;
			z-index: @zIndex-2;
		}

		.formSubmitRow-bar
		{
			box-shadow: 0px -5px 15px fade(black, 15%);
		}
	}

	&.formSubmitRow--simple,
	&.formSubmitRow--standalone
	{
		> dt
		{
			visibility: hidden;
		}

		.formSubmitRow-controls
		{
			text-align: center;
			padding-left: 0;
			margin-left: 0;
		}
	}

	&.formSubmitRow--standalone
	{
		.formSubmitRow-bar
		{
			border: @xf-borderSize solid @xf-borderColor;
			border-radius: @block-borderRadius-inner;

			@media (max-width: @xf-responsiveEdgeSpacerRemoval)
			{
				border-radius: 0;
				border-left: none;
				border-right: none;
			}
		}

		&.is-sticky
		{
			.formSubmitRow-bar
			{
				border-bottom: 0;
			}
		}
	}

	.block-body--collapsible:not(.is-active) + &:not(.formSubmitRow--simple, .formSubmitRow--standalone)
	{
		> dt
		{
			visibility: hidden;
		}
	}
}

.formSubmitRow-main
{
	position: relative;
}

.formSubmitRow-bar
{
	position: relative;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;

	.xf-formSubmitRow();
}

.formSubmitRow-controls
{
	position: relative;
	padding-left: @xf-formLabelWidth;
	padding-top: @xf-paddingMedium;
	padding-bottom: @xf-paddingMedium;
	margin-left: @xf-formRowPaddingHInner;
	margin-right: @xf-formRowPaddingHOuter;

	> .button:first-child:last-child
	{
		min-width: 120px;
	}
}

@media (max-width: @xf-formResponsive)
{
	.formSubmitRow-controls
	{
		padding-left: 0;
		text-align: center;
	}
}

.formRowSep
{
	margin: -1px @xf-formRowPaddingHOuter 0;
	border: none;
	border-top: @xf-borderSize solid @xf-borderColor;

	+ .formRowSep,
	&:last-child
	{
		display: none;
	}

	.block-body > &:first-child
	{
		display: none;
	}
}]]></template>
    <template title="core_input.less" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[// ###################################### INPUTS ##########################

@_input-numberWidth: 150px;
@_input-numberNarrowWidth: 90px;
@_input-textColor: xf-default(@xf-input--color, @xf-textColor);
@_input-elementSpacer: @xf-paddingMedium;
@_input-checkBoxSpacer: 1.5em;

.m-inputReadOnly()
{
	color: mix(xf-default(@xf-input--color, @xf-textColor), xf-default(@xf-inputDisabled--color, @xf-textColorMuted));
	background: mix(xf-default(@xf-input--background-color, @xf-contentBg), xf-default(@xf-inputDisabled--background-color, @xf-paletteNeutral1));
}

.input
{
	.xf-input();
	display: block;
	width: 100%;
	line-height: @xf-lineHeightDefault;
	text-align: left; // this will be flipped in RTL
	word-wrap: break-word;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	.m-transition();
	.m-placeholder({color: fade(@_input-textColor, 40%); });

	&:focus,
	&.is-focused
	{
		outline: 0;
		.xf-inputFocus();
		.m-placeholder({color: fade(@_input-textColor, 50%); });
	}

	&[readonly],
	&.is-readonly
	{
		.m-inputReadOnly();
	}

	&[disabled]
	{
		.xf-inputDisabled();
	}

	&[type=number],
	&.input--number
	{
		text-align: right;
		max-width: @_input-numberWidth;

		&.input--numberNarrow
		{
			width: @_input-numberNarrowWidth;
		}
	}

	&.input--date
	{
		max-width: @_input-numberWidth;
	}

	textarea&
	{
		min-height: 0;
		max-height: 400px;
		max-height: 75vh;
		resize: vertical;

		&.input--fitHeight
		{
			resize: none;

			&.input--fitHeight--short
			{
				max-height: 200px;
				max-height: 35vh;
			}
		}

		&.input--code
		{
			overflow-x: auto;
			-ltr-rtl-text-align: left; // force blocks of code back to left align
		}

		&.input--maxHeight-300px
		{
			max-height: 300px;
		}

		.has-js &[rows="1"][data-single-line]
		{
			overflow: hidden;
			resize: none;
		}
	}

	// this makes select inputs consistent across all browsers and OSes
	select&,
	&.input--select
	{
		color: black;
		padding-right: 1em !important;
		.m-selectGadgetColor(@_input-textColor);
		background-size: 1em !important;
		background-repeat: no-repeat !important;
		-ltr-background-position: 100% !important;
		white-space: nowrap;
		word-wrap: normal;
		-webkit-appearance: none !important;
		-moz-appearance: none !important;
		appearance: none !important;

		overflow-x: hidden; // iOS seems to require this to prevent overflow with long options...
		overflow-y: auto; // ...and Firefox seems to require this to prevent the above from breaking vertical scroll...

		&[disabled]
		{
			.m-selectGadgetColor(xf-default(@xf-inputDisabled--color, @xf-textColor));
		}

		&[size],
		&[multiple]
		{
			background-image: none !important;
			padding-right: xf-default(@xf-input--padding, 5px) !important;
		}
	}

	&.input--autoSize
	{
		width: auto;
	}

	&.input--inline
	{
		display: inline;
		width: auto;
	}

	&.input--code
	{
		font-family: @xf-fontFamilyCode;
		direction: ltr;
		//white-space: nowrap;
		word-wrap: normal;
	}

	&.input--title
	{
		font-size: @xf-fontSizeLargest;
	}

	&.input--avatarSizeS
	{
		min-height: @avatar-s;
	}

	&.input--passwordHideShow
	{
		::-ms-reveal,
		::-ms-clear
		{
			display: none !important;
		}
	}

	.m-inputZoomFix();

	.fa--inputOverlay + &
	{
		padding-left: 2em;
	}
}

// Overlay a FontAwesome icon over the start of a text box as a hint to its usem
// Use the 'fa' attribute in XF template syntax for xf:textbox, xf:numberbox and xf:textarea
.fa--xf.fa--inputOverlay
{
	position: absolute;
	padding: @xf-input--padding + 2 @xf-input--padding @xf-input--padding;
	line-height: @xf-lineHeightDefault;
	color: @xf-input--border-top-color;

	& + .input
	{
		padding-left: @xf-input--padding * 2 + @xf-input--font-size;
	}
}

// ############################# NEW ICONIC CONTROLS ######################

@controlColor: @xf-paletteAccent1;
@controlColor--hover: xf-intensify(@controlColor, 25%);

.iconicIcon(@setPosition: true)
{
	display: inline-block;
	min-width: 1em;
	height: .9em;// prevents some zoom-related issues
	-ltr-rtl-text-align: left;

	&:before,
	&:after
	{
		.m-faBase('Pro'; inherit);
		//.m-transition(opacity, color; @xf-animationSpeed, @xf-animationSpeed / 2);

		position: absolute;

		& when (@setPosition = true)
		{
			left: 0;
			top: 0;
		}

		opacity: 1;
	}
}

.iconic
{
	display: inline-block;
	position: relative;

	> input
	{
		.m-visuallyHidden();
		position: absolute;
		left: 0;
		width: auto;
		height: auto;

		+ i
		{
			.iconicIcon();
		}

		& + i:after
		{
			opacity: 0;
		}

		&:disabled + i:before
		{
			opacity: .3;
		}

		&:disabled:checked + i:after
		{
			opacity: .3;
		}

		&:checked
		{
			& + i:before
			{
				opacity: 0;
			}

			& + i:after
			{
				opacity: 1;
			}
		}

		&:focus + i
		{
			&:before,
			&:after
			{
				outline: Highlight solid 2px;
				-moz-outline-radius: 5px;

				@media (-webkit-min-device-pixel-ratio: 0)
				{
					outline: -webkit-focus-ring-color auto 5px;
				}
			}
		}
	}

	// handler for labelled inputs - indent the text away from the control
	.iconic-label:before
	{
		content: '';
		display: inline-block;
		width: @_input-checkBoxSpacer - 1em; // min-width of input > i
	}

	&.iconic--hideShow
	{
		min-width: 56px;

		> input[type=checkbox] + i
		{
			&:before
			{
				.m-faContent(@fa-var-eye);
			}

			&:after
			{
				.m-faContent(@fa-var-eye-slash);
			}
		}

		.iconic-label
		{
			font-size: @xf-fontSizeSmall;
			vertical-align: text-top;
		}
	}

	&.iconic--hiddenLabel .iconic-label:before {
		display: none;
	}

	> input[type=checkbox] + i
	{
		&:before
		{
			.m-faContent(@fa-var-square, .875em);
		}

		&:after
		{
			.m-faContent(@fa-var-check-square, .875em);
		}
	}

	> input[type=radio] + i
	{
		&:before
		{
			.m-faContent(@fa-var-circle, 1em);
		}

		&:after
		{
			.m-faContent(@fa-var-check-circle, 1em);
		}
	}
}

// Fix position for inputChoices to allow nested indenting

.inputChoices > .inputChoices-choice
{
	position: relative;

	.iconic
	{
		position: static;

		> input + i
		{
			position: absolute;
			left: 0;
		}

		&.iconic--noLabel
		{
			display: inline;
		}
	}

	// undo the normal indenting of text from checkbox
	.iconic-label:before {
		display: none;
	}
}

// Basic control colours for common scenarios

.formRow,
.inputGroup,
.inputChoices,
.block-footer,
.dataList-cell,
.message-cell--extra
{
	.iconic,
	&.dataList-cell--fa > a
	{
		> i
		{
			color: @controlColor;
		}

		&:hover > i
		{
			color: @controlColor--hover;
		}
	}
}

// ############################# END ICONIC CONTROLS ######################

.u-inputSpacer
{
	margin-top: @_input-elementSpacer;
}

.inputGroup
{
	display: flex;
	align-items: stretch;
	max-width: 100%;

	.inputGroup-text
	{
		flex-grow: 0;
		display: flex;
		align-items: center;

		white-space: nowrap;
		vertical-align: middle;
		padding: 0 @xf-paddingMedium;

		&:first-child { padding-left: 0; }
		&:last-child { padding-right: 0; }
	}

	.inputGroup-splitter
	{
		display: inline-block;
		width: @_form-elementSpacer;
		flex-shrink: 0;
	}

	.input
	{
		flex-shrink: 1;
		min-width: 0; // firefox bug - https://bugzilla.mozilla.org/show_bug.cgi?id=1021913
	}

	.button
	{
		flex-shrink: 0;
	}

	&:not(.inputGroup--joined)
	{
		.input,
		.button
		{
			+ .input,
			+ .button
			{
				margin-left: @_form-elementSpacer;
			}
		}
	}

	.inputGroup-label
	{
		flex-shrink: 1;
		width: 100%;
		padding: 0 0 @xf-paddingMedium;

		.m-appendColon();
	}

	@media (max-width: @xf-formResponsive)
	{
		.input:not(.input--autoSize):not(.input--numberNarrow)
		{
			width: 100%;
		}
	}

	&.inputGroup--inline
	{
		display: inline-flex;
	}

	&.inputGroup--auto
	{
		.input
		{
			width: auto;
		}
	}

	&.inputGroup--joined
	{
		.input
		{

			&:first-child
			{
				border-top-left-radius: @xf-borderRadiusMedium;
				border-bottom-left-radius: @xf-borderRadiusMedium;
				border-right: none;
			}

			&:last-child
			{
				border-top-right-radius: @xf-borderRadiusMedium;
				border-bottom-right-radius: @xf-borderRadiusMedium;
				border-left: none;
			}
		}

		.inputGroup-text
		{
			.xf-input(border);
			.xf-inputFocus(background);
			text-align: center;
			padding: @xf-paddingSmall @xf-paddingMedium;

			&.inputGroup-text--disabled,
			&.is-disabled,
			&[disabled]
			{
				.xf-inputDisabled();

				a { text-decoration: none; }
			}

			&:first-child
			{
				border-right: 0;
				border-top-left-radius: @xf-borderRadiusMedium;
				border-bottom-left-radius: @xf-borderRadiusMedium;
			}

			&:last-child
			{
				border-left: 0;
				border-top-right-radius: @xf-borderRadiusMedium;
				border-bottom-right-radius: @xf-borderRadiusMedium;
			}
		}

		.input + .inputGroup-text,
		.input + .input,
		.inputGroup-text + .input
		{

		}

		.inputGroup-text + .inputGroup-text,
		.inputGroup-text + select.input
		{
			border-left: 0;
		}
	}
}

.inputGroup-container > .inputGroup
{
	margin-top: @xf-paddingMedium;

	&:first-child
	{
		margin-top: 0;
	}
}

.inputNumber
{
	.input--number
	{
		-moz-appearance: textfield !important;

		&::-webkit-inner-spin-button,
		&::-webkit-outer-spin-button
		{
			margin: 0 !important;
			-webkit-appearance: none !important;
		}

		@media (max-width: @xf-formResponsive)
		{
			min-width: auto;
			max-width: 120px;
		}
	}
}

.inputNumber-button
{
	position: relative;

	.m-faBase();
	color: black;
	font-size: 1.0em;
	font-style: normal !important;
	line-height: .75em;
	vertical-align: -15%;

	width: 45px;
	justify-content: center;
	text-align: center;

	cursor: pointer;

	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;

	&.inputNumber-button--smaller
	{
		vertical-align: 0;
		width: 35px;
	}

	&--up::before
	{
		.m-faContent(@fa-var-plus, .88em);
	}

	&--down::before
	{
		.m-faContent(@fa-var-minus, .8em);
	}

	.inputGroup.inputGroup--joined &
	{
		&:hover,
		&:active,
		&:focus
		{
			background-color: saturate(xf-intensify(@xf-paletteColor1, 4%), 12%);
			color: @controlColor--hover;
		}
	}

	.input.input--number[readonly] ~ &
	{
		.m-inputReadOnly();
	}

	.input.input--number[disabled] ~ &
	{
		cursor: default;
		.xf-inputDisabled();
	}
}

.inputDate
{
	.inputDate-icon
	{
		position: relative;

		.m-faBase();
		color: @xf-linkColor;
		font-size: 1.0em;
		font-style: normal !important;
		line-height: .75em;
		vertical-align: -15%;

		width: 45px;
		justify-content: center;
		text-align: center;

		-webkit-touch-callout: none;
		-webkit-user-select: none;
		-moz-user-select: none;
		-ms-user-select: none;
		user-select: none;

		@media (max-width: @xf-formResponsive)
		{
			vertical-align: 0;
			width: 25px;
		}

		&::before
		{
			.m-faContent(@fa-var-calendar, .88em);
		};
	}
}

.inputList
{
	.m-listPlain();

	> li
	{
		margin-top: @xf-paddingMedium;

		&:first-child
		{
			margin-top: 0;
		}
	}
}

.inputPair
{
	.m-clearFix();

	> .input,
	.inputPair-input
	{
		float: right;
		width: 49%; // fallback
		width: ~"calc(50% - 2px)";

		&:first-child
		{
			float: left;
		}
	}
}

.inputPair-container > .inputPair
{
	margin-top: @xf-paddingMedium;

	&:first-child
	{
		margin-top: 0;
	}
}

.inputLabelPair
{
	.m-clearFix();
	margin: @xf-paddingMedium 0;
	padding: 0;

	> dt,
	> dd
	{
		float: left;
		margin: 0;
		padding: 0;
	}

	> dt
	{
		width: 65%;
		padding-right: @xf-paddingMedium;
		padding-top: .6em;

		> label
		{
			.m-appendColon();
		}
	}

	> dd
	{
		width: 35%;
		text-align: right;

		.input
		{
			width: 100%;
			max-width: none;
		}
	}

	@media (max-width: @xf-responsiveNarrow)
	{
		> dt,
		> dd
		{
			width: 50%;
		}
	}
}

.inputChoices
{
	list-style: none;
	padding: 0;
	margin: 0;

	> .inputChoices-choice
	{
		margin-bottom: @_input-elementSpacer;
		padding-left: @_input-checkBoxSpacer;

		&:last-child
		{
			margin-bottom: 0;
		}

		> .inputChoices,
		.inputChoices-spacer
		{
			margin-top: @_input-elementSpacer;
		}
	}

	&.inputChoices--noChoice > .inputChoices-choice,
	.inputChoices-plainChoice
	{
		padding-left: 0;
	}

	&.inputChoices--inline > .inputChoices-choice
	{
		display: inline-block;
		margin-right: @_input-elementSpacer;
		margin-bottom: 0;

		&:last-child
		{
			margin-right: 0;
		}
	}

	.inputChoices-label
	{
		padding-left: 0;
		font-size: @xf-fontSizeSmall;
		color: @xf-textColorMuted;
	}

	+ .inputChoices:not(.inputChoices--inline)
	{
		margin-top: @_input-elementSpacer;
	}
}

.inputChoices-group + .inputChoices-group,
.inputChoices-choice + .inputChoices-group
{
	margin-top: (@xf-paddingMedium) * 2;
}

.inputChoices-spacer + .inputChoices
{
	margin-top: @_input-elementSpacer;
}

.inputChoices-heading
{
	color: @xf-textColorMuted;
	padding-bottom: (@xf-paddingMedium) / 2;
	border-bottom: @xf-borderSize solid @xf-borderColorFaint;
	margin-bottom: @xf-paddingMedium;
	position: relative;

	&.inputChoices-heading--checkAll {
		.iconic {
			position: static;

			& > input + i {
				position: absolute;
				right: 0;
				left: auto;
				width: auto;
			}
		}
	}
}

.inputChoices-explain
{
	.m-formElementExplain();

	&.inputChoices-explain--after
	{
		margin-top: @_input-elementSpacer;
	}
}

.inputChoices-dependencies
{
	list-style: none;
	padding: 0;
	margin: 0;

	> li
	{
		margin-top: @_input-elementSpacer;

		> label
		{
			display: block;
			padding: @xf-paddingSmall 0;

			&.iconic--labelled > input + i
			{
				margin-left: 0;
			}
		}
	}
}

@media (max-width: @xf-responsiveNarrow)
{
	.input.input--title
	{
		font-size: @xf-fontSizeLarge;
	}
}]]></template>
    <template title="core_labels.less" type="public" addon_id="XF" version_id="2001070" version_string="2.0.10"><![CDATA[.label
{

	display: inline-block;
	padding: 1px .35em;
	border: 1px solid transparent;
	border-radius: @xf-borderRadiusMedium;
	font-size: 80%;
	line-height: ((@xf-lineHeightDefault) * .9);
	text-decoration: none;

	&:hover,
	a:hover &
	{
		text-decoration: none;
	}

	&.label--fullSize
	{
		font-size: 100%;
	}

	&.label--small
	{
		font-size: @xf-fontSizeSmall;
	}

	&.label--smallest
	{
		font-size: @xf-fontSizeSmallest;
	}

	// Label variations

	&.label--hidden
	{
		// this has to essentially undo all the adjustments made by .label
		padding: inherit;
		border: none;
		font-size: inherit;
		line-height: inherit;
		text-decoration: inherit;

		&:hover
		{
			text-decoration: underline;
		}
	}

	&.label--subtle
	{
		.m-labelVariation(@xf-textColorMuted, @xf-contentAltBg);
	}

	&.label--primary
	{
		.m-labelVariation(@xf-textColorEmphasized, @xf-paletteColor1, @xf-paletteColor1);
	}

	&.label--accent
	{
		.m-labelVariation(@xf-textColorAccentContent, @xf-contentAccentBg, @xf-borderColorAccentContent);
	}

	&.label--red { .m-labelVariation(white, #e20000); }
	&.label--green { .m-labelVariation(white, green); }
	&.label--olive { .m-labelVariation(white, olive); }
	&.label--lightGreen { .m-labelVariation(black, #ccf9c8, #bee8ba); }
	&.label--blue { .m-labelVariation(white, #0008e3); }
	&.label--royalBlue { .m-labelVariation(white, royalblue); }
	&.label--skyBlue { .m-labelVariation(white, #7cc3e0); }
	&.label--gray { .m-labelVariation(white, gray); }
	&.label--silver { .m-labelVariation(black, silver); }
	&.label--yellow { .m-labelVariation(black, #ffff91, #e6e687); }
	&.label--orange { .m-labelVariation(black, #ffcb00); }

	&.label--error { .m-labelVariation(#c84448, #fde9e9, #c84448); }
}

.label-append
{
	display: inline-block;
}

.labelLink,
.labelLink:hover
{
	text-decoration: none;
}]]></template>
    <template title="core_list.less" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[// ##################################### LISTS ##################

.pairs
{
	padding: 0;
	margin: 0;
	overflow: hidden;

	&.pairs--plainLabel
	{
		> dt
		{
			color: inherit;
		}
	}

	&.pairs--spaced + .pairs
	{
		margin-top: @xf-paddingMedium;
	}

	&.pairs--noColon
	{
		> dt
		{
			&:after
			{
				content: "";
			}
		}
	}

	> dt
	{
		padding: 0;
		margin: 0;
		color: @xf-textColorMuted;

		.m-appendColon();
	}

	> dd
	{
		padding: 0;
		margin: 0;
	}

	&.pairs--inline
	{
		display: inline;

		> dt,
		> dd
		{
			display: inline;
		}
	}

	&.pairs--columns
	{
		display: table;
		table-layout: fixed;
		width: 100%;

		> dt,
		> dd
		{
			display: table-cell;
		}

		> dt
		{
			width: 50%;
			padding-right: @xf-paddingMedium;
		}

		&.pairs--fixedSmall > dt
		{
			width: 200px;
		}
		&.pairs--fluidSmall > dt
		{
			width: 25%;
		}
		&.pairs--fluidHuge > dt
		{
			width: 70%;
		}

		@media (max-width: 500px)
		{
			display: block;

			> dt,
			> dd
			{
				display: block;
			}

			&.pairs > dt // the .pairs repetition is to increase specificity to override all fixed/fluid options
			{
				width: auto;
				padding-right: 0;
			}

			& + .pairs
			{
				margin-top: @xf-paddingMedium;
			}
		}
	}

	&.pairs--justified
	{
		.m-clearFix();

		> dt
		{
			float: left;
			max-width: 100%;
			margin-right: @xf-paddingMedium;
		}

		> dd
		{
			float: right;
			text-align: right;
			max-width: 100%;
		}
	}

	&.pairs--rows
	{
		display: inline-table;
		margin-right: @xf-paddingMedium;

		&.pairs--rows--centered
		{
			> dt,
			> dd
			{
				text-align: center;
			}
		}

		&:last-of-type
		{
			margin-right: 0;
		}

		> dt
		{
			display: table-row;
			font-size: 80%;

			&:after
			{
				content: '';
				display: none;
			}
		}

		> dd
		{
			display: table-row;
		}
	}
}

.pairWrapper
{
	&.pairWrapper--spaced
	{
		.pairs
		{
			margin-top: @xf-paddingMedium;

			&:first-child
			{
				margin-top: 0;
			}
		}
	}
}

.pairJustifier
{
	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;

	margin-right: -5px;
	margin-bottom: -5px;

	.pairs.pairs--rows
	{
		margin-right: 5px;
		margin-bottom: 5px;
	}
}

.listPlain
{
	.m-listPlain();
}

.listInline
{
	.m-listPlain();

	&.listInline--selfInline
	{
		display: inline;
	}

	> li
	{
		display: inline;
		margin: 0;
		padding: 0;
	}

	&.listInline--block
	{
		> li
		{
			display: inline-block;
		}
	}

	&.listInline--comma
	{
		> li:after
		{
			content: "{$xf.language.comma_separator}";
		}

		> li:last-child:after
		{
			content: "";
			display: none;
		}
	}

	&.listInline--bullet
	{
		> li:before
		{
			content: "\00B7\20";
		}

		> li:first-child:before
		{
			content: "";
			display: none;
		}
	}
}

.listHeap
{
	.m-listPlain();
	margin-top: -4px;
	> li
	{
		margin: 0;
		padding: 0;
		display: inline-block;
		margin-right: -1px;
		margin-top: 4px;

		&:last-child
		{
			margin-right: 0;
		}
	}
}

.listColumns
{
	.m-columns(2, @xf-responsiveNarrow);

	> li
	{
		.m-columnBreakAvoid();
		position: relative; // workaround Chrome quirk with hover triggers in visitor menu
	}

	&.listColumns--spaced
	{
		> li
		{
			margin-bottom: .5em;
		}
	}

	&.listColumns--narrow
	{
		.m-columns(2);
	}

	&.listColumns--together
	{
		-moz-column-gap: 0;
		-webkit-column-gap: 0;
		column-gap: 0;
	}

	&.listColumns--collapsed
	{
		display: inline-block;
	}

	&.listColumns--3
	{
		.m-columns(3);

		@media (max-width: @xf-responsiveWide)
		{
			.m-columns(2, @xf-responsiveNarrow);
		}
	}

	&.listColumns--4
	{
		.m-columns(4);

		@media (max-width: @xf-responsiveWide)
		{
			.m-columns(2, @xf-responsiveNarrow);
		}
	}
}

.textHighlight
{
	font-style: normal;
	font-weight: @xf-fontWeightHeavy;

	&.textHighlight--attention
	{
		color: @xf-textColorAttention;
	}
}]]></template>
    <template title="core_menu.less" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[// ###################################### MENUS ######################

@_menu-arrowSize: 8px;
@_menu-edgePadding: @xf-pageEdgeSpacer;
@_menu-paddingV: @xf-paddingMedium;
@_menu-closePaddingH: @xf-paddingLarge;
@_menu-paddingH: @xf-paddingLargest;

.menuTrigger
{
	cursor: pointer;

	&:after
	{
		.m-menuGadget(true);
	}
}

.menuOutsideClicker
{
	position: fixed;
	display: none;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: 2; // above non set stuff but below anything intentionally set

	&.is-active
	{
		display: block;
		-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
	}
}

.menu
{
	.m-transitionFade();

	position: absolute;
	z-index: @zIndex-2;
	margin: @_menu-arrowSize 0 0;
	min-width: 240px;
	max-width: 320px;
	border-radius: @xf-menuBorderRadius;

	.m-dropShadow(0, 5px, 10px, 0, .35);

	&.menu--structural
	{
		margin-top: 0;

		// when menus nudge up against structure, the joined corner should not be radiused
		&.menu--left
		{
			border-top-left-radius: 0;
		}
		&.menu--right
		{
			border-top-right-radius: 0;
		}
	}

	&.menu--superWide
	{
		width: 75%;
		max-width: ~"calc(100% - @{xf-pageEdgeSpacer})";
	}

	&.menu--veryWide
	{
		width: 500px;
		max-width: ~"calc(100% - @{xf-pageEdgeSpacer})";
	}

	&.menu--wide
	{
		width: 350px;
		max-width: ~"calc(100% - @{xf-pageEdgeSpacer})";
	}

	&.menu--medium
	{
		width: 300px;
		max-width: ~"calc(100% - @{xf-pageEdgeSpacer})";
	}

	&.menu--potentialFixed
	{
		z-index: @zIndex-4;
	}
}

.menu-arrow
{
	position: absolute;
	width: 0;
	height: 0;
	border: 0 solid transparent;

	top: -@_menu-arrowSize;
	-ltr-rtl-left: 50%;
	-ltr-rtl-margin-left: -@_menu-arrowSize;
	.m-triangleUp(@xf-menuFeatureBorderColor, @_menu-arrowSize);

	.menu--structural &
	{
		top: -@_menu-arrowSize;
	}

	.menu--up &
	{
		display: none;
	}
}

.menu-content
{
	margin: 0;
	padding: 0;
	list-style: none;
	text-align: left;
	.xf-menu();
	border-radius: @xf-menuBorderRadius;
	border-top: @xf-borderSizeFeature solid @xf-menuFeatureBorderColor;

	// when menus nudge up against structure, the joined corner should not be radiused
	.menu--structural.menu--left &
	{
		border-top-left-radius: 0;
	}
	.menu--structural.menu--right &
	{
		border-top-right-radius: 0;
	}

	// potentially fixed menus
	.menu--potentialFixed &
	{
		overflow: auto;
		max-height: 450px;
		max-height: 80vh;
	}

	> :last-child
	{
		border-bottom-left-radius: @xf-menuBorderRadius;
		border-bottom-right-radius: @xf-menuBorderRadius;
	}
}

.menu--pageJump
{
	width: auto;
	min-width: 0;
}

.menu-header
{
	padding: @xf-blockPaddingV @_menu-paddingH;
	margin: 0;
	font-weight: @xf-fontWeightNormal;
	text-decoration: none;
	.xf-menuHeader();

	.m-clearFix();
	.m-hiddenLinks();
}

.menu-tabHeader
{
	padding: 0;
	margin: 0;
	font-weight: @xf-fontWeightNormal;
	text-decoration: none;
	.xf-menuTabHeader();
	.m-tabsTogether(xf-default(@xf-menuTabHeader--font-size, @xf-fontSizeNormal));

	.tabs-tab
	{
		padding: @xf-blockPaddingV @_menu-paddingH max(0px, @xf-blockPaddingV - @xf-borderSizeFeature);
		border-bottom: @xf-borderSizeFeature solid transparent;

		&:hover
		{
			color: white;
		}

		&.is-active
		{
			.xf-menuTabHeaderSelected();
			color: white;
		}
	}

	.hScroller-action
	{
		.m-hScrollerActionColorVariation(
			xf-default(@xf-menuTabHeader--background-color, transparent),
			xf-default(@xf-menuTabHeader--color, ~""),
			xf-default(@xf-blockMinorTabHeaderSelected--color, ~"")
		);
	}
}

.menu-scroller
{
	overflow: auto;
	max-height: 300px;
	max-height: 60vh;
	-webkit-overflow-scrolling: touch;

	.menu-row + &
	{
		border-top: @xf-borderSize solid @xf-borderColorLight;
	}
}

.menu-row
{
	margin: 0;
	padding: @_menu-paddingV @_menu-paddingH;
	.m-clearFix();

	&.menu-row--alt
	{
		.xf-contentAltBase();
	}

	&.menu-row--highlighted
	{
		.xf-contentAltBase();
	}

	&.menu-row--close
	{
		padding-left: @_menu-closePaddingH;
		padding-right: @_menu-closePaddingH;
	}

	&.menu-row--separated
	{
		+ .menu-row
		{
			border-top: @xf-borderSize solid @xf-borderColorLight;
		}
	}

	&.menu-row--clickable:hover
	{
		background: @xf-contentAltBg;
	}

	&:empty
	{
		padding: 0;
	}
}

.menu-linkRow
{
	display: block;
	padding: @_menu-paddingV @_menu-paddingH @_menu-paddingV (@_menu-paddingH) - (@xf-borderSizeFeature);
	.xf-menuLinkRow();

	&.menu-linkRow--alt
	{
		.xf-contentAltBase();
	}

	&.is-selected,
	&:hover,
	&:focus
	{
		.xf-menuLinkRowSelected();

		&:focus
		{
			outline: 0;
		}

		&.is-selected
		{
			border-left-color: @xf-borderColorFeature;
		}
	}

	i[aria-hidden=true]
	{
		font-size: @xf-fontSizeSmall;
		display: inline-block;
		width: 23px; // about 1.75em at this font size

		&:after
		{
			.m-faBase();
			color: @xf-textColorMuted;
			left: @xf-blockPaddingH;
		}

		& ~ .menu-linkRow-hint
		{
			padding-left: 23px;
		}
	}

	&:hover i[aria-hidden=true]:after
	{
		color: @xf-linkHoverColor;
	}
}

.menu-linkRow-hint
{
	font-style: inherit;
	font-size: @xf-fontSizeSmallest;
	color: @xf-textColorMuted;
	display: block;
}

.menu-separator
{
	margin: 0 (@_menu-paddingH) / 2;
	padding: 0;
	border: none;
	border-top: @xf-borderSize solid @xf-borderColorLight;

	&.menu-separator--hard
	{
		margin: 0;
	}

	& + .menu-separator,
	&:last-child
	{
		display: none;
	}
}

.menu-footer
{
	padding: @xf-blockPaddingV @_menu-paddingH;
	.xf-menuFooter();
	.m-clearFix();

	&.menu-footer--close
	{
		padding-left: @_menu-closePaddingH;
		padding-right: @_menu-closePaddingH;
	}

	&:not(.menu-footer--split)
	{
		.menu-footer-counter
		{
			float: left;
		}

		.menu-footer-controls
		{
			float: right;
		}
	}

	&.menu-footer--split
	{
		display: flex;
		align-items: center;

		.menu-footer-main,
		.menu-footer-counter
		{
			flex-grow: 1;
		}

		.menu-footer-select:not(:last-child)
		{
			margin: 0 1em;
		}

		.menu-footer-opposite,
		.menu-footer-controls
		{
			margin-left: auto;
		}
	}
}]]></template>
    <template title="core_overlay.less" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[// #################################### OVERLAYS ################################

.overlay-container
{
	display: none;
	position: fixed;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	z-index: @zIndex-9;
	background: @xf-overlayMaskColor;
	-webkit-overflow-scrolling: touch;
	opacity: 0;
	.m-transition(opacity);

	&.is-transitioning
	{
		display: block;
	}

	&.is-active
	{
		display: block;
		backdrop-filter: blur(5px);
		opacity: 1;
	}
}

.overlay
{
	position: relative;
	margin: 40px auto 10px;
	margin-top: @xf-overlayTopMargin;
	width: 100%;
	max-width: 800px;
	.xf-pageBackground();
	color: @xf-textColor;
	border-radius: @xf-blockBorderRadius;
	.m-dropShadow(0, 5px, 15px, 0, .5);
	outline: none;

	> .overlay-title:first-child,
	.overlay-firstChild
	{
		border-top-left-radius: @xf-blockBorderRadius;
		border-top-right-radius: @xf-blockBorderRadius;
	}

	> .overlay-content > *:last-child,
	.overlay-lastChild
	{
		border-bottom-left-radius: @xf-blockBorderRadius;
		border-bottom-right-radius: @xf-blockBorderRadius;
	}
}

@media (max-width: 820px)
{
	.overlay
	{
		max-width: ~"calc(100% - 20px)";
	}
}

.overlay-title
{
	.m-clearFix();

	display: none;
	margin: 0;
	font-weight: @xf-fontWeightNormal;
	.xf-overlayHeader();

	.overlay &
	{
		display: block;
	}
}

.overlay-titleCloser
{
	float: right;
	cursor: pointer;
	color: @xf-overlayHeader--color;
	margin-left: 5px;
	text-decoration: none;
	opacity: .5;
	.m-transition();

	&:after
	{
		.m-faBase();
		.m-faContent(@fa-var-times);
	}

	&:hover
	{
		color: inherit;
		text-decoration: none;
		opacity: 1;
	}
}

.overlay-content
{
	.m-clearFix();
}

// when displaying a modal, prevent scrolling on the main content but allow it on the overlay
body.is-modalOpen
{
	overflow: hidden !important;

	.overlay-container,
	.offCanvasMenu
	{
		overflow-y: scroll !important;
	}
}

@media (max-width: @xf-responsiveNarrow)
{
	.overlay-title
	{
		font-size: @xf-fontSizeLarger;
	}
}

// ############################### OVERLAY/BLOCK NESTING ##############################

.block-container > .tabPanes > li,
.block-container > .block-body,
.block-container > .block-body > .block-row,
.overlay-content
{
	> .blocks > .block > .block-container,
	> .block > .block-container,
	> .blockMessage
	{
		margin-left: 0;
		margin-right: 0;
		border-radius: @xf-blockBorderRadius; // restore the radius that might be removed for some viewports as we're within the overlay
		border-left: none;
		border-right: none;
	}

	> .blocks > .block:first-child,
	> .block:first-child,
	> .blockMessage:first-child
	{
		margin-top: 0;

		.block-outer:not(.block-outer--after)
		{
			border-bottom: @xf-borderSize solid @xf-borderColorLight;
			padding: @xf-blockPaddingV;
		}
	}

	> .blocks > .block:last-child,
	> .block:last-child,
	> .blockMessage:last-child
	{
		margin-bottom: 0;

		.block-outer.block-outer--after
		{
			border-top: @xf-borderSize solid @xf-borderColorLight;
			padding: @xf-blockPaddingV;
		}
	}

	> .blocks > .block:first-child > .block-container,
	> .block:first-child > .block-container,
	> .blockMessage:first-child
	{
		border-top: none;
	}

	> .blocks > .block:last-child > .block-container,
	> .block:last-child > .block-container,
	> .blockMessage:last-child
	{
		border-bottom: none;
	}

	> .blocks > .block:not(:first-child) > .block-container,
	> .block:not(:first-child) > .block-container,
	> .blockMessage:not(:first-child)
	{
		.m-borderTopRadius(0);
	}

	> .blocks > .block:not(:last-child) > .block-container,
	> .block:not(:last-child) > .block-container,
	> .blockMessage:not(:last-child)
	{
		.m-borderBottomRadius(0);
	}
}

.overlay-content
{
	> .blocks > .block > .block-container,
	> .block > .block-container,
	> .blockMessage
	{
		.m-borderTopRadius(0);
	}

	> .blocks > .block > .block-container,
	> .block > .block-container
	{
		> :first-child
		{
			.m-borderTopRadius(0);
		}

		> .block-body:first-child > .formRow:first-child
		{
			> dt { border-top-left-radius: 0; }
			> dd { border-top-right-radius: 0; }
		}

		> .dataList:first-child
		{
			tbody:first-child .dataList-row:first-child,
			thead:first-child .dataList-row:first-child
			{
				> .dataList-cell:first-child { border-top-left-radius: 0; }
				> .dataList-cell:last-child { border-top-right-radius: 0; }
			}
		}
	}

	> .block:last-child > .block-container > .formSubmitRow:not(.is-sticky):last-child .formSubmitRow-bar
	{
		border-bottom-left-radius: @block-borderRadius-inner;
		border-bottom-right-radius: @block-borderRadius-inner;
	}
}]]></template>
    <template title="core_pagenav.less" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[// ####################################### PAGE NAVIGATION ########################

@_page-paddingV: xf-default(@xf-buttonBase--padding-top, 6px);
@_page-paddingH: 8px;
@_page-paddingHSimple: 10px;

.pageNavWrapper {}

.m-pageNavElCore()
{
	background: @xf-paletteColor1;
	color: @xf-textColorEmphasized;
	.xf-blockBorder();
	font-size: @xf-fontSizeSmall;
	white-space: nowrap;

	&:hover,
	&:active
	{
		background: @xf-paletteAccent1;
		text-decoration: none;
	}
}

.pageNav-jump
{
	display: inline-block;
	.m-pageNavElCore();
	border-radius: @xf-borderRadiusSmall;
	padding: @_page-paddingV @_page-paddingH;

	&:hover {
		color: black;
	}
	
	&.pageNav-jump--prev:before,
	&.pageNav-jump--next:after
	{
		.m-faBase('Pro', @faWeight-solid);
		font-size: 80%;
		unicode-bidi: isolate; // maintain position in RTL with LTR text
	}

	&.pageNav-jump--prev:before
	{
		.m-faContent("@{fa-var-caret-left}\00a0", .61em, ltr);
		.m-faContent("@{fa-var-caret-right}\00a0", .61em, rtl);
	}

	&.pageNav-jump--next:after
	{
		.m-faContent("\00a0@{fa-var-caret-right}", .61em, ltr);
		.m-faContent("\00a0@{fa-var-caret-left}", .61em, rtl);
	}
}

.pageNav-main
{
	.m-listPlain();
	display: inline-table;
}

.pageNav-page
{
	display: table-cell;
	.m-pageNavElCore();

	&:not(:last-child)
	{
		border-right: none;
	}

	&:not(:first-child)
	{
		border-left-color: @xf-borderColorLight;
	}

	&:first-child
	{
		.m-borderLeftRadius(@xf-borderRadiusSmall);
	}

	&:last-child
	{
		.m-borderRightRadius(@xf-borderRadiusSmall);
	}

	> a
	{
		display: block;
		padding: @_page-paddingV @_page-paddingH;
		text-decoration: none;
		
	}

	&.pageNav-page--current
	{
		background: #35393c;
		color: @xf-textColorEmphasized;
		cursor: pointer;

		&:hover,
		&:active
		{
			
		}

		+ .pageNav-page
		{
			border-left: none;
		}
	}
}

// Hide relative page numbers on narrow devices when we have a skip entry as we don't necessarily have space.
@media (max-width: @xf-responsiveNarrow)
{
	.pageNav--skipStart
	{
		.pageNav-page.pageNav-page--earlier
		{
			display: none;
		}
	}

	.pageNav--skipEnd
	{
		.pageNav-page.pageNav-page--later
		{
			display: none;
		}

		.pageNav-page.pageNav-page--skipEnd
		{
			border-left: none;
		}
	}
}

// ########################### SIMPLE PAGE NAV VARIANT ########################

.pageNavSimple
{
	display: inline-flex;
}

.pageNavSimple-el
{
	display: inline-block;
	.xf-blockBorder();
	border-radius: @xf-borderRadiusSmall;
	padding: @_page-paddingV @_page-paddingHSimple;
	font-size: @xf-fontSizeSmall;
	text-align: center;
	white-space: nowrap;
	margin-right: 4px;

	&:last-child
	{
		margin-right: 0;
	}

	&.pageNavSimple-el--current
	{
		.xf-contentAccentBase();

		&:hover,
		&:active
		{
			background: xf-intensify(@xf-contentAccentBg, 3%);
			text-decoration: none;
		}
	}

	&.pageNavSimple-el--prev,
	&.pageNavSimple-el--next
	{
		background: linear-gradient(0deg, @xf-contentHighlightBg, mix(@xf-contentHighlightBg, @xf-contentBg, 25%));
		color: @xf-linkColor;
		min-width: 75px;

		@media (max-width: 350px)
		{
			min-width: 0;
		}

		&:hover,
		&:active
		{
			background: xf-intensify(@xf-contentHighlightBg, 3%);
			text-decoration: none;
		}

		i:before
		{
			.m-faBase('Pro', @faWeight-solid);
		}
	}

	&.pageNavSimple-el--prev i:before
	{
		.m-faContent(@fa-var-caret-left, .44em, ltr);
		.m-faContent(@fa-var-caret-right, .44em, rtl);
	}

	&.pageNavSimple-el--next i:before
	{
		.m-faContent(@fa-var-caret-right, .44em, ltr);
		.m-faContent(@fa-var-caret-left, .44em, rtl);
	}

	&.pageNavSimple-el--first,
	&.pageNavSimple-el--last
	{
		border-color: transparent;
		padding-left: (@_page-paddingHSimple / 2);
		padding-right: (@_page-paddingHSimple / 2);
		color: fade(@xf-linkColor, 60%);

		&:hover,
		&:active
		{
			.xf-blockBorder();
			background: xf-intensify(@xf-contentHighlightBg, 3%);
			color: @xf-linkColor;
			text-decoration: none;
		}

		i:before
		{
			.m-faBase('Pro', @faWeight-solid);
		}
	}

	&.pageNavSimple-el--first i:before
	{
		.m-faContent(@fa-var-backward, 1em, ltr);
		.m-faContent(@fa-var-forward, 1em, rtl);
	}

	&.pageNavSimple-el--last i:before
	{
		.m-faContent(@fa-var-forward, 1em, ltr);
		.m-faContent(@fa-var-backward, 1em, rtl);
	}

	&.is-disabled
	{
		border-color: transparent;
		background: none;
		color: @xf-textColorMuted;
		text-decoration: none;
		pointer-events: none;

		&:hover
		{
			background: none;
			color: black;
		}
	}
}

// #################### DISPLAY VARIANTS #########################

.pageNavWrapper--simple
{
	.pageNav
	{
		display: none;
	}
}

.pageNavWrapper--full
{
	.pageNavSimple
	{
		display: none;
	}
}

.pageNavWrapper--mixed
{
	.pageNavSimple
	{
		display: none;
	}

	@media (max-width: @xf-responsiveMedium)
	{
		.pageNav
		{
			display: none;
		}

		.pageNavSimple
		{
			display: inline-flex;
		}
	}
}

// Hide any block page nav that goes before the block as we will be wasting vertical space.
@media (max-width: @xf-responsiveNarrow)
{
	.block-outer:not(.block-outer--after) .pageNavWrapper:not(.pageNavWrapper--forceShow)
	{
		display: none;
	}

	// this is a sanity check in case .block-outer--after is forgotten
	.block-container + .block-outer .pageNavWrapper
	{
		display: block;
	}
}]]></template>
    <template title="core_pikaday.less" type="public" addon_id="XF" version_id="2010170" version_string="2.1.1"><![CDATA[@pd-text-color: @xf-textColor;
@pd-title-color: @xf-linkColor;
@pd-title-bg: @xf-contentBg;
@pd-picker-bg: @xf-contentBg;
@pd-picker-border: @xf-borderColor;
@pd-picker-border-radius: @xf-borderRadiusMedium;
@pd-th-color: @xf-textColorDimmed;
@pd-day-color: @xf-textColor;
@pd-day-bg: @xf-contentAltBg;
@pd-day-hover-color: @xf-textColorEmphasized;
@pd-day-hover-bg: @xf-contentAccentBg;
@pd-day-today-color: @xf-textColorFeature;
@pd-day-selected-color: @xf-textColorEmphasized;
@pd-day-selected-bg: @xf-contentHighlightBg;
@pd-day-selected-shadow: transparent;
@pd-day-disabled-color: @xf-textColor;
@pd-week-color: @xf-textColorMuted;
@pd-range-color: @xf-textColorAccentContent;
@pd-range-bg: @xf-contentAccentBg;
@pd-range-border: @xf-borderColorAccentContent;

.pika-single {
	z-index: 9999;
	display: block;
	position: relative;
	color: @pd-text-color;
	background: @pd-picker-bg;
	border: 1px solid;
	border-color: @pd-picker-border;
	border-radius: @pd-picker-border-radius;

	&.is-hidden {
		display: none;
	}

	&.is-bound {
		position: absolute;
		.m-dropShadow(0, 5px, 10px, 0, .25);
	}
}

// clear child float (pika-lendar), using the famous micro clearfix hack
// http://nicolasgallagher.com/micro-clearfix-hack/
.pika-single {
	*zoom: 1;

	&:before,
	&:after {
		content: " ";
		display: table;
	}

	&:after { clear: both }
}

.pika-lendar {
	float: left;
	width: 240px;
	margin: 8px;
}

.pika-title {
	position: relative;
	text-align: center;

	select {
		cursor: pointer;
		position: absolute;
		z-index: 9998;
		margin: 0;
		left: 0;
		top: 5px;
		filter: alpha(opacity=0);
		opacity: 0;
	}
}

.pika-label {
	display: inline-block;
	*display: inline;
	position: relative;
	z-index: 9999;
	overflow: hidden;
	margin: 0;
	padding: 5px 3px;
	font-size: 14px;
	line-height: 20px;
	font-weight: bold;
	color: @pd-title-color;
	background-color: @pd-title-bg;
}

.pika-prev,
.pika-next
{
	display: block;
	cursor: pointer;
	position: relative;
	outline: none;
	background: none;
	border: 0;
	padding: 0;
	width: 20px;
	height: 30px;
	white-space: nowrap;
	overflow: hidden;
	opacity: .5;
	font-size: 0;
	color: @pd-title-color;
	background-color: @pd-title-bg;

	&::before
	{
		.m-faBase();
		font-size: @xf-fontSizeLarge;
		vertical-align: middle;
		display: inline-block;
		margin: -4px 6px -4px 0;
	}

	&:hover {
		opacity: 1;
	}

	&.is-disabled {
		cursor: default;
		opacity: .2;
	}
}

.pika-prev
{
	&::before
	{
		.m-faContent(@fa-var-caret-left);
	}
}

.pika-next
{
	&::before
	{
		.m-faContent(@fa-var-caret-right);
	}
}

.pika-prev,
.is-rtl .pika-next {
	float: left;
	*left: 0;
}

.pika-next,
.is-rtl .pika-prev {
	float: right;
	*right: 0;
}

.pika-select {
	display: inline-block;
	*display: inline;
}

.pika-table {
	width: 100%;
	border-collapse: collapse;
	border-spacing: 0;
	border: 0;

	th,
	td {
		width: 14.285714285714286%;
		padding: 0;
	}

	th {
		color: @pd-th-color;
		font-size: 12px;
		line-height: 25px;
		font-weight: bold;
		text-align: center;
	}

	abbr {
		border-bottom: none;
	}
}

.pika-button {
	cursor: pointer;
	display: block;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
	outline: none;
	border: 0;
	margin: 0;
	width: 100%;
	padding: 5px;
	color: @pd-day-color;
	font-size: 12px;
	line-height: 15px;
	text-align: right;
	background: @pd-day-bg;

	.is-today & {
		color: @pd-day-today-color;
		font-weight: bold;
	}

	.is-inrange &,
	.is-startrange &,
	.is-endrange & {
		color: @pd-range-color;
		background: @pd-range-bg;
	}

	.is-startrange &
	{
		.m-borderLeftRadius(3px);
		border-left: 2px solid @pd-range-border;
	}

	.is-endrange &
	{
		.m-borderRightRadius(3px);
		border-right: 2px solid @pd-range-border;
	}

	.is-selected & {
		color: @pd-day-selected-color;
		font-weight: bold;
		background: @pd-day-selected-bg;
		box-shadow: inset 0 1px 3px @pd-day-selected-shadow;
		border-radius: 3px;
	}

	.is-disabled &,
	.is-outside-current-month & {
		pointer-events: none;
		cursor: default;
		color: @pd-day-disabled-color;
		opacity: .3;
	}

	&:hover {
		color: @pd-day-hover-color;
		background: @pd-day-hover-bg;
		box-shadow: none;
		border-radius: 3px;
	}
}

.pika-week {
	font-size: 11px;
	color: @pd-week-color;
}

.pika-time-container {
	clear: both;
}

.pika-time {
	margin: 7px auto 7px;
}]]></template>
    <template title="core_tab.less" type="public" addon_id="XF" version_id="2010170" version_string="2.1.1"><![CDATA[// ################################## TABS ####################################

.tabs
{
	display: flex;

	&.tabs--wrappable
	{
		flex-wrap: wrap;
	}
}

.tabs-tab
{
	display: inline-block;
	cursor: pointer;
	white-space: nowrap;
	color: inherit;
	font-weight: inherit;
	text-decoration: none;
	.m-transition();

	&:hover
	{
		text-decoration: none;
	}
}

.tabs-extra
{
	float: right;
	position: relative;
	margin-left: auto;
	padding: 0 0 0 @xf-paddingMedium;
	align-self: center;
	white-space: nowrap;

	a
	{
		color: inherit;
		text-decoration: none;
		display: block;
		padding: @xf-paddingMedium;
	}
}

.tabPanes
{
	.m-listPlain();

	> li
	{
		display: none;

		&.is-active
		{
			display: block;
		}
	}
}

// ################################# OUTER TABS #########################

.tabs--standalone
{
	padding: 0;
	margin-bottom: @xf-elementSpacer;
	font-weight: @xf-fontWeightNormal;
	.xf-blockBorder();
	.xf-standaloneTab();
	.m-tabsTogether(xf-default(@xf-standaloneTab--font-size, @xf-fontSizeNormal));

	.tabs-tab
	{
		padding: max(0px, @xf-blockPaddingV + @xf-borderSizeFeature) @xf-blockPaddingH @xf-blockPaddingV;
		border-bottom: @xf-borderSizeFeature solid transparent;

		&:hover
		{
			color: @xf-standaloneTabSelected--color;
		}

		&.is-active
		{
			.xf-standaloneTabSelected();
		}
	}

	.hScroller-action
	{
		.m-hScrollerActionColorVariation(
			xf-default(@xf-standaloneTab--background-color, transparent),
			xf-default(@xf-standaloneTab--color, ~""),
			xf-default(@xf-standaloneTabSelected--color, ~"")
		);
	}
}

@media (max-width: @xf-responsiveEdgeSpacerRemoval)
{
	.tabs--standalone
	{
		margin-left: -@xf-pageEdgeSpacer;
		margin-right: -@xf-pageEdgeSpacer;
		border-radius: 0;
		border-left: none;
		border-right: none;
	}
}]]></template>
    <template title="dt_extra.less" type="public" addon_id="" version_id="0" version_string=""><![CDATA[.p-navgroup-link--logIn,
.p-navgroup-link--register
{
	.p-navgroup-linkText
	{
		display: inline-block;
	}
}
.p-navgroup-link i::before
{
	content: '';
	position: absolute;
	top: -4px;
	left: -4px;
	display: block;
	width: 25px;
	height: 25px;
	background-repeat: no-repeat;
	background-position: center;
}
.p-navgroup-link.p-navgroup-link--alerts i::before
{
	background-image: url({{ property('dt_files_path') }}/img/bell-border.svg);
}
.p-navgroup-link.p-navgroup-link--conversations i::before
{
	background-image: url({{ property('dt_files_path') }}/img/envelope-border.svg);
}
.p-navgroup-link.p-navgroup-link--search i::before
{
	background-image: url({{ property('dt_files_path') }}/img/search-border.svg);
}
.p-navgroup-link.p-navgroup-link--user::before {
    content: '';
	position: absolute;
    top: 0;
	left: 0;
    display: block;
    width: 72px;
    height: 58px;
    background-image: url({{ property('dt_files_path') }}/img/avatar-ring-l.svg),
					  url({{ property('dt_files_path') }}/img/avatar-ring-m.svg),
					  url({{ property('dt_files_path') }}/img/avatar-ring-s.svg);
    background-size: 72px 72px, 58px 58px, 42px 42px;
    background-repeat: no-repeat, no-repeat, no-repeat;
    background-position: center, center, center;
}
.menu-arrow {
	display: none;
}
.p-body-inner {
	background: @xf-paletteColor4;
}
.block.block--category {
	.block-container {
		background: rgb(66, 70, 73);
	}
	.block-header {
		background: @xf-contentBg;
		padding: 11px @xf-paddingLarge;
		padding-left: 80px;
		
		a
		{
			position: relative;
			z-index: 2;
		}
	}
}
.block-header--animation
{
	position: absolute;
	top: 0;
	left: 0;
	width: 200px;
	height: 100%;
	overflow: hidden;
	
	&::before
	{
		content: '';
		background-image: url({{ property('dt_files_path') }}/img/blockheader-animation.svg);
		background-repeat: no-repeat;
		background-position: center;
		display: block;
		width: 238px;
		height: 238px;
		position: absolute;
		top: -80px;
		left: -80px;
		z-index: 1;
		animation: rotate 20s infinite linear;
	}
}
.block-header--icon
{
	display: block;
	width: 40px;
	height: 40px;
	position: absolute;
	top: 20px;
	left: 20px;
	background-image: url({{ property('dt_files_path') }}/img/blockheader-icon-holder.svg);
	
	svg
	{
		display: block;
    	width: 15px;
    	height: 15px;
		margin: 13px auto;
	}
}

.p-body-sidebar {
	.block-minorHeader {
		padding: 12px @xf-paddingLarge;
	}
}
.structItem-secondaryIcon {
	display: none;
}

.message-userExtras
{
	.pairs
	{
		background: @xf-contentBg;
		padding: @xf-paddingSmall @xf-paddingLarge;
		border: @xf-borderSize solid @xf-borderColor;
		border-radius: 30px;
		margin-top: @xf-paddingSmall;
	}
}

@keyframes rotate {
 0% {
  transform:rotateZ(0deg);
 }
 100% {
  transform:rotateZ(360deg);
 }
}
@keyframes animation {
	0%{
		background-position:0% 50%;
	}
	50%{background-position:100% 50%}
	100%{background-position:0% 50%}
}
@keyframes psToggleNo {
 0% {
  float:left;
  width:11px;
  background-color:#3d3d4d;
 }
 50% {
  width:22px;
  background-color:#3d3d4d;
 }
 100% {
  width:11px;
  float:right;
 }
}]]></template>
    <template title="edit_history_index" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<xf:title>{$title} - {{ phrase('edit_history') }}</xf:title>

<xf:breadcrumb source="$breadcrumbs" />

<xf:form action="{{ link('edit-history') }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:datalist>
				<xf:datarow rowtype="header">
					<xf:cell class="dataList-cell--min">{{ phrase('old') }}</xf:cell>
					<xf:cell class="dataList-cell--min">{{ phrase('new') }}</xf:cell>
					<xf:cell width="30%">{{ phrase('edit_date') }}</xf:cell>
					<xf:cell colspan="2">{{ phrase('member') }}</xf:cell>
				</xf:datarow>
				<xf:datarow rowclass="dataList-row--noHover">
					<xf:cell class="dataList-cell--min dataList-cell--alt dataList-cell--action">
						&nbsp;
					</xf:cell>
					<xf:cell class="dataList-cell--min dataList-cell--alt dataList-cell--action">
						<label><input type="radio" name="new" value="0" checked="true" /></label>
					</xf:cell>
					<xf:cell colspan="3">
						<em>{{ phrase('current_version') }}</em>
					</xf:cell>
				</xf:datarow>
				<xf:foreach loop="$editHistory" key="$historyId" value="$history">
					<xf:datarow rowclass="dataList-row--noHover">
						<xf:cell class="dataList-cell--min dataList-cell--alt dataList-cell--action">
							<label><input type="radio" name="old" value="{$historyId}" {{ $oldId == $historyId ? "checked" : "" }} /></label>
						</xf:cell>
						<xf:cell class="dataList-cell--min dataList-cell--alt dataList-cell--action">
							<label><input type="radio" name="new" value="{$historyId}" /></label>
						</xf:cell>
						<xf:cell>
							<xf:date time="{$history.edit_date}" />
						</xf:cell>
						<xf:cell>
							<xf:username user="{$history.User}" rich="true"/>
						</xf:cell>
						<xf:action href="{{ link('edit-history/view', $history) }}" overlay="true" >
							{{ phrase('view') }}
						</xf:action>
					</xf:datarow>
				</xf:foreach>
				<xf:if is="$editCount && $editCount > $editHistory.count()">
					<xf:datarow>
						<xf:cell class="dataList-cell--alt" colspan="5">
							{{ phrase('this_content_edited_total_of_x_times_old_records_removed', {'count': $editCount|number}) }}
						</xf:cell>
					</xf:datarow>
				</xf:if>
			</xf:datalist>
		</div>
		<div class="block-footer">
			<span class="block-footer-controls">
				<xf:button type="submit" name="compare" value="1" class="button--primary">{{ phrase('compare_versions') }}</xf:button>
			</span>
		</div>
	</div>
	<xf:hiddenval name="content_type">{$contentType}</xf:hiddenval>
	<xf:hiddenval name="content_id">{$contentId}</xf:hiddenval>
</xf:form>]]></template>
    <template title="editor.less" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[/* XF-RTL:disable */
{{ include('editor_base.less') }}
/* XF-RTL:enable */

// this allows us to ensure that when we scroll the editor into view, this goes below the fixed header
.fr-box.is-scrolling-to:before
{
	display: block;
	content: '';

	.m-stickyHeaderConfig(@xf-publicNavSticky);
	height: (@_stickyHeader-height + @_stickyHeader-offset);
	margin-top: -(@_stickyHeader-height + @_stickyHeader-offset);

	@media (max-height: 360px)
	{
		display: none;
	}
}

.fr-view
{
	.m-inputZoomFix();

	img.fr-draggable:not(.smilie),
	.bbImage
	{
		max-width: 100%;
		height: auto;
	}

	// remove image margins from images - they give the illusion of added spaces
	// extra specificity required for correct behaviour
	&&.fr-element img.fr-dii
	{
		margin: 0;
	}

	.fr-video
	{
		position: relative;

		video
		{
			width: 560px;
			max-width: 100%;
		}
	}

	p
	{
		margin-bottom: 0;
		margin-top: 0;
	}

	&.fr-element
	{
		.fr-disabled
		{
			.xf-inputDisabled() !important;
		}

		@attach-margin: @xf-bbCodeImgFloatMargin;

		img.fr-dii
		{
			display: inline-block;
			float: none;
			margin-left: @attach-margin;
			margin-right: @attach-margin;
			max-width: calc(100% - (2 * @attach-margin));

			&.fr-fil {
				float: left;
				margin: @attach-margin @attach-margin @attach-margin 0;
				max-width: calc(100% - @attach-margin);
			}

			&.fr-fir {
				float: right;
				margin: @attach-margin 0 @attach-margin @attach-margin;
				max-width: calc(100% - @attach-margin);
			}
		}

		.fr-video.fr-dvi
		{
			display: inline-block;
			float: none;
			margin-left: @attach-margin;
			margin-right: @attach-margin;
			max-width: calc(100% - (2 * @attach-margin));

			&.fr-fvl {
				float: left;
				margin: @attach-margin @attach-margin @attach-margin 0;
				max-width: calc(100% - @attach-margin);
			}

			&.fr-fvr {
				float: right;
				margin: @attach-margin 0 @attach-margin @attach-margin;
				max-width: calc(100% - @attach-margin);
			}
		}
	}

	.m-tableBase();
}

.fr-command.fr-btn + .fr-dropdown-menu
{
	display: none;

    .fr-dropdown-wrapper
	{
		background: @xf-contentBg;
		border: @xf-borderSize solid @xf-borderColor;

		.fr-dropdown-content ul.fr-dropdown-list li a img
		{
			// note: this selector roughly matches a core froala selector
			height: 1em;
		}
	}
}

.fr-toolbar .fr-btn.fr-active[data-cmd="xfBbCode"]
{
	color: red;
}

.fr-popup
{
	background: @xf-contentBg;
}

.fr-popup .fr-input-line
{
	padding: 16px 0 8px;

	input[type="text"],
	textarea
	{
		.xf-input();
		margin: 0;
		line-height: @xf-lineHeightDefault;
		.m-transition(background, color;);

		&:focus
		{
			.xf-input(border);
			.xf-inputFocus();
		}

		.m-inputZoomFix();
	}

	input + label,
	textarea + label
	{
		line-height: 1.2;
		font-size: 12px;
		background: transparent;
	}

	input.fr-not-empty:focus + label,
	textarea.fr-not-empty:focus + label
	{
		color: @xf-textColorMuted;
	}
}

.fr-popup .fr-color-set
{
	> span .fr-selected-color
	{
		font-family: 'Font Awesome 5 Pro';
		font-weight: @xf-fontAwesomeWeight;
	}
}

.fr-popup .fr-color-hex-layer
{
	.fr-input-line
	{
		padding-top: 16px;
		width: 150px;
	}

	.fr-action-buttons
	{
		margin-top: 18px;

		.m-frCommandStyle();
	}
}

.fr-popup .fr-action-buttons
{
	height: auto;

	.m-frCommandStyle();
}

.m-frCommandStyle()
{
	button.fr-command
	{
		.m-buttonBase();
		.xf-buttonPrimary();
		.m-buttonBlockColorVariationSimple(xf-default(@xf-buttonPrimary--background-color, transparent));
		height: auto;
		min-width: 0;
		line-height: @xf-lineHeightDefault;

		&:hover,
		&:active,
		&:focus
		{
			// overriding Froala's hover
			color: @xf-buttonPrimary--color;
		}
	}
}

@_menu-arrowSize: 8px;

.fr-popup.fr-active
{
	margin-top: 15px;

	border-left: 0;
	border-right: 0;
	border-bottom: 0;
	border-radius: @xf-menuBorderRadius;
	opacity: 1;
	.m-dropShadow(0, 5px, 10px, 0, .35);

	.fr-buttons
	{
		border: 0;
	}
}

.fr-popup .fr-arrow
{
	top: -@_menu-arrowSize - 3px;
	border-left-width: @_menu-arrowSize;
	border-right-width: @_menu-arrowSize;
	border-bottom-width: @_menu-arrowSize;
	margin-left: -@_menu-arrowSize;
}

// RTE disabled case
.fr-box textarea.input
{
	border-top: none;
	.border-radius(0 0 @border-radius @border-radius);
}

.editorDraftIndicator
{
	.m-transition();
	opacity: 0;
	position: absolute;
	bottom: 7px;
	right: 12px;
	width: 7px;
	height: 7px;
	border-radius: 3.5px;
	background: rgb(127, 185, 0);

	&.is-active
	{
		opacity: 1;
	}
}

@editorSmiliesBg: xf-intensify(@xf-contentBg, 1%);

.editorSmilies
{
	display: none;
	border: @xf-borderSize solid @xf-borderColorHeavy;
	border-top: none;
	background: @xf-editorToolbarBg;
	overflow: hidden;
	.m-transition(all, -xf-height;);
	height: 0;

	&.is-active
	{
		display: block;
		height: auto;
	}

	&.is-transitioning
	{
		display: block;
	}

	.smilie
	{
	//	cursor: pointer;
	}

	.tabPanes > li
	{
		padding: @xf-blockPaddingV @xf-blockPaddingH;
	}
}

.tabs--editor // takes some hints from .tabs--standalone
{
	color: @xf-paletteColor4;
	background: @editorSmiliesBg;
	font-weight: @xf-fontWeightNormal;
	border-bottom:  @xf-borderSize solid @xf-borderColor;

	.m-tabsTogether(@xf-fontSizeSmall);

	.tabs-tab
	{
		padding: @xf-blockPaddingV @xf-blockPaddingH max(0px, @xf-blockPaddingV - @xf-borderSizeFeature);
		border-bottom: @xf-borderSizeFeature solid transparent;

		&:hover
		{
			color: @xf-standaloneTab--color;
		}

		&.is-active
		{
			color: @xf-textColorFeature;
			border-color: @xf-borderColorFeature;
		}
	}

	.hScroller-action
	{
		.m-hScrollerActionColorVariation(
			@editorSmiliesBg,
			xf-default(@xf-standaloneTab--color, ~""),
			xf-default(@xf-standaloneTabSelected--color, ~"")
		);
	}
}

@_menu-padding: @xf-paddingMedium;
@_menu-padding-large: @xf-paddingLarge;

.menu--emoji
{
	width: 412px;
	max-width: ~"calc(100% - @{xf-pageEdgeSpacer})";

	.menu-content
	{
		position: relative;
	}

	.menu-scroller
	{
		max-height: 250px;
		border-top: 0;
	}

	.menu-row
	{
		padding: @_menu-padding @_menu-padding;

		&.menu-row--insertedMessage
		{
			.m-hiddenEl(true);
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			border-bottom: @xf-borderSize solid @xf-borderColorLight;
		}
	}

	.menu-emojiInsertedMessage
	{
		display: flex;
		align-items: center;
		justify-content: center;
		min-height: 35px;
		font-size: @xf-fontSizeNormal;

		img { max-height: 32px; }
		span { margin-left: .5em }
	}

	.menu-header
	{
		background: none;
		.xf-formSectionHeader();
		background-color: @xf-contentBg;
		z-index: @zIndex-1;
		font-size: @xf-fontSizeNormal;
		position: -webkit-sticky;
		position: sticky;
		padding: @_menu-padding @_menu-padding-large;
		top: 0;
	}

	.block-body--emoji
	{
		border-top: @xf-borderSize solid @xf-borderColorLight;
	}

	.is-hidden
	{
		display: none;
	}
}

.emojiList
{
	.m-listPlain();

	display: flex;
	flex-wrap: wrap;
	justify-content: flex-start;

	margin-right: -3px;
	margin-bottom: -3px;

	> li
	{
		min-width: 32px;
		margin-right: 3px;
		margin-bottom: 3px;
		
		border-radius: @xf-borderRadiusMedium;
		cursor: pointer;

		&:hover,
		&:focus
		{
			background-color: @xf-paletteColor2;
		}

		a
		{
			min-width: 32px;
			height: 32px;
			font-size: 24px;

			display: flex;
			justify-content: center;
			align-items: center;
			cursor: pointer;
			overflow: hidden;

			&:hover,
			&:focus
			{
				text-decoration: none;
			}

			img
			{
				max-height: 32px;
			}

			.smilie.smilie--emoji
			{
				width: 22px;
			}

			.smilie--lazyLoad
			{
				visibility: hidden;
			}
		}
	}
}

.editorPlaceholder
{
	.is-hidden
	{
		display: none;
	}

	cursor: text;

	.editorPlaceholder-placeholder
	{
		.input
		{
			padding: @xf-paddingLarge;
			//border-radius: 0;
			//border-top: 3px solid #47a7eb;

			span
			{
				&:before
				{
					.m-faBase();
					.m-faContent(@fa-var-pen);
				}
			}
		}
	}
}]]></template>
    <template title="editor_base.less" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[/***** froala.less *****/

/***** variables.less *****/

// Theme Name.
@theme: 'theme';

// UI colors
@ui-color: #1E88E5;
@ui-text: #222222;
@ui-hover-light-color: mix(@white, #999, 90%);
@ui-hover-color: mix(@white, #999, 80%);
@ui-focused-color: mix(@white, #999, 60%);
@ui-disabled-color: mix(@white, #000, 74%);
@ui-bg: @white;
@ui-font-size: 14px;
@ui-border-color: #222222;
@ui-border-top: 5px solid @ui-border-color;

// Separator
@separator-size: 1px;
@separator-color: mix(@white, #999, 80%);

// Generic.
@white: #FFF;
@black: #000;
@gray: #CCCCCC;
@font-family: Arial, Helvetica, sans-serif;
@border-radius: 2px;
@arrow-size: 5px;
@transition-timing: 0.2s ease 0s;

// Screen sizes.
@screen-xs: 480px;
@screen-sm: 768px;
@screen-md: 992px;
@screen-lg: 1200px;
@screen-xs-max: (@screen-sm - 1);
@screen-sm-max: (@screen-md - 1);
@screen-md-max: (@screen-lg - 1);
@screen-lg-max: 'auto';

// Tooltip
@tooltip-bg: #222222;
@tooltip-text: #FFFFFF;
@tooltip-font-size: 11px;
@tooltip-line-height: 22px;

// Editor properties.
@editor-padding: 16px;
@editor-bg: #FFF;
@editor-text: #000;
@editor-shadow-level: 1;
@editor-border: 0px;

// Text selection colors.
@selection-bg: #b5d6fd;
@selection-text: #000;

// Placeholder properties.
@placeholder-size: 12px;
@placeholder-color: #AAA;

// Button colors.
@btn-text: #222222;
@btn-hover-text: #222222;
@btn-hover-bg: @ui-hover-color;

@btn-active-text: @ui-color;
@btn-active-bg: transparent;
@btn-active-hover-text: @ui-color;
@btn-active-hover-bg: @btn-hover-bg;

@btn-selected-text: @btn-text;
@btn-selected-bg: @ui-focused-color;
@btn-active-selected-text: @ui-color;
@btn-active-selected-bg: @btn-selected-bg;

@btn-disabled-color: @ui-disabled-color;

// Button size.
@btn-width: 38px;
@btn-height: 38px;
@btn-margin: 2px;
@btn-font-size: 14px;

// Image.
@image-margin: 5px;

// Image and Video
@handler-size: 12px;
@handler-size-lg: 10px;

// Code View
@code-view-bg: #FFF;
@code-view-text: #000;

// Table properties.
@table-border: 1px solid #DDD;
@table-resizer: 1px solid @ui-color;

// Insert table grid.
@insert-table-grid: @table-border;

// Quick insert.
@floating-btn-bg: #FFF;
@floating-btn-text: @ui-color;
@floating-btn-hover-bg: @ui-hover-color;
@floating-btn-hover-text: @ui-color;
@floating-btn-size: 32px;
@floating-btn-font-size: 14px;
@floating-btn-border: none;

// List menu.
@dropdown-arrow-width: 4px;
@dropdown-item-active-bg: @ui-focused-color;
@dropdown-max-height: 275px;
@dropdown-options-width: 16px;
@dropdown-options-margin-left: -5px;
@dropdown-options-border-left: solid 1px #FAFAFA;

// Image manager.
@modal-bg: @white;
@modal-overlay-color: #000;

// Destroy buttons (delete in image manager).
@modal-destroy-btn-bg: #B8312F;
@modal-destroy-btn-text: @white;
@modal-destroy-btn-hover-bg: mix(contrast(@modal-destroy-btn-bg, @black, @white, 50%), @modal-destroy-btn-bg, 10%);
@modal-destroy-btn-hover-text: @white;

// Popups.
@popup-layer-width: 300px;

// Inputs.
@input-border-color: mix(@white, #000, 74%);
@input-label-color: mix(@white, #000, 50%);

// Quote.
@blockquote-level1-color: #5E35B1;
@blockquote-level2-color: #00BCD4;
@blockquote-level3-color: #43A047;

// Char counter.
@char-counter-border: solid 1px mix(@white, #999, 80%);

@drag-helper-border: solid 1px @ui-color;
@drag-helper-bg: @ui-color;


// ################# CUSTOM OVERRIDES ################
{{ include('editor_override.less') }}


/***** mixins.less *****/

.resize(@val) {
  resize: @val;
  -moz-resize: @val;
  -webkit-resize: @val;
}

.opacity (@opacity: 0.5) {
	-webkit-opacity: 	@opacity;
	-moz-opacity: 		@opacity;
	opacity: 		@opacity;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
}

.transition(@transition) {
	-webkit-transition: @transition;
	-moz-transition:    @transition;
	-ms-transition:     @transition;
	-o-transition:      @transition;
}

.transform(@string){
	-webkit-transform: @string;
	-moz-transform: 	 @string;
	-ms-transform: 		 @string;
	-o-transform: 		 @string;
}

.box-sizing (@type: border-box) {
	-webkit-box-sizing: @type;
	-moz-box-sizing:    @type;
	box-sizing:         @type;
}

.border-radius (@radius: 0) {
  border-radius: @radius;
  -moz-border-radius: @radius;
  -webkit-border-radius: @radius;

  -moz-background-clip:    padding;
	-webkit-background-clip: padding-box;
	background-clip:         padding-box;
}

.user-select(@select) {
  user-select: @select;
  -o-user-select:@select;
  -moz-user-select: @select;
  -khtml-user-select: @select;
  -webkit-user-select: @select;
  -ms-user-select: @select;
}

.box-shadow(@shadow) {
  -webkit-box-shadow: @shadow;
  -moz-box-shadow: @shadow;
  box-shadow: @shadow;
}

.material-box-shadow (@level: 1, @direction: 1) when (@level = 0) {
  .box-shadow(none);
}

.material-box-shadow (@level: 1, @direction: 1) when (@level = 1) {
  @shadow: 0 (@direction * 1px) 3px rgba(0,0,0,0.12), 0 (@direction * 1px) 1px 1px rgba(0,0,0,0.16);
  .box-shadow(@shadow);
}

.material-box-shadow (@level: 1, @direction: 1) when (@level = 2) {
  @shadow: 0 (@direction * 3px) 6px rgba(0,0,0,0.16), 0 (@direction * 2px) 2px 1px rgba(0,0,0,0.14);
  .box-shadow(@shadow);
}

.material-box-shadow (@level: 1, @direction: 1) when (@level = 3) {
  @shadow: 0 (@direction * 5px) 8px rgba(0,0,0,0.19), 0 (@direction * 4px) 3px 1px rgba(0,0,0,0.14);
  .box-shadow(@shadow);
}

.material-box-shadow (@level: 1, @direction: 1) when (@level = 4) {
  @shadow: 0 (@direction * 8px) 12px rgba(0,0,0,0.25), 0 (@direction * 6px) 3px 1px rgba(0,0,0,0.12);
  .box-shadow(@shadow);
}

.material-box-shadow (@level: 1, @direction: 1) when (@level >= 5) {
  @shadow: 0 (@direction * 10px) 16px rgba(0,0,0,0.30), 0 (@direction * 6px) 8px rgba(0,0,0,0.22);
  .box-shadow(@shadow);
}

.clearfix {
  &::after {
    clear: both;
    display: block;
    content: "";
    height: 0;
  }
}

.column-count(@count) {
  column-count: @count;
  -moz-column-count: @count;
  -webkit-column-count: @count;
}

.column-gap(@gap) {
  column-gap: @gap;
  -moz-column-gap: @gap;
  -webkit-column-gap: @gap;
}

.animation (@val) {
	-webkit-animation: @val;
  -moz-animation: @val;
  -o-animation: @val;
  animation: @val;
}

.handler-size(@size) {
  .fr-handler {
    width: @size;
    height: @size;

    &.fr-hnw {
      left: (-@size / 2);
      top: (-@size / 2);
    }

    &.fr-hne {
      right: (-@size / 2);
      top: (-@size / 2);
    }

    &.fr-hsw {
      left: (-@size / 2);
      bottom: (-@size / 2);
    }

    &.fr-hse {
      right: (-@size / 2);
      bottom: (-@size / 2);
    }
  }
}

.font-smoothing() {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.hide-by-clipping {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}
.display-inline-flex() {

  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

/***** core/element.less *****/

.fr-element, .fr-element:focus {
  outline: 0px solid transparent;
}

.fr-box.fr-basic {
  .fr-element {
    color: @editor-text;
    padding: @editor-padding;
    .box-sizing(border-box);
    overflow-x: auto;
    min-height: (20px + (2 * @editor-padding));
  }

  &.fr-rtl {
    .fr-element {
      text-align: right;
    }
  }
}

.fr-element {
  background: transparent;
  position: relative;
  z-index: 2;

  // CSS rule for iPad not being able to select sometimes.
  -webkit-user-select: auto;

  // Fix bootstrap select.
  a {
    .user-select(auto);
  }

  &.fr-disabled {
    .user-select(none);
  }

  [contenteditable="true"] {
    outline: 0px solid transparent;
  }
}

.fr-box {
  a.fr-floating-btn {
    .material-box-shadow (@editor-shadow-level);
    .border-radius(100%);
    height: @floating-btn-size;
    width: @floating-btn-size;
    text-align: center;
    background: @floating-btn-bg;
    color: @floating-btn-text;
    .transition(background @transition-timing, color @transition-timing, transform @transition-timing;);
    outline: none;
    left: 0;
    top: 0;
    line-height: (@floating-btn-size);
    .transform(scale(0));
    text-align: center;
    display: block;
    .box-sizing(border-box);
    border: @floating-btn-border;

    svg {
      .transition(transform @transition-timing;);
      fill: @floating-btn-text;
    }

    i, svg {
      font-size: @floating-btn-font-size;
      line-height: @floating-btn-size;
    }

    &.fr-btn + .fr-btn {
      margin-left: 10px;
    }

    &:hover {
      background: @floating-btn-hover-bg;
      cursor: pointer;

      svg {
        fill: @floating-btn-hover-text;
      }
    }
  }

  .fr-visible {
    a.fr-floating-btn {
      .transform(scale(1));
    }
  }
}

/***** core/iframe.less *****/

iframe.fr-iframe {
  width: 100%;
  border: none;
  position: relative;
  display: block;
  z-index: 2;
  .box-sizing(border-box);
}

/***** core/wrapper.less *****/

.fr-wrapper {
  position: relative;
  z-index: 1;
  .clearfix();

  .fr-placeholder {
    position: absolute;
    font-size: @placeholder-size;
    color: @placeholder-color;
    z-index: 1;
    display: none;
    top: 0;
    left: 0;
    right: 0;
    overflow: hidden;
  }

  &.show-placeholder {
    .fr-placeholder {
      display: block;
    }
  }

  ::-moz-selection {
    background: #44a2fa;
    color: @selection-text;
  }

  ::selection {
    background: #44a2fa;
    color: @selection-text;
  }
}

.fr-box.fr-basic {
  .fr-wrapper {
    background: @editor-bg;
    border: @editor-border;
    border-top: 0;
    top: 0;
    left: 0;
  }
}

.fr-box.fr-basic {
  &.fr-top .fr-wrapper {
    border-top: 0;
    .border-radius(0 0 @border-radius @border-radius);
    .material-box-shadow(@editor-shadow-level);
  }

  &.fr-bottom .fr-wrapper {
    border-bottom: 0;
    .border-radius(@border-radius @border-radius 0 0);
    .material-box-shadow(@editor-shadow-level, -1);
  }
}

@media (min-width: @screen-md) {
  .fr-box.fr-document {
    min-width: 21cm;

    .fr-wrapper {
      text-align: left;
      padding: 30px;
      min-width: 21cm;
      background: #EFEFEF;

      .fr-element {
        text-align: left;
        background: #FFF;
        width: 21cm;
        margin: auto;
        min-height: 26cm !important;
        padding: 1cm 2cm;
        .material-box-shadow(@editor-shadow-level);
        overflow: visible;
        z-index: auto;

        hr {
          margin-left: -2cm;
          margin-right: -2cm;
          background: #EFEFEF;
          height: 1cm;
          outline: none;
          border: none;
        }

        img {
          z-index: 1;
        }
      }
    }
  }
}

/***** tooltip.less *****/

.fr-tooltip {
  position: absolute;
  top: 0;
  left: 0;
  padding: 0 8px;
  .border-radius(@border-radius);
  .material-box-shadow(((@editor-shadow-level + 1) * min(@editor-shadow-level, 1)));
  background: @tooltip-bg;
  color: @tooltip-text;
  font-size: @tooltip-font-size;
  line-height: @tooltip-line-height;
  font-family: @font-family;
  .transition(opacity @transition-timing);
  .opacity(0);
  left: -3000px;
  .user-select(none);
  z-index: 2147483647;
  text-rendering: optimizelegibility;
  .font-smoothing();

  &.fr-visible {
    .opacity(1);
  }
}

/***** ui/buttons.less *****/

// Command button.

.fr-toolbar, .fr-popup {
  .fr-btn-wrap {
    float: left;
    white-space: nowrap;
    position: relative;

    &.fr-hidden {
      display: none;
    }
  }

  .fr-command.fr-btn {
    background: transparent;
    color: @btn-text;
  	-moz-outline: 0;
  	outline: 0;
    border: 0;
    line-height: 1;
  	cursor: pointer;
    text-align: left;
  	margin: 0px @btn-margin;
    .transition(background @transition-timing);
    .border-radius(0);
    z-index: 2;
    position: relative;
    .box-sizing(border-box);
    text-decoration: none;
    .user-select(none);
    float: left;
    padding: 0;
    width: @btn-width;
    height: @btn-height;

    &::-moz-focus-inner {
      border: 0;
      padding: 0
    }

    &.fr-btn-text {
      width: auto;
    }

    i, svg {
      display: block;
      font-size: @btn-font-size;
      width: @btn-font-size;
      margin: ((@btn-height - @btn-font-size) / 2) ((@btn-width - @btn-font-size) / 2);
      text-align: center;
      float: none;
    }

    // Used for accessibility instead of aria-label.
    span.fr-sr-only {
      .hide-by-clipping();
    }

    span {
      font-size: @ui-font-size;
      display: block;
      line-height:  (@ui-font-size + 3px);
      min-width: (@btn-width - 2 * @btn-margin);
      float: left;
      text-overflow: ellipsis;
      overflow: hidden;
      white-space: nowrap;
      height: (@btn-font-size + 3px);
      font-weight: bold;
      padding: 0 @btn-margin;
    }

    img {
      margin: ((@btn-height - @btn-font-size) / 2) ((@btn-width - @btn-font-size) / 2);
      width: @btn-font-size;
    }

    // Button is active.
    &.fr-active {
      color: @btn-active-text;
      background: @btn-active-bg;
    }

    &.fr-dropdown {
      &.fr-selection {
        width: auto;

        span {
          font-weight: normal;
        }
      }

      i, span, img, svg {
        margin-left: (((@btn-width - @btn-font-size) / 2) - @dropdown-arrow-width);
        margin-right: (((@btn-width - @btn-font-size) / 2) + @dropdown-arrow-width);
      }

      // Dropdown is visible.
      &.fr-active {
        color: @btn-text;
        background: @btn-selected-bg;

        &:hover, &:focus {
          background: @btn-selected-bg !important;
          color: @btn-selected-text !important;

          &::after {
            border-top-color: @btn-selected-text !important;
          }
        }
      }

      &::after {
        position: absolute;
        width: 0;
      	height: 0;
      	border-left: @dropdown-arrow-width solid transparent;
      	border-right: @dropdown-arrow-width solid transparent;
      	border-top: @dropdown-arrow-width solid @btn-text;
        right: (((@btn-width - @btn-font-size) / 2 - @dropdown-arrow-width) / 2);
        top: ((@btn-height - @dropdown-arrow-width) / 2);
        content: "";
      }
    }

    &.fr-disabled {
      color: @btn-disabled-color;
      cursor: default;

      &::after {
        border-top-color: @btn-disabled-color !important;
      }
    }

    &.fr-hidden {
      display: none;
    }
  }

  &.fr-disabled {
    .fr-btn, .fr-btn.fr-active {
      color: red;

      &.fr-dropdown::after {
        border-top-color: @btn-disabled-color;
      }
    }
  }

  &.fr-rtl {
    .fr-command.fr-btn, .fr-btn-wrap {
      float: right;
    }
  }
}

.fr-toolbar.fr-inline {
  > .fr-command.fr-btn:not(.fr-hidden), > .fr-btn-wrap:not(.fr-hidden) {
    .display-inline-flex();
    float: none;
  }
}

.fr-desktop {
  .fr-command {
    // Hover.
    &:hover, &:focus, &.fr-btn-hover, &.fr-expanded {
      outline: 0;
      color: @btn-hover-text;
      background: @btn-hover-bg;

      &::after {
        border-top-color: @btn-hover-text !important;
      }
    }

    // Button is selected.
    &.fr-selected {
      color: @btn-selected-text;
      background: @btn-selected-bg;
    }

    &.fr-active {
      &:hover, &:focus, &.fr-btn-hover, &.fr-expanded {
        color: @btn-active-hover-text;
        background: @btn-active-hover-bg;
      }

      &.fr-selected {
        color: @btn-active-selected-text;
        background: @btn-active-selected-bg;
      }
    }

    &.fr-disabled {
      &:hover, &:focus, &.fr-selected {
        background: transparent;
      }
    }
  }

  &.fr-disabled {
    .fr-command {
      &:hover, &:focus, &.fr-selected {
        background: transparent;
      }
    }
  }
}

.fr-toolbar.fr-mobile, .fr-popup.fr-mobile {
  .fr-command.fr-blink {
    background: @btn-active-bg;
  }
}

/***** ui/dropdown.less *****/

.fr-command.fr-btn {
  &.fr-options {
    width: @dropdown-options-width;
    margin-left: @dropdown-options-margin-left;

    &.fr-btn-hover, &:hover, &:focus {
      border-left: @dropdown-options-border-left;
    }
  }

  + .fr-dropdown-menu {
    display: inline-block;
    position: absolute;
    right: auto;
    bottom: auto;
    height: auto;
    z-index: 4;
    -webkit-overflow-scrolling: touch;
    overflow: hidden;
    zoom: 1;
    .border-radius(0 0 @border-radius @border-radius);

    &.test-height {
      .fr-dropdown-wrapper {
        .transition(none);
        height: auto;
        max-height: @dropdown-max-height;
      }
    }

    .fr-dropdown-wrapper {
      background: @ui-bg;
      padding: 0;
      margin: auto;
      display: inline-block;
      text-align: left;
      position: relative;
      .box-sizing(border-box);
      .transition(max-height @transition-timing);
      margin-top: 0;
      float: left;
      max-height: 0;
      height: 0;
      margin-top: 0 !important;

      .fr-dropdown-content {
        overflow: auto;
        position: relative;
        max-height: @dropdown-max-height;

        ul.fr-dropdown-list {
          list-style-type: none;
          margin: 0;
          padding: 0;

          li {
            padding: 0;
            margin: 0;
            font-size: 15px;

            a {
              padding: 0 24px;
              line-height: 200%;
              display: block;
              cursor: pointer;
              white-space: nowrap;
              color: inherit;
              text-decoration: none;

              &.fr-active {
                background: @dropdown-item-active-bg;
              }

              &.fr-disabled {
                color: @btn-disabled-color;
                cursor: default;
              }

              .fr-shortcut {
                float: right;
                margin-left: 32px;
                font-weight: bold;
                .opacity(0.75);
              }
            }
          }
        }
      }
    }
  }

  &:not(.fr-active) {
    + .fr-dropdown-menu {
      left: -3000px !important;
    }
  }

  &.fr-active {
    + .fr-dropdown-menu {
      display: inline-block;
      .material-box-shadow(((@editor-shadow-level + 1) * min(@editor-shadow-level, 1)));

      .fr-dropdown-wrapper {
        height: auto;
        max-height: @dropdown-max-height;
      }
    }
  }
}

.fr-bottom > .fr-command.fr-btn {
  + .fr-dropdown-menu {
    .border-radius(@border-radius @border-radius 0 0);
    .material-box-shadow((@editor-shadow-level + 1) * min(@editor-shadow-level, 1), -1);
  }
}

.fr-toolbar, .fr-popup {
  &.fr-rtl {
    .fr-dropdown-wrapper {
      text-align: right !important;
    }
  }
}

/***** ui/modal.less *****/

body.prevent-scroll {
  overflow: hidden;

  &.fr-mobile {
    position: fixed;
    -webkit-overflow-scrolling: touch;
  }
}

.fr-modal {
  color: @ui-text;
  font-family: @font-family;
  position: fixed;
  overflow-x: auto;
  overflow-y: scroll;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  width: 100%;
  z-index: 2147483640;
  text-rendering: optimizelegibility;
  .font-smoothing();
  text-align: center;
  line-height: 1.2;

  &.fr-middle {
    .fr-modal-wrapper {
      margin-top: 0;
      margin-bottom: 0;
      margin-left: auto;
      margin-right: auto;
      top: 50%;
      left: 50%;
      .transform(translate(-50%, -50%));
      position: absolute;
    }
  }

  .fr-modal-wrapper {
    .border-radius(@border-radius);
    margin: 20px auto;
    display: inline-block;
    background: @modal-bg;
    min-width: 300px;
    .material-box-shadow(((@editor-shadow-level + 2) * min(@editor-shadow-level, 1)));
    border: @editor-border;
    border-top: @ui-border-top;
    overflow: hidden;
    width: 90%;
    position: relative;

    @media (min-width: @screen-sm) and (max-width: @screen-sm-max) {
      margin: 30px auto;
      width: 70%;
    }

    @media (min-width: @screen-md) {
      margin: 50px auto;
      width: 960px;
    }

    .fr-modal-head {
      background: @ui-bg;
      .material-box-shadow(((@editor-shadow-level + 1) * min(@editor-shadow-level, 1)));
      border-bottom: @editor-border;
      overflow: hidden;
      position: absolute;
      width: 100%;
      min-height: 42px;
      z-index: 3;
      .transition(height @transition-timing);

      .fr-modal-close {
        padding: 12px;
        width: 20px;
        font-size: 30px;
        cursor: pointer;
        line-height: 18px;
        color: @ui-text;
        .box-sizing(content-box);
        position: absolute;
        top: 0;
        right: 0;
        .transition(color @transition-timing);
      }

      h4 {
        font-size: 18px;
        padding: 12px 10px;
        margin: 0;
        font-weight: 400;
        line-height: 18px;
        display: inline-block;
        float: left;
      }
    }

    div.fr-modal-body {
      height: 100%;
      min-height: 150px;
      overflow-y: scroll;
      padding-bottom: 10px;

      &:focus {
        outline: 0;
      }

      button.fr-command {
        height: 36px;
        line-height: 1;
        color: @ui-color;
        padding: 10px;
        cursor: pointer;
        text-decoration: none;
        border: none;
        background: none;
        font-size: 16px;
        outline: none;
        .transition(background @transition-timing);
        .border-radius(@border-radius);

        + button {
          margin-left: 24px;
        }

        &:hover, &:focus {
          background: @ui-hover-color;
          color: @ui-color;
        }

        &:active {
          background: @ui-focused-color;
          color: @ui-color;
        }
      }

      button::-moz-focus-inner {
        border: 0;
      }
    }
  }
}

&.fr-desktop .fr-modal-wrapper {
  .fr-modal-head {
    i:hover {
      background: @ui-hover-color;
    }
  }
}

// Overlay that appears with modal.
.fr-overlay {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: @modal-overlay-color;
  .opacity(0.5);
  z-index: 2147483639;
}


/***** ui/popup.less *****/

.fr-popup {
  position: absolute;
  display: none;
  color: @ui-text;
  background: @ui-bg;
  .material-box-shadow(@editor-shadow-level);
  .border-radius(@border-radius);
  font-family: @font-family;
  .box-sizing(border-box);
  .user-select(none);
  margin-top: 10px;
  z-index: 2147483635;
  text-align: left;
  border: @editor-border;
  border-top: @ui-border-top;
  text-rendering: optimizelegibility;
  .font-smoothing();
  line-height: 1.2;

  .fr-input-focus {
    background: @ui-hover-light-color;
  }

  &.fr-above {
    margin-top: -10px;
    border-top: 0;
    border-bottom: @ui-border-top;
    .material-box-shadow(@editor-shadow-level, -1);
  }

  &.fr-active {
    display: block;
  }


  &.fr-hidden {
    .opacity(0);
  }

  &.fr-empty {
    display: none !important;
  }

  .fr-hs {
    display: block !important;

    &.fr-hidden {
      display: none !important;
    }
  }

  .fr-input-line {
    position: relative;
    padding: 8px 0;

    input[type="text"], textarea {
      width: 100%;
      margin: 0px 0 1px 0;
      border: none;
      border-bottom: solid 1px @input-border-color;
      color: @ui-text;
      font-size: 14px;
      padding: 6px 0 2px;
      background: rgba(0, 0, 0, 0);
      position: relative;
      z-index: 2;
      .box-sizing(border-box);

      &:focus {
        border-bottom: solid 2px @ui-color;
        margin-bottom: 0px;
      }
    }

    input + label, textarea + label {
      position: absolute;
      top: 0;
      left: 0;
      font-size: 12px;
      color: rgba(0, 0, 0, 0);
      .transition(color @transition-timing);
      z-index: 3;
      width: 100%;
      display: block;
      background: @ui-bg;
    }

    input.fr-not-empty:focus + label, textarea.fr-not-empty:focus + label {
      color: @ui-color;
    }

    input.fr-not-empty + label, textarea.fr-not-empty + label {
      color: @input-label-color;
    }
  }

  input, textarea {
    .user-select(text);
    .border-radius(0);
    outline: none;
  }

  textarea {
    resize: none;
  }

  .fr-buttons {
    .clearfix();
    .material-box-shadow(@editor-shadow-level);
    padding: 0 @btn-margin;
    white-space: nowrap;
    line-height: 0;
    border-bottom: @editor-border;

    .fr-btn {
      display: inline-block;
      float: none;

      i {
        float: left;
      }
    }

    .fr-separator {
      display: inline-block;
      float: none;
    }
  }

  .fr-layer {
    width: (@popup-layer-width * 0.75);
    @media (min-width: @screen-sm) {
      width: @popup-layer-width;
    }

    .box-sizing(border-box);
    margin: 10px;
    display: none;

    &.fr-active {
      display: inline-block;
    }
  }

  .fr-action-buttons {
    z-index: 7;
    height: 36px;
    text-align: right;

    button.fr-command {
      height: 36px;
      line-height: 1;
      color: @ui-color;
      padding: 10px;
      cursor: pointer;
      text-decoration: none;
      border: none;
      background: none;
      font-size: 16px;
      outline: none;
      .transition(background @transition-timing);
      .border-radius(@border-radius);

      + button {
        margin-left: 24px;
      }

      &:hover, &:focus {
        background: @ui-hover-color;
        color: @ui-color;
      }

      &:active {
        background: @ui-focused-color;
        color: @ui-color;
      }
    }

    button::-moz-focus-inner {
      border: 0;
    }
  }

  .fr-checkbox {
    position: relative;
    display: inline-block;
    width: 16px;
    height: 16px;
    line-height: 1;
    .box-sizing(content-box);
    vertical-align: middle;

    svg {
      margin-left: 2px;
      margin-top: 2px;
      display: none;
      width: 10px;
      height: 10px;
    }

    span {
      border: solid 1px @ui-text;
      .border-radius(@border-radius);
      width: 16px;
      height: 16px;
      display: inline-block;
      position: relative;
      z-index: 1;
      .box-sizing(border-box);
      .transition(background @transition-timing, border-color @transition-timing;);
    }

    input {
      position: absolute;
      z-index: 2;
      .opacity(0);
      border: 0 none;
      cursor: pointer;
      height: 16px;
      margin: 0;
      padding: 0;
      width: 16px;
      top: 1px;
      left: 1px;

      &:checked + span {
        background: @ui-color;
        border-color: @ui-color;

        svg {
          display: block;
        }
      }

      &:focus + span {
        border-color: @ui-color;
      }
    }
  }

  .fr-checkbox-line {
    font-size: 14px;
    line-height: 1.4px;
    margin-top: 10px;

    label {
      cursor: pointer;
      margin: 0 5px;
      vertical-align: middle;
    }
  }

  &.fr-rtl {
    direction: rtl;
    text-align: right;

    .fr-action-buttons {
      text-align: left;
    }

    .fr-input-line {
      input + label, textarea + label {
        left: auto;
        right: 0;
      }
    }

    .fr-buttons .fr-separator.fr-vs {
      float: right;
    }
  }

  .fr-arrow {
    width: 0;
    height: 0;
    border-left: @arrow-size solid transparent;
    border-right: @arrow-size solid transparent;
    border-bottom: @arrow-size solid @ui-border-color;
    position: absolute;
    top: ((-@arrow-size * 2) + 1);
    left: 50%;
    margin-left: (-@arrow-size);
    display: inline-block;
  }

  &.fr-above {
    .fr-arrow {
      top: auto;
      bottom: ((-@arrow-size * 2) + 1);
      border-bottom: 0;
      border-top: @arrow-size solid @ui-border-color;
    }
  }
}

/***** ui/text_edit.less *****/

.fr-text-edit-layer {
  width: 250px;
  .box-sizing(border-box);
  display: block !important;
}


/***** ui/toolbar.less *****/

.fr-toolbar {
  color: @ui-text;
  background: @ui-bg;
  position: relative;
  z-index: 4;
  font-family: @font-family;
  .clearfix();
  .box-sizing(border-box);
  .user-select(none);
  padding: 0 @btn-margin;
  .border-radius(@border-radius);
  .material-box-shadow(@editor-shadow-level);
  text-align: left;
  border: @editor-border;
  border-top: @ui-border-top;
  text-rendering: optimizelegibility;
  .font-smoothing();
  line-height: 1.2;

  &.fr-rtl {
    text-align: right;
  }

  &.fr-inline {
    display: none;

    white-space: nowrap;
    position: absolute;
    margin-top: 10px;

    .fr-arrow {
      width: 0;
      height: 0;
      border-left: @arrow-size solid transparent;
      border-right: @arrow-size solid transparent;
      border-bottom: @arrow-size solid @ui-border-color;
      position: absolute;
      top: ((-@arrow-size * 2) + 1);
      left: 50%;
      margin-left: (-@arrow-size);
      display: inline-block;
    }

    &.fr-above {
      margin-top: -10px;
      .material-box-shadow(@editor-shadow-level, -1);
      border-bottom: @ui-border-top;
      border-top: 0;

      .fr-arrow {
        top: auto;
        bottom: ((-@arrow-size * 2) + 1);
        border-bottom: 0;
        border-top-color: inherit;
        border-top-style: solid;
        border-top-width: @arrow-size;
      }
    }
  }

  &.fr-top {
    top: 0;
    .border-radius(@border-radius @border-radius 0 0);
    .material-box-shadow(@editor-shadow-level);
  }

  &.fr-bottom {
    bottom: 0;
    .border-radius(0 0 @border-radius @border-radius);
    .material-box-shadow(@editor-shadow-level);
  }
}

.fr-separator {
  background: @separator-color;
  display: block;
  vertical-align: top;
  float: left;

  + .fr-separator {
    display: none;
  }

  &.fr-vs {
    height: (@btn-height - 2 * @btn-margin);
    width: @separator-size;
    margin: @btn-margin;
  }

  &.fr-hs {
    clear: both;
    height: @separator-size;
    width: calc(100% - (2 * @btn-margin));
    margin: 0 @btn-margin;
  }

  &.fr-hidden {
    display: none !important;
  }
}

.fr-rtl .fr-separator {
  float: right;
}

.fr-toolbar.fr-inline .fr-separator.fr-hs {
  float: none;
}

.fr-toolbar.fr-inline .fr-separator.fr-vs {
  float: none;
  display: inline-block;
}

/***** helpers.less *****/

.fr-visibility-helper {
  display: none;
  margin-left: 0px !important;

  @media (min-width: @screen-sm) {
    margin-left: 1px !important;
  }

  @media (min-width: @screen-md) {
    margin-left: 2px !important;
  }

  @media (min-width: @screen-lg) {
    margin-left: 3px !important;
  }
}

.fr-opacity-0 {
  .opacity(0);
}

.fr-box {
  position: relative;
}

/**
 * Postion sticky hacks.
 */
.fr-sticky {
  position: -webkit-sticky;
	position: -moz-sticky;
	position: -ms-sticky;
	position: -o-sticky;
	position: sticky;
}

.fr-sticky-off {
	position: relative;
}

.fr-sticky-on {
	position: fixed;

  &.fr-sticky-ios {
    position: absolute;
    left: 0;
    right: 0;
    width: auto !important;
  }
}

.fr-sticky-dummy {
	display: none;
}

.fr-sticky-on + .fr-sticky-dummy, .fr-sticky-box > .fr-sticky-dummy {
	display: block;
}

// Used for accessibility instead of aria-label.
span.fr-sr-only {
  .hide-by-clipping();
}


/***** plugins/colors.less *****/

.fr-popup {
  .fr-colors-tabs {
    .material-box-shadow(@editor-shadow-level);
    margin-bottom: 5px;
    line-height: 16px;
    margin-left: -2px;
    margin-right: -2px;

    .fr-colors-tab {
      display: inline-block;
      width: 50%;
      cursor: pointer;
      text-align: center;
      color: @ui-text;
      font-size: 13px;
      padding: 8px 0;
      position: relative;

      &:hover, &:focus {
        color: @ui-color;
      }

      &[data-param1="background"]::after {
      	position: absolute;
      	bottom: 0;
      	left: 0;
      	width: 100%;
      	height: 2px;
      	background: @ui-color;
      	content: '';
        .transition(transform @transition-timing);
      }

      &.fr-selected-tab {
        color: @ui-color;

        &[data-param1="text"] ~ [data-param1="background"]::after {
          .transform(translate3d(-100%,0,0));
        }
      }
    }
  }

  .fr-color-hex-layer {
    width: 100%;
    margin: 0px;
    padding: 10px;

    .fr-input-line {
      float: left;
      width: calc(100% - 50px);
      padding: 8px 0 0;
    }

    .fr-action-buttons {
      float: right;
      width: 50px;
    }

    .fr-action-buttons {
      button.fr-command {
        background-color: @ui-color;
        color: #FFF !important;
        .border-radius(@border-radius);
        font-size: 13px;
        height: 32px;

        &:hover {
          background-color: darken(@ui-color, 10%);
          color: #FFF;
        }
      }
    }
  }

  .fr-separator + .fr-colors-tabs {
    .material-box-shadow(0, 0);
    margin-left: 2px;
    margin-right: 2px;
  }

  .fr-color-set {
    line-height: 0;
    display: none;

    &.fr-selected-set {
      display: block;
    }

    > span {
      display: inline-block;
      width: 32px;
      height: 32px;
      position: relative;
      z-index: 1;

      > i, > svg {
        text-align: center;
        line-height: 32px;
        height: 32px;
        width: 32px;
        font-size: 13px;
        position: absolute;
        bottom: 0;
        cursor: default;
        left: 0;
      }

      .fr-selected-color {
        color: @white;
        font-family: FontAwesome;
        font-size: 13px;
        font-weight: 400;
        line-height: 32px;
        position: absolute;
        top: 0;
        bottom: 0;
        right: 0;
        left: 0;
        text-align: center;
        cursor: default;
      }

      &:hover, &:focus {
        outline: 1px solid @ui-text;
        z-index: 2;
      }
    }
  }
}

.fr-rtl .fr-popup {
  .fr-colors-tabs {
    .fr-colors-tab {
      &.fr-selected-tab {
        &[data-param1="text"] ~ [data-param1="background"]::after {
          .transform(translate3d(100%,0,0));
        }
      }
    }
  }
}


/***** plugins/draggable.less *****/

.fr-drag-helper {
  background: @drag-helper-bg;
  height: 2px;
  margin-top: -1px;
  .opacity(0.2);
  position: absolute;
  z-index: 2147483640;
  display: none;

  &.fr-visible {
    display: block;
  }
}

.fr-dragging {
  .opacity(0.4);
}

/***** plugins/file.less *****/

.fr-popup {
  .fr-file-upload-layer {
    border: dashed 2px @ui-disabled-color;
    padding: 25px 0;
    position: relative;
    font-size: 14px;
    letter-spacing: 1px;
    line-height: 140%;
    .box-sizing(border-box);
    text-align: center;

    &:hover {
      background: @ui-hover-color;
    }

    &.fr-drop {
      background: @ui-hover-color;
      border-color: @ui-color;
    }

    .fr-form {
      .opacity(0);
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      z-index: 2147483640;
      overflow: hidden;
      margin: 0 !important;
      padding: 0 !important;
      width: 100% !important;

      input {
        cursor: pointer;
        position: absolute;
        right: 0px;
        top: 0px;
        bottom: 0px;
        width: 500%;
        height: 100%;
        margin: 0px;
        font-size: 400px;
      }
    }
  }

  .fr-file-progress-bar-layer {
    .box-sizing(border-box);

    > h3 {
      font-size: 16px;
      margin: 10px 0;
      font-weight: normal;
    }

    > div.fr-action-buttons {
      display: none;
    }

    > div.fr-loader {
      background: mix(@white, @ui-color, 70%);
      height: 10px;
      width: 100%;
      margin-top: 20px;
      overflow: hidden;
      position: relative;

      span {
        display: block;
        height: 100%;
        width: 0%;
        background: @ui-color;
        .transition(width @transition-timing);
      }

      &.fr-indeterminate {
        span {
          width: 30% !important;
          position: absolute;
          top: 0;
          .animation(loading 2s linear infinite);
        }
      }
    }

    &.fr-error {
      > div.fr-loader {
        display: none;
      }

      > div.fr-action-buttons {
        display: block;
      }
    }
  }
}


@keyframes loading {
  from {left: -25%;}
  to {left: 100%}
}

@-webkit-keyframes loading {
  from {left: -25%;}
  to {left: 100%}
}

@-moz-keyframes loading {
  from {left: -25%;}
  to {left: 100%}
}

@-o-keyframes loading {
  from {left: -25%;}
  to {left: 100%}
}

/***** plugins/image.less *****/

.fr-element img {
  cursor: pointer;
}

.fr-image-resizer {
  position: absolute;
  border: solid 1px @ui-color;
  display: none;
  .user-select(none);
  .box-sizing(content-box);

  &.fr-active {
    display: block;
  }

  .fr-handler {
    display: block;
    position: absolute;
    background: @ui-color;
    border: solid 1px @white;
    z-index: 4;
    .box-sizing(border-box);

    &.fr-hnw {
      cursor: nw-resize;
    }

    &.fr-hne {
      cursor: ne-resize;
    }

    &.fr-hsw {
      cursor: sw-resize;
    }

    &.fr-hse {
      cursor: se-resize;
    }
  }

  .handler-size(@handler-size);

  @media(min-width: @screen-lg) {
    .handler-size(@handler-size-lg);
  }
}

.fr-image-overlay {
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: 2147483640;
  display: none;
}

.fr-popup {
  .fr-image-upload-layer {
    border: dashed 2px @ui-disabled-color;
    padding: 25px 0;
    position: relative;
    font-size: 14px;
    letter-spacing: 1px;
    line-height: 140%;
    text-align: center;

    &:hover {
      background: @ui-hover-color;
    }

    &.fr-drop {
      background: @ui-hover-color;
      border-color: @ui-color;
    }

    .fr-form {
      .opacity(0);
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      z-index: 2147483640;
      overflow: hidden;
      margin: 0 !important;
      padding: 0 !important;
      width: 100% !important;

      input {
        cursor: pointer;
        position: absolute;
        right: 0px;
        top: 0px;
        bottom: 0px;
        width: 500%;
        height: 100%;
        margin: 0px;
        font-size: 400px;
      }
    }
  }

  .fr-image-progress-bar-layer {
    > h3 {
      font-size: 16px;
      margin: 10px 0;
      font-weight: normal;
    }

    > div.fr-action-buttons {
      display: none;
    }

    > div.fr-loader {
      background: mix(@white, @ui-color, 70%);
      height: 10px;
      width: 100%;
      margin-top: 20px;
      overflow: hidden;
      position: relative;

      span {
        display: block;
        height: 100%;
        width: 0%;
        background: @ui-color;
        .transition(width @transition-timing);
      }

      &.fr-indeterminate {
        span {
          width: 30% !important;
          position: absolute;
          top: 0;
          .animation(loading 2s linear infinite);
        }
      }
    }

    &.fr-error {
      > div.fr-loader {
        display: none;
      }

      > div.fr-action-buttons {
        display: block;
      }
    }
  }
}

.fr-image-size-layer {
  .fr-image-group {
    .fr-input-line {
      width: calc(50% - 5px);
      display: inline-block;

      + .fr-input-line {
        margin-left: 10px;
      }
    }
  }
}

.fr-uploading {
  .opacity(0.4);
}

@keyframes loading {
  from {left: -25%;}
  to {left: 100%}
}

@-webkit-keyframes loading {
  from {left: -25%;}
  to {left: 100%}
}

@-moz-keyframes loading {
  from {left: -25%;}
  to {left: 100%}
}

@-o-keyframes loading {
  from {left: -25%;}
  to {left: 100%}
}

/***** plugins/table.less *****/

.fr-element {
  table {
    td.fr-selected-cell, th.fr-selected-cell {
      border: 1px double @ui-color;
    }

    // Prevent Firefox selection.
    tr {
      .user-select(none);
    }

    td, th {
      .user-select(text);
    }
  }

  // Prevent Firefox selection.
  .fr-no-selection {
    table {
      td, th {
        .user-select(none);
      }
    }
  }
}

.fr-table-resizer {
  cursor: col-resize;
  position: absolute;
  z-index: 3;
  display: none;

  &.fr-moving {
    z-index: 2;
  }

  div {
    .opacity(0);
    border-right: @table-resizer;
  }
}

.fr-no-selection {
  .user-select(none);
}

// Table popups.
.fr-popup {
  .fr-table-colors-hex-layer {
    width: 100%;
    margin: 0px;
    padding: 10px;

    .fr-input-line {
      float: left;
      width: calc(100% - 50px);
      padding: 8px 0 0;
    }

    .fr-action-buttons {
      float: right;
      width: 50px;
    }

    .fr-action-buttons {
      button {
        background-color: @ui-color;
        color: #FFF;
        .border-radius(@border-radius);
        font-size: 13px;
        height: 32px;

        &:hover {
          background-color: darken(@ui-color, 10%);
          color: #FFF;
        }
      }
    }
  }

  // Insert table.
  .fr-table-size {
    .fr-table-size-info {
      text-align: center;
      font-size: 14px;
      padding: 8px;
    }

    .fr-select-table-size {
      line-height: 0;
      padding: 0 5px 5px;
      white-space: nowrap;

      > span {
        display: inline-block;
        padding: 0px 4px 4px 0;
        background: transparent;

        > span {
          display: inline-block;
          width: 18px;
          height: 18px;
          border: @insert-table-grid;
        }

        &.hover {
          background: transparent;

          > span {
            background: rgba(red(@ui-color), green(@ui-color), blue(@ui-color), 0.3);
            border: solid 1px @ui-color;
          }
        }
      }

      .new-line {
        .clearfix();
      }
    }
  }

  &.fr-above {
    .fr-table-size {
      .fr-select-table-size {
        > span {
          display: inline-block !important;
        }
      }
    }
  }

  // Table colors.
  .fr-table-colors-buttons {
    margin-bottom: 5px;
  }

  .fr-table-colors {
    line-height: 0;
    display: block;

    > span {
      display: inline-block;
      width: 32px;
      height: 32px;
      position: relative;
      z-index: 1;

      > i {
        text-align: center;
        line-height: 32px;
        height: 32px;
        width: 32px;
        font-size: 13px;
        position: absolute;
        bottom: 0;
        cursor: default;
        left: 0;
      }

      &:focus {
        outline: 1px solid @ui-text;
        z-index: 2;
      }
    }
  }
}

.fr-popup.fr-desktop .fr-table-size .fr-select-table-size > span > span {
  width: 12px;
  height: 12px;
}

.fr-insert-helper {
  position: absolute;
  z-index: 9999;
  white-space: nowrap;
}


/***** plugins/video.less *****/

.fr-element {
  .fr-video {
    .user-select(none);

    &::after {
      position: absolute;
      content: '';
      z-index: 1;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      cursor: pointer;
      display: block;
      background: rgba(0,0,0,0);
    }

    &.fr-active > * {
      z-index: 2;
      position: relative;
    }

    > * {
      .box-sizing(content-box);
      max-width: 100%;
      border: none;
    }
  }
}

.fr-box .fr-video-resizer {
  position: absolute;
  border: solid 1px @ui-color;
  display: none;
  .user-select(none);

  &.fr-active {
    display: block;
  }

  .fr-handler {
    display: block;
    position: absolute;
    background: @ui-color;
    border: solid 1px @white;
    z-index: 4;
    .box-sizing(border-box);

    &.fr-hnw {
      cursor: nw-resize;
    }

    &.fr-hne {
      cursor: ne-resize;
    }

    &.fr-hsw {
      cursor: sw-resize;
    }

    &.fr-hse {
      cursor: se-resize;
    }
  }

  .handler-size(@handler-size);

  @media(min-width: @screen-lg) {
    .handler-size(@handler-size-lg);
  }
}

.fr-popup {
  .fr-video-size-layer {
    .fr-video-group {
      .fr-input-line {
        width: calc(50% - 5px);
        display: inline-block;

        + .fr-input-line {
          margin-left: 10px;
        }
      }
    }
  }

  .fr-video-upload-layer {
    border: dashed 2px @ui-disabled-color;
    padding: 25px 0;
    position: relative;
    font-size: 14px;
    letter-spacing: 1px;
    line-height: 140%;
    text-align: center;

    &:hover {
      background: @ui-hover-color;
    }

    &.fr-drop {
      background: @ui-hover-color;
      border-color: @ui-color;
    }

    .fr-form {
      .opacity(0);
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      z-index: 2147483640;
      overflow: hidden;
      margin: 0 !important;
      padding: 0 !important;
      width: 100% !important;

      input {
        cursor: pointer;
        position: absolute;
        right: 0px;
        top: 0px;
        bottom: 0px;
        width: 500%;
        height: 100%;
        margin: 0px;
        font-size: 400px;
      }
    }
  }

  .fr-video-progress-bar-layer {
    > h3 {
      font-size: 16px;
      margin: 10px 0;
      font-weight: normal;
    }

    > div.fr-action-buttons {
      display: none;
    }

    > div.fr-loader {
      background: mix(@white, @ui-color, 70%);
      height: 10px;
      width: 100%;
      margin-top: 20px;
      overflow: hidden;
      position: relative;

      span {
        display: block;
        height: 100%;
        width: 0%;
        background: @ui-color;
        .transition(width @transition-timing);
      }

      &.fr-indeterminate {
        span {
          width: 30% !important;
          position: absolute;
          top: 0;
          .animation(loading 2s linear infinite);
        }
      }
    }

    &.fr-error {
      > div.fr-loader {
        display: none;
      }

      > div.fr-action-buttons {
        display: block;
      }
    }
  }
}

.fr-video-overlay {
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: 2147483640;
  display: none;
}

/* Files: froala.less, plugins/colors.less, plugins/draggable.less, plugins/file.less, plugins/image.less, plugins/table.less, plugins/video.less */]]></template>
    <template title="error" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[<xf:title>{{ phrase('oops_we_ran_into_some_problems') }}</xf:title>

<div class="blockMessage">
	<xf:if is="$error">
		{$error|raw}
	<xf:else />
		<ul>
		<xf:foreach loop="$errors" value="$error">
			<li>{$error|raw}</li>
		</xf:foreach>
		</ul>
	</xf:if>
</div>]]></template>
    <template title="extra.less" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[@keyframes animation { 
    0%{background-position:0% 50%}
    50%{background-position:100% 50%}
    100%{background-position:0% 50%}
}]]></template>
    <template title="extra_footer" type="public" addon_id="" version_id="0" version_string=""><![CDATA[<div class="pre-footer">
	<div class="pre-footer-inner">
		<div class="pre-footer--container">
			<div class="pre-footer--column">
				<xf:if is="property('dt_extra_footer_first_column') == 'option1'">
					<xf:widget key="forum_overview_members_online" />

				<xf:elseif is="property('dt_extra_footer_first_column') == 'option2'" />
					<xf:widget key="forum_overview_forum_statistics" />

				<xf:elseif is="property('dt_extra_footer_first_column') == 'option3'" />
					<xf:widget key="forum_overview_share_page" />

				<xf:elseif is="property('dt_extra_footer_first_column') == 'option4'" />
					<xf:widget key="online_list_online_statistics" />

				<xf:elseif is="property('dt_extra_footer_first_column') == 'option5'" />
					<xf:widget key="forum_overview_new_profile_posts" />

				<xf:elseif is="property('dt_extra_footer_first_column') == 'option6'" />
					<xf:widget key="forum_overview_new_posts" />

				<xf:elseif is="property('dt_extra_footer_first_column') == 'option7'" />
					<xf:widget key="member_wrapper_newest_members" />

				<xf:elseif is="property('dt_extra_footer_first_column') == 'option8'" />
					<div class="pre-footer--content -social">
						<h3>{{ property('dt_extra_footer_social_title') }}</h3>
						<ul class="social__icons">
							<xf:if is="property('dt_extra_footer_facebook')"><li><a href="https://www.facebook.com/{{ property('dt_extra_footer_facebook') }}" class="-facebook"><i class="fab fa-facebook"></i></a></li></xf:if>
							<xf:if is="property('dt_extra_footer_twitter')"><li><a href="https://twitter.com/{{ property('dt_extra_footer_twitter') }}" class="-twitter"><i class="fab fa-twitter"></i></a></li></xf:if>
							<xf:if is="property('dt_extra_footer_instagram')"><li><a href="https://instagram.com/{{ property('dt_extra_footer_instagram') }}" class="-instagram"><i class="fab fa-instagram"></i></a></li></xf:if>
							<xf:if is="property('dt_extra_footer_youtube')"><li><a href="http://www.youtube.com/user/{{ property('dt_extra_footer_youtube') }}" class="-youtube"><i class="fab fa-youtube"></i></a></li></xf:if>
						</ul>
					</div>

				<xf:elseif is="property('dt_extra_footer_first_column') == 'option9'" />
					<div class="pre-footer--content">
						<h3>{{ property('dt_extra_footer_custom_html_title') }}</h3>
						<div class="pre-footer-html--content">
							{{ property('dt_extra_footer_custom_html') }}
						</div>
					</div>

				<xf:elseif is="property('dt_extra_footer_first_column') == 'option10'" />
					<div class="pre-footer--content -links">
						<h3>{{ property('dt_extra_footer_link_1_title') }}</h3>
						<ul class="pre-footer--links">
							{{ property('dt_extra_footer_link_1') }}
						</ul>
					</div>

				<xf:elseif is="property('dt_extra_footer_first_column') == 'option11'" />
					<div class="pre-footer--content -links">
						<h3>{{ property('dt_extra_footer_link_2_title') }}</h3>
						<ul class="pre-footer--links">
							{{ property('dt_extra_footer_link_2') }}
						</ul>
					</div>
				</xf:if>
			</div>
			<div class="pre-footer--column">
				<xf:if is="property('dt_extra_footer_second_column') == 'option1'">
					<xf:widget key="forum_overview_members_online" />

				<xf:elseif is="property('dt_extra_footer_second_column') == 'option2'" />
					<xf:widget key="forum_overview_forum_statistics" />

				<xf:elseif is="property('dt_extra_footer_second_column') == 'option3'" />
					<xf:widget key="forum_overview_share_page" />

				<xf:elseif is="property('dt_extra_footer_second_column') == 'option4'" />
					<xf:widget key="online_list_online_statistics" />

				<xf:elseif is="property('dt_extra_footer_second_column') == 'option5'" />
					<xf:widget key="forum_overview_new_profile_posts" />

				<xf:elseif is="property('dt_extra_footer_second_column') == 'option6'" />
					<xf:widget key="forum_overview_new_posts" />

				<xf:elseif is="property('dt_extra_footer_second_column') == 'option7'" />
					<xf:widget key="member_wrapper_newest_members" />

				<xf:elseif is="property('dt_extra_footer_second_column') == 'option8'" />
					<div class="pre-footer--content -social">
						<h3>{{ property('dt_extra_footer_social_title') }}</h3>
						<ul class="social__icons">
							<xf:if is="property('dt_extra_footer_facebook')"><li><a href="https://www.facebook.com/{{ property('dt_extra_footer_facebook') }}" class="-facebook"><i class="fab fa-facebook"></i></a></li></xf:if>
							<xf:if is="property('dt_extra_footer_twitter')"><li><a href="https://twitter.com/{{ property('dt_extra_footer_twitter') }}" class="-twitter"><i class="fab fa-twitter"></i></a></li></xf:if>
							<xf:if is="property('dt_extra_footer_instagram')"><li><a href="https://instagram.com/{{ property('dt_extra_footer_instagram') }}" class="-instagram"><i class="fab fa-instagram"></i></a></li></xf:if>
							<xf:if is="property('dt_extra_footer_youtube')"><li><a href="http://www.youtube.com/user/{{ property('dt_extra_footer_youtube') }}" class="-youtube"><i class="fab fa-youtube"></i></a></li></xf:if>
						</ul>
					</div>

				<xf:elseif is="property('dt_extra_footer_second_column') == 'option9'" />
					<div class="pre-footer--content">
						<h3>{{ property('dt_extra_footer_custom_html_title') }}</h3>
						<div class="pre-footer-html--content">
							{{ property('dt_extra_footer_custom_html') }}
						</div>
					</div>

				<xf:elseif is="property('dt_extra_footer_second_column') == 'option10'" />
					<div class="pre-footer--content -links">
						<h3>{{ property('dt_extra_footer_link_1_title') }}</h3>
						<ul class="pre-footer--links">
							{{ property('dt_extra_footer_link_1') }}
						</ul>
					</div>

				<xf:elseif is="property('dt_extra_footer_second_column') == 'option11'" />
					<div class="pre-footer--content -links">
						<h3>{{ property('dt_extra_footer_link_2_title') }}</h3>
						<ul class="pre-footer--links">
							{{ property('dt_extra_footer_link_2') }}
						</ul>
					</div>
				</xf:if>
			</div>
			<div class="pre-footer--column">
				<xf:if is="property('dt_extra_footer_third_column') == 'option1'">
					<xf:widget key="forum_overview_members_online" />

				<xf:elseif is="property('dt_extra_footer_third_column') == 'option2'" />
					<xf:widget key="forum_overview_forum_statistics" />

				<xf:elseif is="property('dt_extra_footer_third_column') == 'option3'" />
					<xf:widget key="forum_overview_share_page" />

				<xf:elseif is="property('dt_extra_footer_third_column') == 'option4'" />
					<xf:widget key="online_list_online_statistics" />

				<xf:elseif is="property('dt_extra_footer_third_column') == 'option5'" />
					<xf:widget key="forum_overview_new_profile_posts" />

				<xf:elseif is="property('dt_extra_footer_third_column') == 'option6'" />
					<xf:widget key="forum_overview_new_posts" />

				<xf:elseif is="property('dt_extra_footer_third_column') == 'option7'" />
					<xf:widget key="member_wrapper_newest_members" />

				<xf:elseif is="property('dt_extra_footer_third_column') == 'option8'" />
					<div class="pre-footer--content -social">
						<h3>{{ property('dt_extra_footer_social_title') }}</h3>
						<ul class="social__icons">
							<xf:if is="property('dt_extra_footer_facebook')"><li><a href="https://www.facebook.com/{{ property('dt_extra_footer_facebook') }}" class="-facebook"><i class="fab fa-facebook"></i></a></li></xf:if>
							<xf:if is="property('dt_extra_footer_twitter')"><li><a href="https://twitter.com/{{ property('dt_extra_footer_twitter') }}" class="-twitter"><i class="fab fa-twitter"></i></a></li></xf:if>
							<xf:if is="property('dt_extra_footer_instagram')"><li><a href="https://instagram.com/{{ property('dt_extra_footer_instagram') }}" class="-instagram"><i class="fab fa-instagram"></i></a></li></xf:if>
							<xf:if is="property('dt_extra_footer_youtube')"><li><a href="http://www.youtube.com/user/{{ property('dt_extra_footer_youtube') }}" class="-youtube"><i class="fab fa-youtube"></i></a></li></xf:if>
						</ul>
					</div>

				<xf:elseif is="property('dt_extra_footer_third_column') == 'option9'" />
					<div class="pre-footer--content">
						<h3>{{ property('dt_extra_footer_custom_html_title') }}</h3>
						<div class="pre-footer-html--content">
							{{ property('dt_extra_footer_custom_html') }}
						</div>
					</div>

				<xf:elseif is="property('dt_extra_footer_third_column') == 'option10'" />
					<div class="pre-footer--content -links">
						<h3>{{ property('dt_extra_footer_link_1_title') }}</h3>
						<ul class="pre-footer--links">
							{{ property('dt_extra_footer_link_1') }}
						</ul>
					</div>

				<xf:elseif is="property('dt_extra_footer_third_column') == 'option11'" />
					<div class="pre-footer--content -links">
						<h3>{{ property('dt_extra_footer_link_2_title') }}</h3>
						<ul class="pre-footer--links">
							{{ property('dt_extra_footer_link_2') }}
						</ul>
					</div>
				</xf:if>
			</div>
			<div class="pre-footer--column">
				<xf:if is="property('dt_extra_footer_fourth_column') == 'option1'">
					<xf:widget key="forum_overview_members_online" />

				<xf:elseif is="property('dt_extra_footer_fourth_column') == 'option2'" />
					<xf:widget key="forum_overview_forum_statistics" />

				<xf:elseif is="property('dt_extra_footer_fourth_column') == 'option3'" />
					<xf:widget key="forum_overview_share_page" />

				<xf:elseif is="property('dt_extra_footer_fourth_column') == 'option4'" />
					<xf:widget key="online_list_online_statistics" />

				<xf:elseif is="property('dt_extra_footer_fourth_column') == 'option5'" />
					<xf:widget key="forum_overview_new_profile_posts" />

				<xf:elseif is="property('dt_extra_footer_fourth_column') == 'option6'" />
					<xf:widget key="forum_overview_new_posts" />

				<xf:elseif is="property('dt_extra_footer_fourth_column') == 'option7'" />
					<xf:widget key="member_wrapper_newest_members" />

				<xf:elseif is="property('dt_extra_footer_fourth_column') == 'option8'" />
					<div class="pre-footer--content -social">
						<h3>{{ property('dt_extra_footer_social_title') }}</h3>
						<ul class="social__icons">
							<xf:if is="property('dt_extra_footer_facebook')"><li><a href="https://www.facebook.com/{{ property('dt_extra_footer_facebook') }}" class="-facebook"><i class="fab fa-facebook"></i></a></li></xf:if>
							<xf:if is="property('dt_extra_footer_twitter')"><li><a href="https://twitter.com/{{ property('dt_extra_footer_twitter') }}" class="-twitter"><i class="fab fa-twitter"></i></a></li></xf:if>
							<xf:if is="property('dt_extra_footer_instagram')"><li><a href="https://instagram.com/{{ property('dt_extra_footer_instagram') }}" class="-instagram"><i class="fab fa-instagram"></i></a></li></xf:if>
							<xf:if is="property('dt_extra_footer_youtube')"><li><a href="http://www.youtube.com/user/{{ property('dt_extra_footer_youtube') }}" class="-youtube"><i class="fab fa-youtube"></i></a></li></xf:if>
						</ul>
					</div>

				<xf:elseif is="property('dt_extra_footer_fourth_column') == 'option9'" />
					<div class="pre-footer--content">
						<h3>{{ property('dt_extra_footer_custom_html_title') }}</h3>
						<div class="pre-footer-html--content">
							{{ property('dt_extra_footer_custom_html') }}
						</div>
					</div>

				<xf:elseif is="property('dt_extra_footer_fourth_column') == 'option10'" />
					<div class="pre-footer--content -links">
						<h3>{{ property('dt_extra_footer_link_1_title') }}</h3>
						<ul class="pre-footer--links">
							{{ property('dt_extra_footer_link_1') }}
						</ul>
					</div>

				<xf:elseif is="property('dt_extra_footer_fourth_column') == 'option11'" />
					<div class="pre-footer--content -links">
						<h3>{{ property('dt_extra_footer_link_2_title') }}</h3>
						<ul class="pre-footer--links">
							{{ property('dt_extra_footer_link_2') }}
						</ul>
					</div>
				</xf:if>
			</div>
		</div>
	</div>
</div>]]></template>
    <template title="forum_list" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[<xf:h1>{$xf.options.boardTitle}</xf:h1>
<xf:if is="{$xf.options.forumsDefaultPage} != 'forums'">
	<xf:title>{{ phrase('forum_list') }}</xf:title>
</xf:if>

<xf:macro template="metadata_macros" name="metadata"
	arg-description="{$xf.options.boardDescription}"
	arg-canonicalUrl="{{ link('canonical:' . $selfRoute) }}" />


<xf:wrap template="forum_overview_wrapper">
	<xf:set var="$pageSelected">forums</xf:set>
</xf:wrap>

<xf:widgetpos id="forum_list_sidebar" position="sidebar" />

<xf:widgetpos id="forum_list_above_nodes" />
<xf:macro name="node_list" arg-children="{$nodeTree}" arg-extras="{$nodeExtras}" />
<xf:widgetpos id="forum_list_below_nodes" />

<xf:head option="rss_forum"><link rel="alternate" type="application/rss+xml" title="{{ phrase('rss_feed_for_x', {'title': $xf.options.boardTitle})|for_attr }}" href="{{ link('forums/index.rss', '-') }}" /></xf:head>

<xf:macro name="node_list_entry" arg-node="!" arg-extras="!" arg-children="!" arg-childExtras="!" arg-depth="1">
	<xf:css src="node_list.less" />
	<xf:set var="$nodeTemplate" value="{{ $node.getNodeTemplateRenderer($depth) }}" />
	<xf:if is="$nodeTemplate.macro">
		<xf:macro template="{$nodeTemplate.template}" name="{$nodeTemplate.macro}"
			arg-node="{$node}"
			arg-extras="{$extras}"
			arg-children="{$children}"
			arg-childExtras="{$childExtras}"
			arg-depth="{$depth}" />
	<xf:elseif is="{$nodeTemplate.template}" />
		<xf:include template="{$nodeTemplate.template}" />
	</xf:if>
</xf:macro>

<xf:macro name="node_list" arg-children="!" arg-extras="!" arg-depth="1">
	<xf:css src="node_list.less" />
	<xf:foreach loop="$children" key="$id" value="$child">
		<xf:macro name="node_list_entry"
			arg-node="{$child.record}"
			arg-extras="{$extras.{$id}}"
			arg-children="{$child.children}"
			arg-childExtras="{$extras}"
			arg-depth="{$depth}" />
	</xf:foreach>
</xf:macro>

<xf:macro name="sub_node_list" arg-children="!" arg-childExtras="!" arg-depth="3">
	<xf:if contentcheck="true">
		<ol>
		<xf:contentcheck>
			<xf:macro template="forum_list" name="node_list"
				arg-children="{$children}"
				arg-extras="{$childExtras}"
				arg-depth="{{ $depth + 1 }}" />
		</xf:contentcheck>
		</ol>
	</xf:if>
</xf:macro>

<xf:macro name="sub_nodes_flat" arg-children="!" arg-childExtras="!" arg-depth="3">
	<xf:css src="node_list.less" />
	<xf:if contentcheck="true">
		<div class="node-subNodesFlat">
			<span class="node-subNodesLabel">{{ phrase('sub_forums:') }}</span>
			<ol class="node-subNodeFlatList">
			<xf:contentcheck>
				<xf:macro template="forum_list" name="node_list"
					arg-children="{$children}"
					arg-extras="{$childExtras}"
					arg-depth="{{ $depth + 1 }}" />
			</xf:contentcheck>
			</ol>
		</div>
	</xf:if>
</xf:macro>
<xf:macro name="sub_nodes_menu" arg-children="!" arg-childExtras="!" arg-depth="3">
	<xf:css src="node_list.less" />
	<xf:if contentcheck="true">
		<div class="node-subNodeMenu">
			<a class="menuTrigger" data-xf-click="menu" role="button" tabindex="0" aria-expanded="false" aria-haspopup="true">{{ phrase('sub_forums') }}</a>
			<div class="menu" data-menu="menu" aria-hidden="true">
				<div class="menu-content">
					<h4 class="menu-header">{{ phrase('sub_forums') }}</h4>
					<ol class="subNodeMenu">
					<xf:contentcheck>
						<xf:macro template="forum_list" name="node_list"
							arg-children="{$children}"
							arg-extras="{$childExtras}"
							arg-depth="{{ $depth + 1 }}" />
					</xf:contentcheck>
					</ol>
				</div>
			</div>
		</div>
	</xf:if>
</xf:macro>]]></template>
    <template title="forum_view" type="public" addon_id="XF" version_id="2010170" version_string="2.1.1"><![CDATA[<xf:title page="{$page}">{$forum.Node.title}</xf:title>
<xf:description>{$forum.Node.description|raw}</xf:description>

<xf:css src="structured_list.less" />

<xf:macro template="metadata_macros" name="canonical_url"
	arg-canonicalUrl="{{ link('canonical:forums', $forum, $canonicalFilters + {'page': $page}) }}" />

<xf:head option="rss_forum"><link rel="alternate" type="application/rss+xml" title="{{ phrase('rss_feed_for_x', {'title': $forum.title})|for_attr }}" href="{{ link('forums/index.rss', $forum) }}" /></xf:head>

<xf:macro template="forum_macros" name="forum_page_options" arg-forum="{$forum}" />
<xf:breadcrumb source="$forum.getBreadcrumbs(false)" />

<xf:pageaction if="$forum.canCreateThread()">
	<xf:button href="{{ link('forums/post-thread', $forum) }}" class="button--cta" icon="write">
		{{ phrase('post_thread') }}
	</xf:button>
</xf:pageaction>

<xf:if is="$pendingApproval">
	<div class="blockMessage blockMessage--important">{{ phrase('content_submitted_displayed_pending_approval') }}</div>
</xf:if>

<xf:if is="$nodeTree">
	<xf:ad position="forum_view_above_node_list" arg-forum="{$forum}" />
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:macro template="forum_list" name="node_list"
					arg-children="{$nodeTree}"
					arg-extras="{$nodeExtras}"
					arg-depth="2" />
			</div>
		</div>
	</div>
	<xf:ad position="forum_view_below_node_list" arg-forum="{$forum}" />
</xf:if>

<xf:if is="$canInlineMod">
	<xf:js src="xf/inline_mod.js" min="1" />
</xf:if>

<xf:ad position="forum_view_above_thread_list" arg-forum="{$forum}" />
<div class="block" data-xf-init="{{ $canInlineMod ? 'inline-mod' : '' }}" data-type="thread" data-href="{{ link('inline-mod') }}">

	<div class="block-outer"><xf:trim>
		<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
			link="forums" data="{$forum}" params="{$filters}"
			wrapperclass="block-outer-main" />
		<xf:if contentcheck="true">
			<div class="block-outer-opposite">
				<div class="buttonGroup">
				<xf:contentcheck>
					<xf:if is="$canInlineMod">
						<xf:macro template="inline_mod_macros" name="button" />
					</xf:if>
					<xf:if is="$xf.visitor.user_id">
						<xf:button href="{{ link('forums/mark-read', $forum, {'date': $xf.time}) }}"
							class="button--link" overlay="true">
							{{ phrase('mark_read') }}
						</xf:button>
					</xf:if>
					<xf:if is="$forum.canWatch()">
						<xf:button href="{{ link('forums/watch', $forum) }}" class="button--link"
							data-xf-click="switch-overlay"
							data-sk-watch="{{ phrase('watch') }}"
							data-sk-unwatch="{{ phrase('unwatch') }}">
							<xf:if is="{$forum.Watch.{$xf.visitor.user_id}}">{{ phrase('unwatch') }}<xf:else />{{ phrase('watch') }}</xf:if>
						</xf:button>
					</xf:if>
				</xf:contentcheck>
				</div>
			</div>
		</xf:if>
	</xf:trim></div>

	<xf:set var="$dateLimits" value="{{ {
		'-1': phrase('any_time'),
		'7': phrase('x_days', {'days': '7'}),
		'14': phrase('x_days', {'days': '14'}),
		'30': phrase('x_days', {'days': '30'}),
		'60': phrase('x_months', {'months': '2'}),
		'90': phrase('x_months', {'months': '3'}),
		'182': phrase('x_months', {'months': '6'}),
		'365': phrase('1_year')
	} }}" />
	<xf:set var="$sortOrders" value="{{ {
		'last_post_date': phrase('last_message'),
		'post_date': phrase('first_message'),
		'title': phrase('title'),
		'reply_count': phrase('replies'),
		'view_count': phrase('views'),
		'first_post_reaction_score': phrase('first_message_reaction_score')
	} }}" />

	<div class="block-container">
		<div class="block-filterBar">
			<div class="filterBar">
				<xf:if contentcheck="true">
					<ul class="filterBar-filters">
					<xf:contentcheck>
						<xf:if is="$filters.prefix_id">
							<li><a href="{{ link('forums', $forum, $filters|replace('prefix_id', null)) }}"
								class="filterBar-filterToggle" data-xf-init="tooltip" title="{{ phrase('remove_this_filter')|for_attr }}">
								<span class="filterBar-filterToggle-label">{{ phrase('prefix:') }}</span>
								{{ prefix_title('thread', $filters.prefix_id) }}</a></li>
						</xf:if>
						<xf:if is="$filters.starter_id AND $starterFilter">
							<li><a href="{{ link('forums', $forum, $filters|replace('starter_id', null)) }}"
								class="filterBar-filterToggle" data-xf-init="tooltip" title="{{ phrase('remove_this_filter')|for_attr }}">
								<span class="filterBar-filterToggle-label">{{ phrase('started_by:') }}</span>
								{$starterFilter.username}</a></li>
						</xf:if>
						<xf:if is="$filters.last_days AND {$dateLimits.{$filters.last_days}}">
							<li><a href="{{ link('forums', $forum, $filters|replace('last_days', null)) }}"
								class="filterBar-filterToggle" data-xf-init="tooltip" title="{{ phrase('remove_this_filter')|for_attr }}">
								<span class="filterBar-filterToggle-label">{{ phrase('last_updated:') }}</span>
								{$dateLimits.{$filters.last_days}}</a></li>
						</xf:if>
						<xf:if is="$filters.order AND {$sortOrders.{$filters.order}}">
							<li><a href="{{ link('forums', $forum, $filters|replace({'order': null, 'direction': null})) }}"
								class="filterBar-filterToggle" data-xf-init="tooltip" title="{{ phrase('return_to_default_order')|for_attr }}">
								<span class="filterBar-filterToggle-label">{{ phrase('sort_by:') }}</span>
								{$sortOrders.{$filters.order}}
								<xf:fa icon="{{ $filters.direction == 'asc' ? 'fa-angle-up' : 'fa-angle-down' }}" />
								<span class="u-srOnly"><xf:if is="$filters.direction == 'asc'">{{ phrase('ascending') }}<xf:else />{{ phrase('descending') }}</xf:if></span>
							</a></li>
						</xf:if>
					</xf:contentcheck>
					</ul>
				</xf:if>

				<a class="filterBar-menuTrigger" data-xf-click="menu" role="button" tabindex="0" aria-expanded="false" aria-haspopup="true">{{ phrase('filters') }}</a>
				<div class="menu menu--wide" data-menu="menu" aria-hidden="true"
					data-href="{{ link('forums/filters', $forum, $filters) }}"
					data-load-target=".js-filterMenuBody">
					<div class="menu-content">
						<h4 class="menu-header">{{ phrase('show_only:') }}</h4>
						<div class="js-filterMenuBody">
							<div class="menu-row">{{ phrase('loading...') }}</div>
						</div>
					</div>
				</div>
			</div>
		</div>

		<xf:set var="$qtPos">{{ ($sortInfo.order == 'last_post_date' && $sortInfo.direction == 'asc') ? 'bottom' : 'top' }}</xf:set>

		<div class="block-body">
			<div class="structItemContainer">
				<xf:macro template="thread_list_macros" name="quick_thread"
					arg-forum="{$forum}"
					arg-page="{$page}"
					arg-order="{$sortInfo.order}"
					arg-direction="{$sortInfo.direction}" />
				<xf:if is="$stickyThreads is not empty OR $threads is not empty">
					<xf:if is="$stickyThreads is not empty">
						<div class="structItemContainer-group structItemContainer-group--sticky">
							<xf:foreach loop="$stickyThreads" value="$thread">
								<xf:macro template="thread_list_macros" name="item" arg-thread="{$thread}" arg-forum="{$forum}" />
							</xf:foreach>
						</div>

						<xf:if is="property('dt_seperate_sticky_threads')">
							<xf:if is="{$stickyThreads}">
            					<hr class="stickySeparator"/>
        					</xf:if>
						</xf:if>
						
						<xf:ad position="forum_view_below_stickies" arg-forum="{$forum}" />
					</xf:if>

					<div class="structItemContainer-group js-threadList">
						<xf:if is="$threads is not empty">
							<xf:foreach loop="$threads" value="$thread">
								<xf:macro template="thread_list_macros" name="item" arg-thread="{$thread}" arg-forum="{$forum}" />
							</xf:foreach>
							<xf:if is="$showDateLimitDisabler">
								<div class="structItem structItem--note">
									<div class="structItem-cell">
										<a href="{{ link('forums', $forum, {'page': $page, 'no_date_limit': 1} + $filters) }}">
											{{ phrase('show_older_items') }}
										</a>
									</div>
								</div>
							</xf:if>
						</xf:if>
					</div>
				<xf:elseif is="$filters" />
					<div class="structItemContainer-group js-threadList">
						<div class="structItem js-emptyThreadList">
							<div class="structItem-cell">{{ phrase('there_no_threads_matching_your_filters') }}</div>
						</div>
					</div>
				<xf:else />
					<div class="structItemContainer-group js-threadList">
						<div class="structItem js-emptyThreadList">
							<div class="structItem-cell">{{ phrase('there_no_threads_in_this_forum') }}</div>
						</div>
					</div>
				</xf:if>
			</div>
		</div>
	</div>

	<div class="block-outer block-outer--after">
		<xf:pagenav
			page="{$page}" perpage="{$perPage}" total="{$total}"
			link="forums" data="{$forum}" params="{$filters}"
			wrapperclass="block-outer-main" />
		<xf:showignored wrapperclass="block-outer-opposite" />
		<xf:if is="!$forum.canCreateThread()">
			<div class="block-outer-opposite">
				<xf:if is="$xf.visitor.user_id">
					<span class="button is-disabled">
						{{ phrase('no_permission_to_post') }}
						<!-- this is not interactive so shouldn't be a button element -->
					</span>
				<xf:else />
					<xf:button href="{{ link('login') }}" class="button--link" overlay="true">
						{{ phrase('log_in_or_register_to_post') }}
					</xf:button>
				</xf:if>
			</div>
		</xf:if>
	</div>
</div>
<xf:ad position="forum_view_below_thread_list" arg-forum="{$forum}" />

<xf:widgetpos id="forum_view_sidebar" context-forum="{$forum}" position="sidebar" />]]></template>
    <template title="helper_js_global" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[<xf:macro name="head" arg-app="!">
	<xf:set var="$cssUrls" value="{{ ['public:normalize.css', 'public:core.less', $app . ':app.less'] }}" />

	<xf:if is="property('dt_favicon')"><link href="{{ property('dt_favicon') }}" rel="icon" type="image/x-icon" /></xf:if>
	
	<xf:include template="font_awesome_setup" />

	<link rel="stylesheet" href="{{ css_url($cssUrls) }}" />
	
	<xf:if is="property('dt_google_font')">
		<link href='//fonts.googleapis.com/css?family={{ property('dt_google_font') }}' rel='stylesheet' type='text/css'>
	</xf:if>

	<!--XF:CSS-->
	<xf:if is="$xf.fullJs">
		<script src="{{ js_url('xf/preamble.js') }}"></script>
	<xf:else />
		<script src="{{ js_url('xf/preamble.min.js') }}"></script>
	</xf:if>
</xf:macro>

<xf:macro name="body" arg-app="!" arg-jsState="{{ null }}">
	<xf:corejs />
	<!--XF:JS-->
	<script>
		jQuery.extend(true, XF.config, {
			// <!--[XF:js_global:xf_extend_start]-->
			userId: {$xf.visitor.user_id},
			enablePush: {{ $xf.options.enablePush ? 'true' : 'false' }},
			pushAppServerKey: '{$xf.options.pushKeysVAPID.publicKey}',
			url: {
				fullBase: '{{ base_url(null, true)|escape("js") }}',
				basePath: '{{ base_url(null, false)|escape("js") }}',
				css: '{{ css_url(["__SENTINEL__"], false)|escape("js") }}',
				keepAlive: '{{ link_type($app, "login/keep-alive")|escape("js") }}'
			},
			cookie: {
				path: '{{ $xf.cookie.path|escape("js") }}',
				domain: '{{ $xf.cookie.domain|escape("js") }}',
				prefix: '{{ $xf.cookie.prefix|escape("js") }}',
				secure: {{ $xf.cookie.secure ? 'true' : 'false' }}
			},
			csrf: '{{ csrf_token()|escape("js") }}',
			js: {'<!--XF:JS:JSON-->'},
			css: {'<!--XF:CSS:JSON-->'},
			time: {
				now: {$xf.time},
				today: {$xf.timeDetails.today},
				todayDow: {$xf.timeDetails.todayDow}
			},
			borderSizeFeature: '{{ property('borderSizeFeature') }}',
			fontAwesomeWeight: '{{ fa_weight() }}',
			enableRtnProtect: {{ $xf.enableRtnProtect ? 'true' : 'false' }},
			enableFormSubmitSticky: {{ property('formSubmitSticky') ? 'true' : 'false' }},
			uploadMaxFilesize: {$xf.uploadMaxFilesize},
			allowedVideoExtensions: {$xf.allowedVideoExtensions|json|raw},
			shortcodeToEmoji: {{ $xf.options.shortcodeToEmoji ? 'true' : 'false' }},
			visitorCounts: {
				conversations_unread: '{$xf.visitor.conversations_unread|number}',
				alerts_unread: '{$xf.visitor.alerts_unread|number}',
				total_unread: '{{ ($xf.visitor.conversations_unread + $xf.visitor.alerts_unread)|number }}',
				title_count: {{ in_array($xf.options.displayVisitorCount, ['title_count', 'title_and_icon']) ? 'true' : 'false' }},
				icon_indicator: {{ in_array($xf.options.displayVisitorCount, ['icon_indicator', 'title_and_icon']) ? 'true' : 'false' }}
			},
			jsState: {{ $jsState ? $jsState|json|raw : '{}' }},
			publicMetadataLogoUrl: '{{ property('publicMetadataLogoUrl') ? base_url(property('publicMetadataLogoUrl'), true) : '' }}',
			publicPushBadgeUrl: '{{ property('publicPushBadgeUrl') ? base_url(property('publicPushBadgeUrl'), true) : '' }}'
		});

		jQuery.extend(XF.phrases, {
			// <!--[XF:js_global:xf_phrase_start]-->
			date_x_at_time_y: "{{ phrase('date_x_at_time_y')|escape('js') }}",
			day_x_at_time_y:  "{{ phrase('day_x_at_time_y')|escape('js') }}",
			yesterday_at_x:   "{{ phrase('yesterday_at_x')|escape('js') }}",
			x_minutes_ago:    "{{ phrase('x_minutes_ago')|escape('js') }}",
			one_minute_ago:   "{{ phrase('one_minute_ago')|escape('js') }}",
			a_moment_ago:     "{{ phrase('a_moment_ago')|escape('js') }}",
			today_at_x:       "{{ phrase('today_at_x')|escape('js') }}",
			in_a_moment:      "{{ phrase('in_a_moment')|escape('js') }}",
			in_a_minute:      "{{ phrase('in_a_minute')|escape('js') }}",
			in_x_minutes:     "{{ phrase('in_x_minutes')|escape('js') }}",
			later_today_at_x: "{{ phrase('later_today_at_x')|escape('js') }}",
			tomorrow_at_x:    "{{ phrase('tomorrow_at_x')|escape('js') }}",

			day0: "{{ phrase('day_sunday')|escape('js') }}",
			day1: "{{ phrase('day_monday')|escape('js') }}",
			day2: "{{ phrase('day_tuesday')|escape('js') }}",
			day3: "{{ phrase('day_wednesday')|escape('js') }}",
			day4: "{{ phrase('day_thursday')|escape('js') }}",
			day5: "{{ phrase('day_friday')|escape('js') }}",
			day6: "{{ phrase('day_saturday')|escape('js') }}",

			dayShort0: "{{ phrase('day_sunday_short')|escape('js') }}",
			dayShort1: "{{ phrase('day_monday_short')|escape('js') }}",
			dayShort2: "{{ phrase('day_tuesday_short')|escape('js') }}",
			dayShort3: "{{ phrase('day_wednesday_short')|escape('js') }}",
			dayShort4: "{{ phrase('day_thursday_short')|escape('js') }}",
			dayShort5: "{{ phrase('day_friday_short')|escape('js') }}",
			dayShort6: "{{ phrase('day_saturday_short')|escape('js') }}",

			month0: "{{ phrase('month_1')|escape('js') }}",
			month1: "{{ phrase('month_2')|escape('js') }}",
			month2: "{{ phrase('month_3')|escape('js') }}",
			month3: "{{ phrase('month_4')|escape('js') }}",
			month4: "{{ phrase('month_5')|escape('js') }}",
			month5: "{{ phrase('month_6')|escape('js') }}",
			month6: "{{ phrase('month_7')|escape('js') }}",
			month7: "{{ phrase('month_8')|escape('js') }}",
			month8: "{{ phrase('month_9')|escape('js') }}",
			month9: "{{ phrase('month_10')|escape('js') }}",
			month10: "{{ phrase('month_11')|escape('js') }}",
			month11: "{{ phrase('month_12')|escape('js') }}",

			active_user_changed_reload_page: "{{ phrase('active_user_changed_reload_page')|escape('js') }}",
			server_did_not_respond_in_time_try_again: "{{ phrase('server_did_not_respond_in_time_try_again')|escape('js') }}",
			oops_we_ran_into_some_problems: "{{ phrase('oops_we_ran_into_some_problems')|escape('js') }}",
			oops_we_ran_into_some_problems_more_details_console: "{{ phrase('oops_we_ran_into_some_problems_more_details_console')|escape('js') }}",
			file_too_large_to_upload: "{{ phrase('file_too_large_to_upload')|escape('js') }}",
			uploaded_file_is_too_large_for_server_to_process: "{{ phrase('uploaded_file_is_too_large_for_server_to_process')|escape('js') }}",
			files_being_uploaded_are_you_sure: "{{ phrase('files_being_uploaded_are_you_sure')|escape('js') }}",
			attach: "{{ phrase('button.attach')|escape('js') }}",
			rich_text_box: "{{ phrase('rich_text_box')|escape('js') }}",
			close: "{{ phrase('close')|escape('js') }}",
			link_copied_to_clipboard: "{{ phrase('link_copied_to_clipboard')|escape('js') }}",
			text_copied_to_clipboard: "{{ phrase('text_copied_to_clipboard')|escape('js') }}",
			loading: "{{ phrase('loading...')|escape('js') }}",

			processing: "{{ phrase('processing')|escape('js') }}",
			'processing...': "{{ phrase('processing...')|escape('js') }}",

			showing_x_of_y_items: "{{ phrase('showing_x_of_y_items')|escape('js') }}",
			showing_all_items: "{{ phrase('showing_all_items')|escape('js') }}",
			no_items_to_display: "{{ phrase('no_items_to_display')|escape('js') }}",

			push_enable_notification_title: "{{ phrase('push_enable_notification_title', {'boardTitle': $xf.options.boardTitle})|escape('js') }}",
			push_enable_notification_body: "{{ phrase('push_enable_notification_body')|escape('js') }}"
		});
	</script>

	<form style="display:none" hidden="hidden">
		<input type="text" name="_xfClientLoadTime" value="" id="_xfClientLoadTime" title="_xfClientLoadTime" tabindex="-1" />
	</form>

	<xf:if is="$xf.visitor.canSearch() && $xf.request.getFullRequestUri() === link('full:index')">
		<script type="application/ld+json">
		{
			"@context": "https://schema.org",
			"@type": "WebSite",
			"url": "{{ link('canonical:index')|escape('js') }}",
			"potentialAction": {
				"@type": "SearchAction",
				"target": "{{ link('canonical:search/search')|escape('js') . ($xf.options.useFriendlyUrls ? '?' : '&') . 'keywords={search_keywords}' }}",
				"query-input": "required name=search_keywords"
			}
		}
		</script>
	</xf:if>
	
	<xf:if is="property('dt_collapsible_sidebar_block') && !property('dt_disable_sidebar')">
		<script>
			var sidebarRowCollapse = '<span class="block-control fas fa-chevron-up"></span>';
			$('.p-body-sidebar .block-container .block-minorHeader').append(sidebarRowCollapse);
			$('.block-control').click(function () {
				if ($(this).parents('.block-container').children('.block-body').hasClass('active')){
					$(this).parents('.block-container').children('.block-body').removeClass('active').slideDown('400');
					$(this).removeClass('fa-chevron-down').addClass('fa-chevron-up');
				}else {
					$(this).parents('.block-container').children('.block-body').addClass('active').slideUp('400');
					$(this).addClass('fa-chevron-down').removeClass('fa-chevron-up');
				}
			});
		</script>
	</xf:if>
</xf:macro>]]></template>
    <template title="inline_mod_actions" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[<div class="inlineModBar">
	<div class="inlineModBar-inner">
		<div class="inlineModBar-close">
			<xf:button class="js-inlineModClose">X</xf:button>
		</div>

		<ul class="inlineModBar-controls">
			<li class="inlineModBar-title">{$title} {$total|number|parens}</li>
			<li><xf:checkbox standalone="true">
				<xf:option labelclass="iconic--inherit-color" class="js-inlineModSelectAll" label="{{ phrase('select_all') }}"/>
			</xf:checkbox></li>
			<li>
				<select class="input input--inline js-inlineModAction">
					<optgroup>
						<option value="" hidden="hidden">{{ phrase('choose_action...') }}</option>
						<xf:foreach loop="$actions" key="$id" value="$action">
							<option value="{$id}" style="color: black">{$action}</option>
						</xf:foreach>
					</optgroup>
					<xf:if is="!$actions.deselect">
						<optgroup>
							<option value="deselect" style="color: black">{{ phrase('deselect_all') }}</option>
						</optgroup>
					</xf:if>
				</select>
				<xf:button type="submit" class="button--primary inlineModBar-goButton">{{ phrase('go') }}</xf:button>
			</li>
		</ul>
	</div>
</div>]]></template>
    <template title="inline_mod_post_move" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[<xf:title>{{ phrase('inline_moderation_move_posts') }}</xf:title>

<xf:form action="{{ link('inline-mod') }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body js-prefixListenContainer">
			<xf:inforow rowtype="confirm">{{ phrase('you_sure_you_want_to_move_x_posts_to_new_thread', {'count': $total}) }}</xf:inforow>

			<xf:radiorow name="thread_type" value="{$type}">
				<xf:option value="new" checked="checked" labelclass="u-featuredText">
					<xf:label>{{ phrase('new_thread') }}</xf:label>
					<xf:dependent>
						<label>{{ phrase('destination_forum:') }}</label>
						<xf:select name="node_id" value="{$first.Thread.node_id}" class="js-nodeList">
							<xf:foreach loop="$nodeTree.getFlattened(0)" value="$treeEntry">
								<xf:option style="color:black" value="{$treeEntry.record.node_id}" disabled="{{ $treeEntry.record.node_type_id != 'Forum' ? 'disabled' : '' }}">{{ repeat_raw('&nbsp; ', $treeEntry.depth) }} {$treeEntry.record.title}</xf:option>
							</xf:foreach>
						</xf:select>
					</xf:dependent>

					<xf:dependent>
						<label>{{ phrase('new_thread_title:') }}</label>
						<xf:prefixinput
							prefixes="{$prefixes}"
							type="thread"
							prefix-value="{$first.Thread.prefix_id}"
							textbox-value="{$first.Thread.title}"
							autofocus="autofocus"
							href="{{ link('forums/prefixes') }}"
							listen-to="< .js-prefixListenContainer | .js-nodeList"
							maxlength="{{ max_length($first.Thread, 'title') }}" />
					</xf:dependent>
				</xf:option>

				<xf:option value="existing" labelclass="u-featuredText">
					<xf:label>{{ phrase('existing_thread') }}</xf:label>
					<xf:dependent>
						<label>{{ phrase('thread_url:') }}</label>
						<xf:textbox name="existing_url" type="url" />
					</xf:dependent>
				</xf:option>
			</xf:radiorow>

			<xf:macro template="helper_action" name="author_alert" arg-selected="{{ $total == 1 }}" />
		</div>
		<xf:submitrow icon="move" />
	</div>

	<xf:foreach loop="$posts" value="$post">
		<xf:hiddenval style="color:black" name="ids[]">{$post.post_id}</xf:hiddenval>
	</xf:foreach>

	<xf:hiddenval name="type">post</xf:hiddenval>
	<xf:hiddenval name="action">move</xf:hiddenval>
	<xf:hiddenval name="confirmed">1</xf:hiddenval>

	<xf:redirect url="{$redirect}" />
</xf:form>]]></template>
    <template title="inline_mod_thread_move" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[<xf:js src="xf/prefix_menu.js" min="1" />

<xf:title>{{ phrase('inline_moderation_move_threads') }}</xf:title>

<xf:form action="{{ link('inline-mod') }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body js-prefixListenContainer">
			<xf:inforow rowtype="confirm">{{ phrase('you_sure_you_want_to_move_x_threads', {'count': $total}) }}</xf:inforow>
			<xf:selectrow name="target_node_id" value="{$first.node_id}" class="js-nodeList"
				label="{{ phrase('destination_forum') }}">

				<xf:foreach loop="$nodeTree.getFlattened(0)" value="$treeEntry">
					<xf:option style="color:black" value="{$treeEntry.record.node_id}" disabled="{{ $treeEntry.record.node_type_id != 'Forum' ? 'disabled' : '' }}">{{ repeat_raw('&nbsp; ', $treeEntry.depth) }} {$treeEntry.record.title}</xf:option>
				</xf:foreach>
			</xf:selectrow>

			<xf:checkboxrow>
				<xf:option style="color:black" name="apply_thread_prefix"
					label="{{ phrase('apply_prefix_to_selected_threads') }}">

					<xf:dependent>
						<xf:macro template="prefix_macros" name="select"
							arg-type="thread"
							arg-prefixes="{$prefixes}"
							arg-href="{{ link('forums/prefixes') }}"
							arg-listenTo="< .js-prefixListenContainer | .js-nodeList" />
					</xf:dependent>
				</xf:option>
			</xf:checkboxrow>

			<xf:macro template="helper_action" name="thread_redirect" arg-label="{{ phrase('redirection_notice') }}" />

			<xf:checkboxrow>
				<xf:option style="color:black" name="notify_watchers" value="1" selected="{{ $total == 1 }}">{{ phrase('notify_members_watching_destination_forum') }}</xf:option>
			</xf:checkboxrow>

			<xf:macro template="helper_action" name="thread_alert" arg-selected="{{ $total == 1 }}" />
		</div>
		<xf:submitrow icon="move" />
	</div>

	<xf:foreach loop="$threads" value="$thread">
		<xf:hiddenval style="color:black" name="ids[]" style="color:black">{$thread.thread_id}</xf:hiddenval>
	</xf:foreach>

	<xf:hiddenval name="type">thread</xf:hiddenval>
	<xf:hiddenval name="action">move</xf:hiddenval>
	<xf:hiddenval name="confirmed">1</xf:hiddenval>

	<xf:redirect url="{$redirect}" />
</xf:form>]]></template>
    <template title="login" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[<style>
	.loginButtons {
		display: flex;
		flex-direction: row;
		max-width: 35%;
		margin-left: auto;
    	margin-right: auto;
	}
	.viaGoogle {
		display: flex;
		padding-top: 6px;
	}
	.loginButtonCustom {
		
	}
</style>

<xf:js src="xf/login_signup.js" min="1" />

<xf:title>{{ phrase('log_in') }}</xf:title>

<xf:head option="robots"><meta name="robots" content="noindex" /></xf:head>

<xf:if contentcheck="true">
	<div class="blockMessage blockMessage--error blockMessage--iconic">
		<xf:contentcheck>{$error}</xf:contentcheck>
	</div>
</xf:if>

<div class="blocks">
	<xf:form action="{{ link('login/login') }}" class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:textboxrow name="login" value="{$login}" autofocus="autofocus" autocomplete="username"
					label="{{ phrase('your_name_or_email_address') }}" />

				<xf:passwordboxrow name="password" autocomplete="current-password"
					label="{{ phrase('password') }}">

					<xf:html>
						<a href="{{ link('lost-password') }}" data-xf-click="overlay">{{ phrase('forgot_your_password') }}</a>
					</xf:html>
				</xf:passwordboxrow>

				<xf:if is="$captcha">
					<xf:captcharow label="{{ phrase('verification') }}" force="true" />
				</xf:if>

				<xf:checkboxrow>
					<xf:option name="remember" selected="true">{{ phrase('stay_logged_in') }}</xf:option>
				</xf:checkboxrow>

				<xf:hiddenval name="_xfRedirect">{$redirect}</xf:hiddenval>
			</div>
			<div class="loginButtons">
				<div class="loginButtonCustom">
					<xf:submitrow icon="login" /> 
				</div>
				
				<div class="viaGoogle formSubmitRow-controls">
					<xf:foreach loop="$providers" value="$provider">
						<xf:macro template="connected_account_macros" name="button"
							arg-provider="{$provider}" />
					</xf:foreach>
				</div>
			</div>
			
		</div>
		<xf:if is="$xf.options.registrationSetup.enabled">
			<div class="block-outer block-outer--after">
				<div class="block-outer-middle">
					{{ phrase('dont_have_account_question') }} <xf:button href="{{ link('register') }}">{{ phrase('register_now') }}</xf:button>
				</div>
			</div>
		</xf:if>
	</xf:form>
 
	<xf:if is="$providers3 is not empty">
		<div class="blocks-textJoiner"><span></span><em>{{ phrase('or_separator') }}</em><span></span></div>

		<div class="block">
			<div class="block-container">
				<div class="block-body">
					<xf:formrow rowtype="button"
						label="{{ phrase('log_in_using') }}">

						<ul class="listHeap">
							<xf:foreach loop="$providers" value="$provider">
								<li>
									<xf:macro template="connected_account_macros" name="button"
										arg-provider="{$provider}" />
								</li>
							</xf:foreach>
						</ul>
					</xf:formrow>
				</div>
			</div>
		</div>
	</xf:if>
</div>]]></template>
    <template title="member.less" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[@_memberHeader-padding: @xf-paddingLarge;
@_memberHeader-avatarSize: @avatar-l;
@_memberHeader-avatarSizeShrunk: @avatar-m;

.memberHeader
{
	.m-clearFix();
}

.uix_memberHeader__extra {
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	
	.memberHeader-buttons {margin-left: auto;}
	
	.memberHeader-blurb {margin-right: @xf-paddingMedium;}
}

.memberHeader-main
{
	.xf-memberHeader();
}

.memberHeader-avatar
{
	float: left;
	padding: @_memberHeader-padding;
}

.memberHeader-content
{
	padding: @_memberHeader-padding;
	padding-left: ((@_memberHeader-padding) * 2 + (@_memberHeader-avatarSize));
}

.memberHeader-actionTop
{
	float: right;
}

.memberHeader-name
{
	margin: 0;
	margin-top: -.15em;
	padding: 0;
	font-weight: @xf-fontWeightNormal;
	.xf-memberHeaderName();
}

.memberHeader-banners,
.memberHeader-blurb
{
	margin-top: @xf-paddingSmall;
}

.memberHeader-separator
{
	margin: @_memberHeader-padding 0;
	border: none;
	border-top: @xf-borderSize solid @xf-borderColorLight;
}

.memberHeader-stats
{
	font-size: @xf-fontSizeLarge;

	.pairs.pairs--row
	{
		min-width: 100px;
	}
}

@media (max-width: @xf-responsiveMedium)
{
	.memberHeader-avatar .avatar
	{
		.m-avatarSize(@_memberHeader-avatarSizeShrunk);
	}

	.memberHeader-content
	{
		padding-left: ((@_memberHeader-padding) * 2 + (@_memberHeader-avatarSizeShrunk));
	}
}

@media (max-width: @xf-responsiveNarrow)
{
	.memberHeader-avatar
	{
		display: block;
		float: none;
		padding-bottom: 0;
		text-align: center;
	}

	.memberHeader-avatar .avatarWrapper-update
	{
		font-size: @xf-fontSizeSmall;
	}

	.memberHeader-content
	{
		padding-left: @_memberHeader-padding;
	}

	.memberHeader-main .memberHeader-content
	{
		display: flex;
		flex-direction: column;
		padding-top: 0;
		min-height: 0;
		text-align: center;
	}

	.memberHeader-name
	{
		text-align: center;
		margin-top: 0;
	}

	.memberHeader-actionTop
	{
		float: none;
		order: 2;
		margin-top: @xf-paddingSmall;
	}

	.memberHeader-buttons
	{
		text-align: center;
	}

	.memberHeader-banners,
	.memberHeader-blurb
	{
		text-align: inherit;
	}
}

.block-tabHeader.block-tabHeader--memberTabs
{
	border-bottom: none;
}



.memberOverviewBlocks
{
	.m-listPlain();

	display: flex;
	flex-wrap: wrap;
	align-items: stretch;

	> li
	{
		width: 33.3%;
		max-width: 100%;
		padding: @xf-blockPaddingV @xf-blockPaddingH;

		@media (max-width: 1150px)
		{
			width: 50%;
		}

		@media (max-width: 580px)
		{
			width: 100%;
		}
	}
}

.memberOverviewBlock
{
	display: flex;
	flex-direction: column;
}
.memberOverviewBlock-list
{
	.m-listPlain();

	> li
	{
		margin: @xf-paddingMedium 0;
	}
}
.memberOverviewBlock-seeMore
{
	.xf-minorBlockContent();
	padding: @xf-paddingSmall;
	text-align: center;

	// pushes this to the bottom with flex box
	margin-top: auto;
}]]></template>
    <template title="member_ban_edit" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[<xf:if is="$user.is_banned">
	<xf:title>{{ phrase('edit_ban:') }} {$user.username}</xf:title>
<xf:else />
	<xf:title>{{ phrase('ban_member') }}</xf:title>
</xf:if>

<xf:form action="{{ link('members/ban/save', $user) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body">
			<xf:if is="$user.is_banned">
				<xf:formrow label="{{ phrase('user_name') }}">{$user.username}</xf:formrow>

				<xf:formrow label="{{ phrase('banned_by') }}">{$userBan.BanUser.username}</xf:formrow>

				<xf:formrow label="{{ phrase('ban_started') }}">{{ date($userBan.ban_date) }}</xf:formrow>

				<xf:formrow label="{{ phrase('ban_ends') }}">
					<xf:if is="$userBan.end_date">
						{{ date($userBan.end_date) }}
					<xf:else />
						{{ phrase('never') }}
					</xf:if>
				</xf:formrow>
			</xf:if>

			<xf:radiorow name="ban_length" value="{{ !$userBan.end_date ? 'permanent' : 'temporary' }}"
				label="{{ phrase('ban_length') }}">

				<xf:option label="{{ phrase('permanent') }}" value="permanent" />
				<xf:option label="{{ phrase('until:') }}" value="temporary">
					<xf:dateinput name="end_date" value="{{ $userBan.end_date ? date($userBan.end_date, 'Y-m-d') : '' }}" />
				</xf:option>
			</xf:radiorow>

			<xf:textboxrow name="user_reason" value="{$userBan.user_reason}"
				maxlength="{{ max_length($userBan, 'user_reason') }}"
				label="{{ phrase('reason_for_banning') }}"
				explain="{{ phrase('this_will_be_shown_to_user_if_provided') }}" />
		</div>
		<xf:submitrow icon="save">
			<xf:html>
				<xf:if is="$user.is_banned">
					<xf:button href="{{ link('members/ban/lift', $userBan) }}" overlay="true">
						{{ phrase('lift_ban') }}
					</xf:button>
				</xf:if>
			</xf:html>
		</xf:submitrow>
	</div>
</xf:form>]]></template>
    <template title="member_macros" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[<xf:macro name="moderator_menu_actions" arg-user="!" arg-context="!">
	<!--[XF:moderator_menu:top]-->
	<xf:if is="$xf.visitor.canCleanSpam() && $user.isPossibleSpammer()">
		<a href="{{ link('spam-cleaner', $user, {'no_redirect': 1}) }}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('spam') }}</a>
	</xf:if>
	<xf:if is="$user.canWarn()">
		<a href="{{ link('members/warn', $user) }}" class="menu-linkRow">{{ phrase('warn') }}</a>
	</xf:if>
	<xf:if is="$xf.visitor.canViewWarnings() && $user.warning_count AND $context == 'tooltip'">
		<a href="{{ link('members', $user) }}#warnings" class="menu-linkRow">{{ phrase('view_warnings_x', {'count': $user.warning_count|number}) }}</a>
	</xf:if>
	<xf:if is="$xf.visitor.canViewIps()">
		<a href="{{ link('members/user-ips', $user) }}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('ip_addresses') }}</a>
		<a href="{{ link('members/shared-ips', $user) }}" class="menu-linkRow" data-xf-click="overlay">{{ phrase('shared_ips') }}</a>
	</xf:if>
	<xf:if is="$user.canBan()">
		<a href="{{ link('members/ban', $user) }}" class="menu-linkRow" data-xf-click="overlay">
			<xf:if is="$user.is_banned">
				{{ phrase('edit_ban') }}
			<xf:else />
				{{ phrase('ban_member') }}
			</xf:if>
		</a>
	</xf:if>
	<xf:if is="$user.canEdit()">
		<a href="{{ link('members/edit', $user) }}" class="menu-linkRow">{{ phrase('edit') }}</a>
	</xf:if>
	<!--[XF:moderator_menu:bottom]-->
</xf:macro>

<xf:macro name="member_stat_pairs" arg-user="!" arg-context="!">
	<!--[XF:stat_pairs:above_joined]-->
	<!--[XF:stat_pairs:above_messages]-->
	<dl class="pairs pairs--rows pairs--rows--centered fauxBlockLink">
		<dt>{{ phrase('messages') }}</dt>
		<dd>
			<a href="{{ link('search/member', null, {'user_id': $user.user_id}) }}" class="fauxBlockLink-linkRow u-concealed">
				{$user.message_count|number}
			</a>
		</dd>
	</dl>
	<!--[XF:stat_pairs:above_likes]-->
	<!--[XF:stat_pairs:above_reactions]-->
	<dl class="pairs pairs--rows pairs--rows--centered">
		<dt title="{{ phrase('reaction_score')|for_attr }}">{{ phrase('reaction_score') }}</dt>
		<dd>
			{$user.reaction_score|number}
		</dd>
	</dl>
	<!--[XF:stat_pairs:above_trophies]-->
	<xf:if is="$xf.options.enableTrophies">
		<dl class="pairs pairs--rows pairs--rows--centered fauxBlockLink">
			<dt title="{{ phrase('trophy_points')|for_attr }}">{{ phrase('points') }}</dt>
			<dd>
				<a href="{{ link('members/trophies', $user) }}" data-xf-click="overlay" class="fauxBlockLink-linkRow u-concealed">
					{$user.trophy_points|number}
				</a>
			</dd>
		</dl>
	</xf:if>
	<!--[XF:stat_pairs:below_trophies]-->
	<xf:if is="$xf.visitor.canViewWarnings() && $user.warning_points">
		<dl class="pairs pairs--rows pairs--rows--centered fauxBlockLink">
			<dt>{{ phrase('warnings') }}</dt>
			<dd>
				<a href="{{ $context == 'tooltip' ? link('members', $user) . '#warnings' : link('members/warnings', $user) }}" data-xf-click="{{ $context == 'tooltip' ? '' : 'overlay' }}" class="fauxBlockLink-linkRow u-concealed">
					{$user.warning_points|number} / {$user.warning_count|number}
				</a>
			</dd>
		</dl>
	</xf:if>
</xf:macro>

<xf:macro name="member_action_buttons" arg-user="!" arg-context="!">
	<!--[XF:action_groups:outer_start]-->
	<xf:if contentcheck="true">
		<!--[XF:action_groups:start]-->
		<div class="buttonGroup">
		<xf:contentcheck>
			<!--[XF:action_group_1:start]-->
			<xf:if is="$xf.visitor.canFollowUser($user)">
				<xf:button href="{{ link('members/follow', $user) }}"
					class="button--link"
					data-xf-click="switch"
					data-sk-follow="{{ phrase('follow') }}"
					data-sk-unfollow="{{ phrase('unfollow') }}">
					{{ $xf.visitor.isFollowing($user) ? phrase('unfollow') : phrase('follow') }}
				</xf:button>
			</xf:if>
			<xf:if is="$xf.visitor.canIgnoreUser($user)">
				<a href="{{ link('members/ignore', $user) }}"
					class="button button--link"
					data-xf-click="switch"
					data-sk-ignore="{{ phrase('ignore') }}"
					data-sk-unignore="{{ phrase('unignore') }}">
					{{ $xf.visitor.isIgnoring($user) ? phrase('unignore') : phrase('ignore') }}
				</a>
			</xf:if>
			<!--[XF:action_group_1:end]-->
		</xf:contentcheck>
		</div>
	</xf:if>

	<!--[XF:action_groups:middle]-->

	<xf:if contentcheck="true">
		<div class="buttonGroup">
		<xf:contentcheck>
			<!--[XF:action_group_2:start]-->
			<xf:if is="$xf.visitor.canStartConversationWith($user)">
				<xf:button href="{{ link('conversations/add', null, {'to': $user.username}) }}" class="button--link">
					{{ phrase('start_conversation') }}
				</xf:button>
			</xf:if>
			<xf:if is="$xf.visitor.canSearch() AND $context != 'tooltip'">
				<div class="buttonGroup-buttonWrapper">
					<xf:button class="button--link menuTrigger" data-xf-click="menu" aria-expanded="false" aria-haspopup="true">{{ phrase('find') }}</xf:button>
					<div class="menu" data-menu="menu" aria-hidden="true">
						<div class="menu-content">
							<h4 class="menu-header">{{ phrase('find_content') }}</h4>
							<!--[XF:find_menu:top]-->
							<a href="{{ link('search/member', null, {'user_id': $user.user_id}) }}" rel="nofollow" class="menu-linkRow">{{ phrase('find_all_content_by_x', {'name': $user.username}) }}</a>
							<a href="{{ link('search/member', null, {'user_id': $user.user_id, 'content': 'thread'}) }}" rel="nofollow" class="menu-linkRow">{{ phrase('find_all_threads_by_x', {'name': $user.username}) }}</a>
							<!--[XF:find_menu:bottom]-->
						</div>
					</div>
				</div>
			</xf:if>
			<!--[XF:action_group_2:end]-->
		</xf:contentcheck>
		</div>
		<!--[XF:action_groups:end]-->
	</xf:if>
	<!--[XF:action_groups:outer_end]-->
</xf:macro>]]></template>
    <template title="member_notable" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<xf:title>{{ $active ? $active.title : phrase('notable_members') }}</xf:title>

<xf:wrap template="member_wrapper">
	<xf:set var="$pageSelected" value="{{ $active ? $active.member_stat_key : 'overview' }}" />
</xf:wrap>

<xf:macro template="metadata_macros" name="canonical_url" arg-canonicalUrl="{{ link('canonical:members') }}" />

<xf:css src="member.less" />

<xf:if is="$userNotFound">
	<div class="blockMessage blockMessage--error blockMessage--iconic">{{ phrase('specified_member_cannot_be_found_enter_entire_name') }}</div>
</xf:if>

<xf:if is="$memberStats is empty">
	<div class="blockMessage">{{ phrase('no_notable_members_can_currently_be_shown') }}</div>
<xf:else />
	<section class="block">
		<div class="block-container">
			<xf:if is="$active">
				<ol class="block-body">
					<xf:foreach loop="{$resultsData.{$active.member_stat_key}}" key="$userId" value="$data">
						<li class="block-row block-row--separated">
							<xf:macro template="member_list_macros" name="item"
								arg-user="{$data.user}"
								arg-extraData="{$data.value}"
								arg-extraDataBig="{{ true }}" />
						</li>
					<xf:else />
						<li class="block-row">{{ phrase('no_users_match_specified_criteria') }}</li>
					</xf:foreach>
				</ol>
			<xf:else />
				<div class="block-body">
					<ol class="memberOverviewBlocks">
						<xf:foreach loop="$memberStats" key="$key" value="$memberStat">
							<xf:macro name="overview_block"
								arg-memberStat="{$memberStat}"
								arg-results="{$resultsData.{$key}}" />
						</xf:foreach>
					</ol>
				</div>
			</xf:if>
		</div>
	</section>
</xf:if>

<xf:macro name="overview_block"
	arg-memberStat="!"
	arg-results="!"
	arg-showTitle="{{ true }}"
	arg-showFooter="{{ true }}">

	<xf:if contentcheck="true">
		<li class="memberOverviewBlock">
			<xf:if is="$showTitle">
				<h3 class="block-textHeader">
					<a href="{{ link('members', null, {'key': $memberStat.member_stat_key}) }}"
						class="memberOverViewBlock-title">{$memberStat.title}</a>
				</h3>
			</xf:if>
			<ol class="memberOverviewBlock-list">
				<xf:contentcheck>
					<xf:foreach loop="$results" key="$userId" value="$data">
						<li>
							<xf:macro name="overview_row" arg-data="{$data}" />
						</li>
					</xf:foreach>
				</xf:contentcheck>
			</ol>
			<xf:if is="$showFooter">
				<div class="memberOverviewBlock-seeMore">
					<a href="{{ link('members', null, {'key': $memberStat.member_stat_key}) }}">{{ phrase('see_more...') }}</a>
				</div>
			</xf:if>
		</li>
	</xf:if>
</xf:macro>

<xf:macro name="overview_row" arg-data="!">
	<div class="contentRow contentRow--alignMiddle">
		<div class="contentRow-figure">
			<xf:avatar user="$data.user" size="xs" />
		</div>
		<div class="contentRow-main">
			<xf:if is="$data.value">
				<div class="contentRow-extra contentRow-extra--large">{$data.value}</div>
			</xf:if>
			<h3 class="contentRow-title"><xf:username user="$data.user" rich="true" /></h3>
		</div>
	</div>
</xf:macro>]]></template>
    <template title="member_tooltip" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<xf:css src="member_tooltip.less" />

<div class="tooltip-content-inner">
	<div class="memberTooltip">
		<div class="memberTooltip-header">
			<span class="memberTooltip-avatar">
				<xf:avatar user="{$user}" size="m" notooltip="true" />
			</span>
			<div class="memberTooltip-headerInfo">
				<xf:if contentcheck="true">
					<div class="memberTooltip-headerAction">
						<xf:contentcheck>
						<!--[XF:header_action_start]-->
						<xf:if contentcheck="true">
							<xf:button class="button--link button--small menuTrigger"
								data-xf-click="menu"
								aria-label="{{ phrase('more_options') }}"
								aria-expanded="false"
								aria-haspopup="true">
								<xf:fa icon="fa-cog" />
							</xf:button>

							<div class="menu" data-menu="menu" aria-hidden="true">
								<div class="menu-content">
									<h3 class="menu-header">{{ phrase('moderator_tools') }}</h3>
									<xf:contentcheck>
										<xf:macro template="member_macros" name="moderator_menu_actions"
											arg-user="{$user}"
											arg-context="tooltip" />
									</xf:contentcheck>
								</div>
							</div>
						</xf:if>
						<!--[XF:header_action_end]-->
						</xf:contentcheck>
					</div>
				</xf:if>

				<h4 class="memberTooltip-name"><xf:username user="$user" rich="true" notooltip="true" /></h4>

				<xf:if contentcheck="true">
					<div class="memberTooltip-banners">
						<xf:contentcheck><xf:userbanners user="$user" /></xf:contentcheck>
					</div>
				</xf:if>

				<xf:if contentcheck="true">
					<div class="memberTooltip-blurb">
					<xf:contentcheck>
						<xf:userblurb user="$user" tag="div" />
					</xf:contentcheck>
					</div>
				</xf:if>

				<div class="memberTooltip-blurb">
					<dl class="pairs pairs--inline">
						<dt>{{ phrase('joined') }}</dt>
						<dd><xf:date time="$user.register_date" /></dd>
					</dl>
				</div>

				<xf:if contentcheck="true">
					<div class="memberTooltip-blurb">
						<dl class="pairs pairs--inline">
							<dt>{{ phrase('last_seen') }}</dt>
							<dd dir="auto">
								<xf:contentcheck><xf:useractivity user="$user" class="pairs--plainLabel" /></xf:contentcheck>
							</dd>
						</dl>
					</div>
				</xf:if>
			</div>
		</div>
		<div class="memberTooltip-info">
			<div class="memberTooltip-stats">
				<div class="pairJustifier">
					<xf:macro template="member_macros" name="member_stat_pairs"
						arg-user="{$user}"
						arg-context="tooltip" />
				</div>
			</div>
		</div>

		<xf:if contentcheck="true">
			<hr class="memberTooltip-separator" />

			<div class="memberTooltip-actions">
			<xf:contentcheck>
				<xf:macro template="member_macros" name="member_action_buttons"
					arg-user="{$user}"
					arg-context="tooltip" />
			</xf:contentcheck>
			</div>
		</xf:if>
	</div>
</div>]]></template>
    <template title="member_view" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[<xf:title page="{$page}">{$user.username}</xf:title>
<xf:h1 hidden="true" />

<xf:macro template="metadata_macros" name="metadata"
	arg-shareUrl="{{ link('canonical:members', $user) }}"
	arg-canonicalUrl="{{ link('canonical:members', $user, {'page': $page}) }}"
	arg-imageUrl="{$user.getAvatarUrl('o', null, true)}" />

<xf:page option="ldJsonHtml">
	<script type="application/ld+json">
	{
		"@context": "https://schema.org",
		"@type": "Person",
		"name": "{$user.username|escape('json')}",
		"image": "{$user.getAvatarUrl('o', null, true)|escape('json')}"
	}
	</script>
</xf:page>

<xf:css src="member.less" />

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<div class="memberHeader">

				<div class="memberHeader-main">
					<span class="memberHeader-avatar">
						<span class="avatarWrapper">
							<xf:avatar user="{$user}" size="l"
								href="{{ $user.getAvatarUrl('o') ?: '' }}" />
							<xf:if is="$user.user_id == $xf.visitor.user_id && $xf.visitor.canUploadAvatar()">
								<a class="avatarWrapper-update" href="{{ link('account/avatar') }}" data-xf-click="overlay"><span>{{ phrase('edit') }}</span></a>
							</xf:if>
						</span>
					</span>
					<div class="memberHeader-content memberHeader-content--info">
						<xf:if contentcheck="true">
							<div class="memberHeader-actionTop">
								<xf:contentcheck>
								<!--[XF:action_top_start]-->
								<xf:if contentcheck="true">
									<div class="buttonGroup">
										<xf:contentcheck>
											<xf:if is="$user.canBeReported()">
												<xf:button href="{{ link('members/report', $user) }}"
													class="button--link" overlay="true">
													{{ phrase('report_verb') }}
												</xf:button>
											</xf:if>
											<xf:if contentcheck="true">
												<div class="buttonGroup-buttonWrapper">
													<xf:button class="button--link menuTrigger" data-xf-click="menu" aria-expanded="false" aria-haspopup="true">{{ phrase('moderator_tools') }}</xf:button>
													<div class="menu" data-menu="menu" aria-hidden="true">
														<div class="menu-content">
															<h3 class="menu-header">{{ phrase('moderator_tools') }}</h3>
															<xf:contentcheck>
																<xf:macro template="member_macros" name="moderator_menu_actions"
																	arg-user="{$user}"
																	arg-context="profile" />
															</xf:contentcheck>
														</div>
													</div>
												</div>
											</xf:if>
										</xf:contentcheck>
									</div>
								</xf:if>
								<!--[XF:action_top_end]-->
								</xf:contentcheck>
							</div>
						</xf:if>

						<h1 class="memberHeader-name"><xf:username user="{$user}" rich="true" href="" /></h1>
						
						<xf:if contentcheck="true">
							<div class="memberHeader-banners">
								<xf:contentcheck><xf:userbanners user="$user" /></xf:contentcheck>
							</div>
						</xf:if>

						<xf:userblurb user="$user" tag="div" class="memberHeader-blurb" />
						<xf:if is="{$user.Profile.custom_fields.Server}">
							<div class="memberHeader-blurb">
								<dl class="pairs pairs--inline">
									<dt>Сервер</dt>
									<dd dir="auto">
										<xf:if is="{$user.Profile.custom_fields.Server} == 'Odin'">
											<a href="https://forum.namalsk-rp.ru/odin">{$user.Profile.custom_fields.Server}</a>
										</xf:if>
										<xf:if is="{$user.Profile.custom_fields.Server} == 'Poseidon'">
											<a href="https://forum.namalsk-rp.ru/poseidon">{$user.Profile.custom_fields.Server}</a>
										</xf:if>
									</dd>
								</dl>
							</div>
						</xf:if>
					</div>
				</div>

				<div class="memberHeader-content">
					<div class="memberHeader-stats">
						<div class="pairJustifier">
							<xf:macro template="member_macros" name="member_stat_pairs"
								arg-user="{$user}"
								arg-context="profile" />
						</div>
					</div>

					<xf:if contentcheck="true">
						<hr class="memberHeader-separator" />
						
						<div class="uix_memberHeader__extra">
						<div class="memberHeader-blurb">
							<dl class="pairs pairs--inline">
								<dt>{{ phrase('joined') }}</dt>
								<dd><xf:date time="$user.register_date" /></dd>
							</dl>
						</div>

						<xf:if contentcheck="true">
							<div class="memberHeader-blurb">
								<dl class="pairs pairs--inline">
									<dt>{{ phrase('last_seen') }}</dt>
									<dd dir="auto">
										<xf:contentcheck><xf:useractivity user="$user" class="pairs--plainLabel" /></xf:contentcheck>
									</dd>
								</dl>
							</div>
						</xf:if>

							<div class="memberHeader-buttons">
								<xf:contentcheck>
									<xf:macro template="member_macros" name="member_action_buttons"
										arg-user="{$user}"
										arg-context="profile" />
								</xf:contentcheck>
							</div>
						</div>
					</xf:if>
				</div>

			</div>
		</div>
		<h2 class="block-tabHeader block-tabHeader--memberTabs tabs hScroller"
			data-xf-init="tabs h-scroller"
			data-panes=".js-memberTabPanes"
			data-state="replace"
			role="tablist">
			<span class="hScroller-scroll">
				<!--[XF:tabs:start]-->
				<xf:if is="$user.canViewPostsOnProfile()">
					<a href="{{ link('members', $user) }}"
						class="tabs-tab"
						role="tab"
						aria-controls="profile-posts">{{ phrase('profile_posts') }}</a>
				</xf:if>

				<xf:if is="$user.canViewLatestActivity()">
					<a href="{{ link('members/latest-activity', $user) }}"
						rel="nofollow"
						class="tabs-tab"
						id="latest-activity"
						role="tab">{{ phrase('latest_activity') }}</a>
				</xf:if>

				<a href="{{ link('members/recent-content', $user) }}"
					rel="nofollow"
					class="tabs-tab"
					id="recent-content"
					role="tab">{{ phrase('postings') }}</a>

				<!--[XF:tabs:after_recent_content]-->

				<a href="{{ link('members/about', $user) }}"
					class="tabs-tab"
					id="about"
					role="tab">{{ phrase('about') }}</a>

				<xf:if is="$xf.visitor.canViewWarnings() && $user.warning_count">
					<a href="{{ link('members/warnings', $user) }}"
						class="tabs-tab"
						id="warnings"
						role="tab">{{ phrase('warnings') }}</a>
				</xf:if>
				<!--[XF:tabs:end]-->
			</span>
		</h2>
	</div>
</div>

<xf:ad position="member_view_below_tabs" arg-user="{$user}" />

<ul class="tabPanes js-memberTabPanes">
	<!--[XF:tab_panes:start]-->
	<xf:if is="$user.canViewPostsOnProfile()">
		<li class="tabs-tab" role="tabpanel" id="profile-posts">
			<xf:js src="xf/inline_mod.js" min="1" />
			<div class="block block--messages" data-xf-init="inline-mod" data-type="profile_post" data-href="{{ link('inline-mod') }}">
				<div class="block-container">
					<div class="block-body js-replyNewMessageContainer">
						<xf:if is="$user.canPostOnProfile()">
							<xf:set var="$firstProfilePost" value="{$profilePosts|first}" />
							<xf:macro template="profile_post_macros" name="quick_post"
								arg-user="{$user}"
								arg-lastDate="{{ $firstProfilePost.post_date ?: 0 }}"
								arg-containerSelector="< .js-replyNewMessageContainer" />
						</xf:if>

						<xf:if is="$profilePosts is not empty">
							<xf:foreach loop="$profilePosts" value="$profilePost">
								<xf:macro template="profile_post_macros"
									name="{{ $profilePost.message_state == 'deleted' ? 'profile_post_deleted' : 'profile_post' }}"
									arg-profilePost="{$profilePost}" />
							</xf:foreach>
						<xf:else />
							<div class="block-row js-replyNoMessages">{{ phrase('there_no_messages_on_xs_profile_yet', {'name': $user.username}) }}</div>
						</xf:if>
					</div>
				</div>

				<div class="block-outer block-outer--after">
					<xf:pagenav
						page="{$page}" perpage="{$perPage}" total="{$total}"
						link="members" data="{$user}"
						wrapperclass="block-outer-main" />
					<div class="block-outer-opposite">
						<xf:showignored />
						<xf:if is="$canInlineMod">
							<xf:macro template="inline_mod_macros" name="button" />
						</xf:if>
					</div>
				</div>
			</div>
		</li>
	</xf:if>

	<xf:if is="$user.canViewLatestActivity()">
		<li data-href="{{ link('members/latest-activity', $user) }}" role="tabpanel" aria-labelledby="latest-activity">
			<div class="blockMessage">{{ phrase('loading...') }}</div>
		</li>
	</xf:if>

	<li data-href="{{ link('members/recent-content', $user) }}" role="tabpanel" aria-labelledby="recent-content">
		<div class="blockMessage">{{ phrase('loading...') }}</div>
	</li>

	<!--[XF:tab_panes:after_recent_content]-->

	<li data-href="{{ link('members/about', $user) }}" role="tabpanel" aria-labelledby="about">
		<div class="blockMessage">{{ phrase('loading...') }}</div>
	</li>

	<xf:if is="$xf.visitor.canViewWarnings() && $user.warning_count">
		<li data-href="{{ link('members/warnings', $user) }}" role="tabpanel" aria-labelledby="warnings">
			<div class="blockMessage">{{ phrase('loading...') }}</div>
		</li>
	</xf:if>
	<!--[XF:tab_panes:end]-->
</ul>

<xf:widgetpos id="member_view_sidebar" context-user="{$user}" position="sidebar" />]]></template>
    <template title="member_warn" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<xf:title>{{ phrase('warn_member:') }} {$user.username}</xf:title>

<xf:if is="$breadcrumbs">
	<xf:breadcrumb source="$breadcrumbs" />
</xf:if>

<xf:js src="xf/form_fill.js" min="1" />

<xf:form action="{$warnUrl}" ajax="true" class="block" data-xf-init="form-fill">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow label="{{ phrase('member') }}"><xf:username user="{$user}" rich="true"/></xf:formrow>

			<xf:formrow label="{{ phrase('content') }}">
				<xf:if is="{$contentUrl}">
					<a href="{$contentUrl}">{$title}</a>
				<xf:else />
					{$title}
				</xf:if>
			</xf:formrow>

			<xf:radiorow name="warning_definition_id" value="0"
				label="{{ phrase('warning_type') }}">

				<xf:foreach loop="$warnings" value="$warning">
					<xf:option value="{$warning.warning_definition_id}" class="js-FormFiller">{$warning.title}</xf:option>
				</xf:foreach>
				<xf:option value="0" class="js-FormFiller"
					label="{{ phrase('custom_warning:') }}">

					<xf:textbox name="custom_title" maxlength="{{ max_length($warning, 'title') }}" />
				</xf:option>
			</xf:radiorow>

			<div id="WarningEditableContainer">
				<xf:checkboxrow label="{{ phrase('warning_points') }}">
					<xf:option name="points_enable" value="1" selected="true"
						label="{{ phrase('apply_warning_points:') }}">

						<xf:numberbox name="points" value="1" min="0" />
					</xf:option>
				</xf:checkboxrow>

				<xf:checkboxrow label="{{ phrase('points_expiry') }}">
					<xf:option name="expiry_enable" value="1" selected="true"
						label="{{ phrase('points_expire_after:') }}">

						<xf:dependent>
							<div class="inputGroup">
								<xf:numberbox name="expiry_value" value="1" min="0" />
								<span class="inputGroup-splitter"></span>
								<xf:select name="expiry_unit" value="months" class="input--inline">
									<xf:option value="days">{{ phrase('days') }}</xf:option>
									<xf:option value="weeks">{{ phrase('weeks') }}</xf:option>
									<xf:option value="months">{{ phrase('months') }}</xf:option>
									<xf:option value="years">{{ phrase('years') }}</xf:option>
								</xf:select>
							</div>
						</xf:dependent>
					</xf:option>
				</xf:checkboxrow>
			</div>

			<xf:textarearow name="notes" autosize="true"
				label="{{ phrase('notes') }}"
				explain="{{ phrase('this_will_not_be_shown_to_member_receiving_warning') }}" />
		</div>

		<h2 class="block-formSectionHeader"><span class="block-formSectionHeader-aligner">{{ phrase('member_notification') }}</span></h2>
		<div class="block-body">
			<xf:checkboxrow>
				<xf:option name="start_conversation" value="1"
					data-xf-init="disabler"
					data-container="#WarningConversation"
					data-hide="true"
					label="{{ phrase('start_conversation_with_x', {'name': $user.username}) }}" />
			</xf:checkboxrow>

			<div id="WarningConversation">
				<xf:textboxrow name="conversation_title"
					maxlength="{{ max_length('XF:ConversationMaster', 'title') }}"
					label="{{ phrase('title') }}" />

				<xf:textarearow name="conversation_message" rows="6" autosize="true"
					maxlength="{$xf.options.messageMaxLength}"
					label="{{ phrase('message') }}" />

				<xf:checkboxrow>
					<xf:option name="open_invite" value="1">
						{{ phrase('allow_x_to_invite_others_to_this_conversation', {'user': $user.username}) }}
					</xf:option>
					<xf:option name="conversation_locked" value="1">
						{{ phrase('lock_conversation_no_responses_will_be_allowed') }}
					</xf:option>
				</xf:checkboxrow>
			</div>
		</div>

		<xf:if is="$contentActions.delete OR $contentActions.public">
			<h2 class="block-formSectionHeader"><span class="block-formSectionHeader-aligner">{{ phrase('content_action') }}</span></h2>
			<div class="block-body">
				<xf:radiorow name="content_action" value=""
					label="{{ phrase('content_action') }}">

					<xf:option value="">{{ phrase('do_nothing') }}</xf:option>
					<xf:if is="$contentActions.delete">
						<xf:option value="delete"
							label="{{ phrase('delete_the_content') }}"
							hint="{{ phrase('item_will_remain_viewable_by_moderators_and_may_be_restored_at_later') }}">

							<xf:textbox name="action_options[delete_reason]"
								placeholder="{{ phrase('reason_for_deletion...') }}"
								maxlength="{{ max_length('XF:DeletionLog', 'delete_reason') }}" />
						</xf:option>
					</xf:if>
					<xf:if is="$contentActions.public">
						<xf:option value="public"
							label="{{ phrase('post_public_warning') }}"
							hint="{{ phrase('this_will_be_visible_to_anyone_who_can_see_content_for_warning') }}">

							<xf:textbox name="action_options[public_message]" maxlength="255"
								placeholder="{{ phrase('public_warning_text...') }}" />
						</xf:option>
					</xf:if>
				</xf:radiorow>
			</div>
		</xf:if>

		<xf:submitrow submit="{{ phrase('warn') }}" sticky="true" />
	</div>

	<xf:redirect />
	<xf:hiddenval name="filled_warning_definition_id">0</xf:hiddenval>
	<input type="checkbox" id="WarningEditableInput"
		data-xf-init="disabler" data-container="#WarningEditableContainer"
		checked="checked" style="display: none" />
</xf:form>]]></template>
    <template title="message.less" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[@_message-actionColumnWidth: 40px;
@_messageSimple-userColumnWidth: 70px;

.message
{
	+ .message,
	&.message--bordered
	{
		border-top: @xf-borderSize solid @xf-borderColor;
	}
}

.message,
.block--messages .message
{
	&.is-mod-selected
	{
		background: @xf-inlineModHighlightColor;

		.message-cell--user
		{
			background: @xf-inlineModHighlightColor;
		}

		.message-userArrow:after
		{
			border-right-color: @xf-inlineModHighlightColor;
		}
	}
}

.message-inner
{
	display: flex;
}

.message-cell
{
	display: block;
	vertical-align: top;
	padding: @xf-messagePadding;

	.message--quickReply &
	{
		//padding-bottom: 35px; // for the submit row

		> .formRow:last-child
		{
			> dd
			{
				padding-bottom: 0;
			}
		}
	}

	&.message-cell--closer
	{
		padding: @xf-messagePaddingSmall;

		&.message-cell--user
		{
			.m-fixedWidthFlex((@xf-messageUserBlockWidth) + 2 * (@xf-messagePaddingSmall));

			.message--simple &
			{
				.m-fixedWidthFlex(@_messageSimple-userColumnWidth + 2 * (@xf-messagePaddingSmall));

			}
		}

		&.message-cell--action
		{
			.m-fixedWidthFlex((@_message-actionColumnWidth) + 2 * (@xf-messagePaddingSmall));
		}
	}

	&.message-cell--user,
	&.message-cell--action
	{
		position: relative;
		.xf-messageUserBlock(no-border);
		border-right: @xf-messageUserBlock--border-width solid @xf-messageUserBlock--border-color;
		min-width: 0;
	}

	&.message-cell--user
	{
		.m-fixedWidthFlex((@xf-messageUserBlockWidth) + 2 * (@xf-messagePadding));

		.message--simple &
		{
			.m-fixedWidthFlex(@_messageSimple-userColumnWidth + 2 * @xf-messagePaddingSmall);
		}
	}

	&.message-cell--action
	{
		.m-fixedWidthFlex((@_message-actionColumnWidth) + 2 * (@xf-messagePadding));
	}

	&.message-cell--main
	{
		flex: 1 1 auto;
		width: 100%;
		min-width: 0;

		&.is-editing
		{
			padding: 0;
		}

		// should really only happen when editing
		.block
		{
			margin: 0;
		}

		.block-container
		{
			margin: 0;
			border: none;
		}
	}

	&.message-cell--alert
	{
		font-size: @xf-fontSizeSmall;
		flex: 1 1 auto;
		width: 100%;
		min-width: 0;
		.xf-contentAccentBase();

		a
		{
			.xf-contentAccentLink();
		}
	}

	&.message-cell--extra
	{
		.m-fixedWidthFlex(180 + 2 * (@xf-messagePadding));
		border-left: @xf-messageUserBlock--border-width solid @xf-messageUserBlock--border-color;
		background: @xf-contentAltBg;

		.formRow-explain
		{
			margin: @xf-paddingMedium 0 0;
			.xf-formExplain();
			.m-textColoredLinks();
			font-size: 80%;
		}
	}
}

.message-main
{
	height: 100%;
	display: flex;
	flex-direction: column;
}

.message-content
{
	flex: 1 1 auto;

	// IE11 flex bug
	min-height: 1px;
}

.message-footer
{
	margin-top: auto;
}

@media (max-width: @xf-messageSingleColumnWidth)
{
	.message:not(.message--forceColumns)
	{
		.message-inner
		{
			display: block;
		}

		.message-cell
		{
			display: block;
			.m-clearFix();

			&.message-cell--user
			{
				width: auto;
				border-right: none;
				border-bottom: @xf-messageUserBlock--border-width solid @xf-messageUserBlock--border-color;
			}

			&.message-cell--main
			{
				padding-left: @xf-messagePadding;
			}

			&.message-cell--extra
			{
				width: auto;
				border-left: none;
				border-top: @xf-messageUserBlock--border-width solid @xf-messageUserBlock--border-color;
			}
		}
	}

	.message--simple:not(.message--forceColumns),
	.message--quickReply:not(.message--forceColumns)
	{
		.message-cell.message-cell--user
		{
			display: none;
		}
	}
}

// ######################## USER COLUMN #########################

.message-userArrow
{
	position: absolute;
	top: (@xf-messagePadding) * 2;
	right: -1px;

	.m-triangleLeft(xf-default(@xf-messageUserBlock--border-color, transparent), @xf-messagePadding);

	&:after
	{
		position: absolute;
		top: -(@xf-messagePadding - 1px);
		right: -@xf-messagePadding;
		content: "";

		.m-triangleLeft(@xf-contentBg, @xf-messagePadding - 1px);
	}
}

.message-avatar
{
	text-align: center;

	.avatar
	{
		vertical-align: bottom;
	}
}

.message-avatar-wrapper
{
	position: relative;
	display: inline-block;
	vertical-align: bottom;
	margin-bottom: .5em;

	.message-avatar-online
	{
		position: absolute;

		// center bottom position
		left: 50%;
		margin-left: -.615em;
		bottom: -.5em;

		&:before
		{
			.m-faBase();
			.m-faContent(@fa-var-user-circle);
			line-height: 1;
			font-weight: bold;
			color: rgb(127, 185, 0);
			background: @xf-messageUserBlock--background-color;
			border: @xf-messageUserBlock--background-color solid 2px;
			border-radius: 50%;
			display: inline-block;
		}
	}
}

.message-name
{
	font-weight: @xf-fontWeightHeavy;
	font-size: inherit;
	text-align: center;
	margin: 0;
}

.message-userTitle
{
	font-size: @xf-fontSizeSmaller;
	font-weight: normal;
	text-align: center;
	margin: 0;
}

.message-userBanner.userBanner
{
	display: block;
	margin-top: 3px;
}

.message-userExtras
{
	margin-top: 3px;
	font-size: @xf-fontSizeSmaller;
}

.message--deleted
{
	.message-userDetails
	{
		display: none;
	}

	.message-avatar .avatar
	{
		.m-avatarSize(@avatar-s);
	}
}

@media (max-width: @xf-messageSingleColumnWidth)
{
	.message:not(.message--forceColumns)
	{
		.message-userArrow
		{
			top: auto;
			right: auto;
			bottom: -1px;
			left: ((@avatar-s) / 2);

			border: none;
			.m-triangleUp(xf-default(@xf-messageUserBlock--border-color, transparent), @xf-messagePadding);

			&:after
			{
				top: auto;
				right: auto;
				left: -(@xf-messagePadding - 1px);
				bottom: -@xf-messagePadding;

				border: none;
				.m-triangleUp(@xf-contentBg, @xf-messagePadding - 1px);
			}
		}

		&.is-mod-selected
		{
			.message-userArrow:after
			{
				border-color: transparent;
				border-bottom-color: @xf-inlineModHighlightColor;
			}
		}

		.message-user
		{
			display: flex;
		}

		.message-avatar
		{
			margin-bottom: 0;

			.avatar
			{
				.m-avatarSize(@avatar-s);

				& + .message-avatar-online
				{
					left: auto;
					right: 0;
				}
			}
		}

		.message-userDetails
		{
			flex: 1;
			min-width: 0;
			padding-left: @xf-messagePadding;
		}

		.message-name
		{
			text-align: left;
		}

		.message-userTitle,
		.message-userBanner.userBanner
		{
			display: inline-block;
			text-align: left;
			margin: 0;
		}

		.message-userExtras
		{
			display: none;
		}

		.message--deleted
		{
			.message-userDetails
			{
				display: block;
			}
		}
	}
}

// ####################### MAIN COLUMN ####################

.message-content
{
	position: relative;

	.js-selectToQuoteEnd
	{
		height: 0;
		font-size: 0;
		overflow: hidden;
	}

	.message--multiQuoteList &
	{
		min-height: 80px;
		max-height: 120px;
		overflow: hidden;

		.message-body
		{
			pointer-events: none;
		}
	}
}

.message-attribution
{
	color: @xf-textColorMuted;
	font-size: @xf-fontSizeSmaller;
	padding-bottom: 3px;
	border-bottom: @xf-borderSize solid @xf-borderColorFaint;
	.m-clearFix();

	&.message-attribution--plain
	{
		border-bottom: none;
		font-size: inherit;
		padding-bottom: 0;
	}

	&.message-attribution--split
	{
		display: flex;
		align-items: flex-end;

		.message-attribution-opposite
		{
			margin-left: auto;
		}
	}
}

.message-attribution-main
{
	float: left;
}

.message-attribution-opposite
{
	float: right;

	&.message-attribution-opposite--list
	{
		display: flex;
		.m-listPlain();

		> li
		{
			margin-left: 14px;

			&:first-child
			{
				margin-left: 0;
			}
		}

		a
		{
			display: inline-block;
			margin: -3px -7px;
			padding: 3px 7px;
		}
	}

	a
	{
		color: inherit;

		&:hover
		{
			text-decoration: none;
			color: @xf-linkHoverColor;
		}
	}
}

.message-attribution-source
{
	font-size: @xf-fontSizeSmaller;
	margin-bottom: @xf-paddingSmall;
}

.message-attribution-user
{
	font-weight: @xf-fontWeightHeavy;

	.avatar
	{
		display: none;
	}

	.attribution
	{
		display: inline;
		font-size: inherit;
		font-weight: inherit;
		margin: 0;
	}
}

.message-newIndicator
{
	.xf-messageNewIndicator();
}

.message-minorHighlight
{
	font-size: @xf-fontSizeSmall;
	color: @xf-textColorFeature;
}

.message-fields
{
	margin: @xf-messagePadding 0;
}

.message-body
{
	margin: @xf-messagePadding 0;
	font-family: @xf-fontFamilyBody;
	.m-clearFix();

	.message--simple &
	{
		margin-top: @xf-messagePaddingSmall;
		margin-bottom: @xf-messagePaddingSmall;
	}

	&:last-child
	{
		margin-bottom: 0;
	}

	.message-title
	{
		// basically replicates .structItem-title
		font-size: @xf-fontSizeLarge;
		font-weight: @xf-fontWeightNormal;
		margin: 0 0 @xf-messagePadding 0;
		padding: 0;
	}
}

.message-attachments
{
	margin: .5em 0;
}

	.message-attachments-list
	{
		.m-listPlain();
	}

.message-lastEdit
{
	margin-top: .5em;
	color: @xf-textColorMuted;
	font-size: @xf-fontSizeSmallest;
	text-align: right;
}

.message-signature
{
	margin-top: @xf-messagePadding;
	.xf-messageSignature();
}

.message-actionBar .actionBar-set
{
	margin-top: @xf-messagePadding;
	font-size: @xf-fontSizeSmall;

	.message--simple &
	{
		margin-top: @xf-messagePaddingSmall;
	}
}

.message .likesBar
{
	margin-top: @xf-messagePadding;
	padding: @xf-messagePaddingSmall;
}

.message .reactionsBar
{
	margin-top: @xf-messagePadding;
	padding: @xf-messagePaddingSmall;
}

.message-historyTarget
{
	margin-top: @xf-messagePadding;
}

.message-gradient
{
	position: absolute;
	bottom: 0;
	left: 0;
	right: 0;
	height: 60px;

	.m-gradient(fade(@xf-contentBg, 0%), @xf-contentBg, @xf-contentBg, 0%, 90%);
}

.message-responses
{
	margin-top: @xf-messagePaddingSmall;
	font-size: @xf-fontSizeSmall;

	.editorPlaceholder
	{
		.input
		{
			font-size: inherit;
		}
	}
}

.message-responseRow
{
	margin-top: -@xf-minorBlockContent--border-width;
	.xf-minorBlockContent();
	padding: @xf-messagePaddingSmall;

	// note that border radiuses are very difficult to do here due to a lot of dynamic showing/hiding

	&.message-responseRow--likes,
	&.message-responseRow--reactions
	{
		.m-transitionFadeDown();
	}
}

@media (max-width: @xf-messageSingleColumnWidth)
{
	.message:not(.message--forceColumns)
	{
		.message-attribution-user .avatar
		{
			display: inline-flex;
			.m-avatarSize((@xf-fontSizeNormal) * (@xf-lineHeightDefault));
		}

		.message-content
		{
			// this is 1px to workaround an IE11 issue - see #139187
			min-height: 1px;
		}
	}
}

@media (max-width: @xf-responsiveNarrow)
{
	.message-signature
	{
		display: none;
	}
}

// MESSAGE MENU

.message-menuGroup
{
	display: inline-block;
}

.message-menuTrigger
{
	display: inline-block;

	&:after
	{
		.m-menuGadget(); // 1em
		text-align: right;
	}

	&:hover:after
	{
		color: black;
	}
}

.message-menu-section
{
	&--editDelete
	{
		.menu-linkRow
		{
			font-weight: @xf-fontWeightHeavy;
			font-size: @xf-fontSizeNormal;
		}
	}
}

.message-menu-link
{
	&--delete i:after
	{
		.m-faContent(@fa-var-trash-alt);
	}
	&--edit i:after
	{
		.m-faContent(@fa-var-edit);
	}
	&--report i:after
	{
		.m-faContent(@fa-var-frown);
	}
	&--warn i:after
	{
		.m-faContent(@fa-var-exclamation-triangle);
	}
	&--spam i:after
	{
		.m-faContent(@fa-var-ban);
	}
	&--ip i:after
	{
		.m-faContent(@fa-var-sitemap);
	}
	&--history i:after
	{
		.m-faContent(@fa-var-history);
	}
	&--follow i:after
	{
		.m-faContent(@fa-var-user-plus);
	}
	&--ignore i:after
	{
		.m-faContent(@fa-var-user-times);
	}
	&--share i:after
	{
		.m-faContent(@fa-var-share-alt);
	}
}

// ############################# COMMENTS ###############

.comment
{
}

.comment-inner
{
	display: table;
	table-layout: fixed;
	width: 100%;
}

.comment-avatar
{
	display: table-cell;
	width: 24px;
	vertical-align: top;

	.avatar,
	img
	{
		vertical-align: bottom;
	}
}

.comment-main
{
	display: table-cell;
	padding-left: @xf-messagePadding;
	vertical-align: top;
}

.comment-contentWrapper
{
	margin-bottom: @xf-messagePaddingSmall;
}

.comment-user
{
	font-weight: @xf-fontWeightHeavy;
}

.comment-body
{
	display: inline;
}

.comment-input
{
	display: block;
	height: 2.34em;
	margin-bottom: @xf-messagePaddingSmall;
}

.comment-actionBar .actionBar-set
{
	margin-top: @xf-messagePaddingSmall;
	color: @xf-textColorMuted;
}

.comment-likes,
.comment-reactions
{
	.m-transitionFadeDown();

	margin-top: @xf-messagePaddingSmall;
	font-size: @xf-fontSizeSmaller;
}

// ################################## MESSAGE QUICK REPLY ADDITIONS #############

.formSubmitRow.formSubmitRow--messageQr
{
	.formSubmitRow-controls
	{
		text-align: center;
		padding-left: 0;
		padding-right: 0;
		margin-left: @xf-messagePadding;
		margin-right: @xf-messagePadding;

		@media (max-width: @xf-formResponsive)
		{
			text-align: right;
		}
	}
}

// ################################## MESSAGE NOTICES #############################

.messageNotice
{
	margin: @xf-messagePaddingSmall 0;
	padding: @xf-messagePaddingSmall @xf-messagePadding;
	.xf-contentAccentBase();
	font-size: @xf-fontSizeSmaller;
	border-left: @xf-borderSizeMinorFeature solid @xf-borderColorAttention;

	&.messageNotice--nested
	{
		border-left-width: @xf-borderSize;
	}

	&:not(.messageNotice--highlighted)
	{
		a,
		a:hover
		{
			.xf-contentAccentLink();
		}
	}

	&:before
	{
		display: inline-block;
		.m-faBase();
		padding-right: .2em;
		font-size: 125%;
		color: @xf-textColorAttention;
	}

	&.messageNotice--highlighted
	{
		.xf-contentHighlightBase();
		border-left-color: @xf-borderColorFeature;

		&:before
		{
			color: @xf-textColorFeature;
		}
	}
	&.messageNotice--deleted {color: black; }
	&.messageNotice--moderated {color: black; }
	&.messageNotice--warning {color: black; }
	&.messageNotice--ignored {color: black; }
	&.messageNotice--deleted:before { .m-faContent(@fa-var-trash-alt, .88em); background-color: black !important; }
	&.messageNotice--moderated:before { .m-faContent(@fa-var-shield, 1em); }
	&.messageNotice--warning:before { .m-faContent(@fa-var-exclamation-triangle, 1em); }
	&.messageNotice--ignored:before { .m-faContent(@fa-var-microphone-slash, 1.25em); }
}

// ##################### MESSAGE VARIANTS/RESPONSIVE ##################

@media (min-width: @xf-responsiveEdgeSpacerRemoval)
{
	.block:not(.block--messages)
	{
		@{block-noStripSel} > .block-body:first-child > .message:first-child,
		.block-topRadiusContent.message,
		.block-topRadiusContent > .message:first-child
		{
			.message-cell:first-child { border-top-left-radius: @block-borderRadius-inner; }
			.message-cell:last-child { border-top-right-radius: @block-borderRadius-inner; }
		}

		@{block-noStripSel} > .block-body:last-child > .message:last-child,
		.block-bottomRadiusContent.message,
		.block-bottomRadiusContent > .message:last-child
		{
			.message-cell:first-child { border-bottom-left-radius: @block-borderRadius-inner; }
			.message-cell:last-child { border-bottom-right-radius: @block-borderRadius-inner; }
		}
	}
}

.block--messages
{
	.block-container
	{
		background: none;
		border: none;
	}

	.message,
	.block-row
	{
		.xf-contentBase();
		.xf-blockBorder();
		border-radius: @xf-blockBorderRadius;

		+ .message,
		+ .block-row
		{
			margin-top: @xf-blockPaddingV;
		}
	}

	.message-spacer
	{
		+ .message,
		+ .block-row
		{
			margin-top: @xf-blockPaddingV;
		}
	}

	.message-cell
	{
		&:first-child
		{
			border-radius: 0;
			border-top-left-radius: @block-borderRadius-inner;
			border-bottom-left-radius: @block-borderRadius-inner;
		}

		&:last-child
		{
			border-radius: 0;
			border-top-right-radius: @block-borderRadius-inner;
			border-bottom-right-radius: @block-borderRadius-inner;
		}

		&:first-child:last-child
		{
			border-radius: @block-borderRadius-inner;
		}
	}

	@media (max-width: @xf-messageSingleColumnWidth)
	{
		.message:not(.message--forceColumns)
		{
			.message-cell
			{
				&:first-child
				{
					border-radius: 0;
					border-top-left-radius: @block-borderRadius-inner;
					border-top-right-radius: @block-borderRadius-inner;
				}

				&:last-child
				{
					border-radius: 0;
					border-bottom-left-radius: @block-borderRadius-inner;
					border-bottom-right-radius: @block-borderRadius-inner;
				}

				&:first-child:last-child
				{
					border-radius: @block-borderRadius-inner;
				}
			}
		}

		.message--simple:not(.message--forceColumns) .message-cell--user + .message-cell
		{
			border-radius: 0;
			border-top-left-radius: @block-borderRadius-inner;
			border-top-right-radius: @block-borderRadius-inner;
		}
	}

	@media (max-width: @xf-responsiveEdgeSpacerRemoval)
	{
		.message,
		.block-row
		{
			border-left: none;
			border-right: none;
			border-radius: 0;
		}

		.message-cell
		{
			border-radius: 0;

			&:first-child,
			&:last-child
			{
				border-radius: 0;
			}
		}

		.message--simple .message-cell--user + .message-cell
		{
			border-radius: 0;
		}

		.message-container
		{
			padding: @xf-paddingMedium 0 0 0;

			.message-container-header
			{
				text-align: center;
			}

			.message
			{
				border-bottom: 0;
			}
		}
	}
}]]></template>
    <template title="message_macros" type="public" addon_id="XF" version_id="2010070" version_string="2.1.0"><![CDATA[<xf:macro name="user_info"
	arg-user="!"
	arg-fallbackName="">

	<section itemscope itemtype="https://schema.org/Person" class="message-user">
		<div class="message-avatar {{ ($xf.options.showMessageOnlineStatus && $user && $user.isOnline()) ? 'message-avatar--online' : '' }}">
			<div class="message-avatar-wrapper">
				<xf:avatar user="$user" size="m" defaultname="{$fallbackName}" itemprop="image" />
				<xf:if is="$xf.options.showMessageOnlineStatus && $user">
					<xf:if is="$user.isOnline()">
						<span class="message-avatar-online" tabindex="0" data-xf-init="tooltip" data-trigger="auto" title="{{ phrase('online_now')|for_attr }}"></span>
					<xf:elseif is="property('dt_offline_indicator')" />
						<span class="message-avatar-offline" tabindex="0" data-xf-init="tooltip" data-trigger="auto" title="Offline"></span>
					</xf:if>
				</xf:if>
			</div>
		</div>
		<div class="message-userDetails">
			<h4 class="message-name"><xf:username user="$user" rich="true" defaultname="{$fallbackName}" itemprop="name" /></h4>
			<xf:usertitle user="$user" tag="h5" class="message-userTitle" banner="true" itemprop="jobTitle" />
			<xf:userbanners user="$user" tag="div" class="message-userBanner" itemprop="jobTitle" />
		</div>
		<xf:if is="$user.user_id">
			<xf:set var="$extras" value="{{ property('messageUserElements') }}" />
			<xf:if contentcheck="true">
				<div class="message-userExtras{{ (property('dt_collapsible_extras') AND property('dt_messages_layout') == 'option1') ? ' message-userExtras-body message-userExtras--collapsible' : '' }}">
				<xf:contentcheck>
					<xf:if is="$extras.register_date">
						<dl class="pairs pairs--justified">
							<dt>{{ phrase('joined') }}</dt>
							<dd>{{ date($user.register_date) }}</dd>
						</dl>
					</xf:if>
					<xf:if is="$extras.message_count">
						<dl class="pairs pairs--justified">
							<dt>{{ phrase('messages') }}</dt>
							<dd>{$user.message_count|number}</dd>
						</dl>
					</xf:if>
					<xf:if is="$extras.reaction_score">
						<dl class="pairs pairs--justified">
							<dt>{{ phrase('reaction_score') }}</dt>
							<dd>{$user.reaction_score|number}</dd>
						</dl>
					</xf:if>
					<xf:if is="$extras.trophy_points && $xf.options.enableTrophies">
						<dl class="pairs pairs--justified">
							<dt>{{ phrase('points') }}</dt>
							<dd>{$user.trophy_points|number}</dd>
						</dl>
					</xf:if>
					<xf:if is="$extras.age && $user.Profile.age">
						<dl class="pairs pairs--justified">
							<dt>{{ phrase('age') }}</dt>
							<dd>{$user.Profile.age}</dd>
						</dl>
					</xf:if>
					<xf:if is="$extras.location && $user.Profile.location">
						<dl class="pairs pairs--justified">
							<dt>{{ phrase('location') }}</dt>
							<dd>
								<xf:if is="$xf.options.geoLocationUrl">
									<a href="{{ link('misc/location-info', '', {'location': $user.Profile.location}) }}" rel="nofollow noreferrer" target="_blank" class="u-concealed">{$user.Profile.location}</a>
								<xf:else />
									{$user.Profile.location}
								</xf:if>
							</dd>
						</dl>
					</xf:if>
					<xf:if is="$extras.website && $user.Profile.website">
						<dl class="pairs pairs--justified">
							<dt>{{ phrase('website') }}</dt>
							<dd><a href="{$user.Profile.website}" rel="nofollow" target="_blank">{$user.Profile.website|url('host', phrase('visit_site'))}</a></dd>
						</dl>
					</xf:if>
					<xf:if is="$extras.custom_fields">
						<xf:macro template="custom_fields_macros" name="custom_fields_values"
							arg-type="users"
							arg-group="personal"
							arg-set="{$user.Profile.custom_fields}"
							arg-additionalFilters="{{ ['message'] }}"
							arg-valueClass="pairs pairs--justified" />
						<xf:if is="$user.canViewIdentities()">
							<xf:macro template="custom_fields_macros" name="custom_fields_view"
								arg-type="users"
								arg-group="contact"
								arg-set="{$user.Profile.custom_fields}"
								arg-additionalFilters="{{ ['message'] }}"
								arg-valueClass="pairs pairs--justified" />
						</xf:if>
					</xf:if>
				</xf:contentcheck>
				</div>
			</xf:if>
		</xf:if>
		<span class="message-userArrow"></span>
	</section>
</xf:macro>

<xf:macro name="user_info_simple" arg-user="!" arg-fallbackName="">
	<header itemscope itemtype="https://schema.org/Person" class="message-user">
		<meta itemprop="name" content="{{ $user.username ?: $fallbackName }}">
		<div class="message-avatar">
			<div class="message-avatar-wrapper">
				<xf:avatar user="$user" size="s" defaultname="{$fallbackName}" itemprop="image" />
			</div>
		</div>
		<span class="message-userArrow"></span>
	</header>
</xf:macro>

<xf:macro name="attachments" arg-attachments="!" arg-message="!" arg-canView="!">
	<xf:if contentcheck="true">
		<xf:css src="attachments.less" />
		<section class="message-attachments">
			<h4 class="block-textHeader">{{ phrase('attachments') }}</h4>
			<ul class="attachmentList">
				<xf:contentcheck>
					<xf:foreach loop="$attachments" value="$attachment" if="!$message.isAttachmentEmbedded($attachment)">
						<xf:macro template="attachment_macros" name="attachment_list_item"
							arg-attachment="{$attachment}"
							arg-canView="{$canView}" />
					</xf:foreach>
				</xf:contentcheck>
			</ul>
		</section>
	</xf:if>
</xf:macro>

<xf:macro name="signature" arg-user="!">
	<xf:if is="$xf.visitor.Option.content_show_signature AND $user.Profile.signature">
		<xf:if contentcheck="true">
			<aside class="message-signature">
			<xf:contentcheck>
				{{ bb_code($user.Profile.signature, 'user:signature', $user) }}
			</xf:contentcheck>
			</aside>
		</xf:if>
	</xf:if>
</xf:macro>]]></template>
    <template title="moderator_log_moderator_actions" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<xf:title>{{ $title ? $title . ' - ' : '' }}{{ phrase('moderator_actions') }}</xf:title>

<xf:breadcrumb source="$breadcrumbs" />

<xf:if is="$logs">
	<div class="block">
		<div class="block-container js-logList-{$type}{$id}">
			<div class="block-body">
				<xf:datalist data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:cell>{{ phrase('moderator') }}</xf:cell>
						<xf:cell>{{ phrase('action') }}</xf:cell>
						<xf:cell>{{ phrase('date') }}</xf:cell>
						<xf:cell>&nbsp;</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$logs" value="$entry">
						<xf:datarow>
							<xf:cell><xf:username user="$entry.User" rich="true"/></xf:cell>
							<xf:cell>{$entry.action_text}</xf:cell>
							<xf:cell><xf:date time="{$entry.log_date}" /></xf:cell>
							<xf:action href="{{ base_url($entry.content_url) }}">{{ phrase('view') }}</xf:action>
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<xf:if is="$hasNext">
					<span class="block-footer-controls"><xf:button href="{{ link($linkRoute, $linkData, $linkParams + {'page': $page + 1}) }}"
						data-xf-click="inserter"
						data-replace=".js-logList-{$type}{$id}"
						data-scroll-target="< .overlay">
						{{ phrase('continue...') }}
					</xf:button></span>
				<xf:else />
					{{ phrase('previous_moderation_action_logs_may_have_been_removed') }}
				</xf:if>
			</div>
		</div>
	</div>
<xf:else />
	<div class="blockMessage">{{ phrase('no_moderator_actions_have_been_logged') }}</div>
</xf:if>]]></template>
    <template title="multi_quote_macros" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<xf:macro name="block"
	arg-quotes="!"
	arg-messages="!"
	arg-containerRelation="!"
	arg-dateKey="!"
	arg-bbCodeContext="!"
	arg-titleKey="title"
	arg-userRelation="User"
	arg-usernameKey="username"
	arg-messageKey="message">

	<xf:macro template="nestable_macros" name="setup"
		arg-includeLess="{{ false }}" />

	<xf:css src="message.less" />
	<xf:css src="multi_quote_sort.less" />

	<xf:title>{{ phrase('review_selected_messages') }}</xf:title>

	<div class="block">
		<div class="block-container">
			<div class="block-row block-row--minor">
				{{ phrase('drag_icon_to_rearrange_messages') }}
			</div>
			<div class="block-body nestable-container" data-xf-init="nestable" data-max-depth="1" data-value-function="serialize">
				<ol class="nestable-list">
					<xf:foreach loop="array_keys($quotes)" value="$messageId">
						<xf:set var="$message" value="{$messages.{$messageId}}" />
						<xf:if is="$message">
							<xf:foreach loop="{$quotes.{$messageId}}" key="$key" value="$quote">
								<li class="nestable-item" data-id="{$messageId}-{$key}">
									<div class="message message--simple message--bordered message--multiQuoteList message--forceColumns">
										<div class="message-inner">
											<div class="message-cell message-cell--closer message-cell--action">
												<div class="nestable-handle" aria-label="{{ phrase('drag_handle')|for_attr }}">
													<span class="u-muted"><xf:fa icon="fa-bars fa-2x" /></span>
												</div>
											</div>
											<div class="message-cell message-cell--closer message-cell--main">
												<div class="message-content">
													<div class="message-attribution">
														<div class="contentRow contentRow--alignMiddle">
															<div class="contentRow-figure">
																<xf:avatar user="{$message.{$userRelation}}" size="xxs" defaultname="{$message.{$usernameKey}}" href="" />
															</div>
															<div class="contentRow-main contentRow-main--close">
																<ul class="listInline listInline--bullet">
																	<li><xf:username user="{$message.{$userRelation}}" defaultname="{$message.{$usernameKey}}" href="" rich="true"/></li>
																	<li><xf:date time="{$message.{$dateKey}}" /></li>
																	<li>{$message.{$containerRelation}.{$titleKey}}</li>
																</ul>
															</div>
															<span class="contentRow-extra">
																<xf:button href="javascript:"
																	class="button--small button--link js-removeMessage">
																	{{ phrase('remove') }}
																</xf:button>
															</span>
														</div>
													</div>

													<article class="message-body">
														<xf:if is="$quote === true">
															{{ bb_code($message.{$messageKey}, $bbCodeContext, $message) }}
														<xf:else />
															{{ bb_code($quote, $bbCodeContext, $message) }}
														</xf:if>
													</article>

													<div class="message-gradient"></div>
												</div>
											</div>
										</div>
									</div>
								</li>
							</xf:foreach>
						</xf:if>
					</xf:foreach>
				</ol>
				<xf:hiddenval name="message_ids" value="" />
			</div>
			<div class="block-footer">
				<span class="block-footer-controls"><xf:button class="button--primary button--small u-pullRight js-quoteMessages" icon="quote">
					{{ phrase('quote_messages') }}
				</xf:button></span>
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="button"
	arg-href="!"
	arg-messageSelector="!"
	arg-storageKey="!"
	arg-addMessage="{{ phrase('multiquote_add_message') }}"
	arg-removeMessage="{{ phrase('multiquote_remove_message') }}"
	arg-row="{{ false }}">

	<xf:js src="xf/message.js" min="1" />
	<xf:set var="$button">
		<xf:button class="button--link button--multiQuote"
			style="display: none;"
			data-xf-init="multi-quote"
			data-href="{$href}"
			data-message-selector="{$messageSelector}"
			data-storage-key="{$storageKey}"
			data-add-message="{{ phrase('multiquote_add_message') }}"
			data-remove-message="{{ phrase('multiquote_remove_message') }}"
			icon="quote">
			{{ phrase('insert_quotes...') }}
		</xf:button>
	</xf:set>
	<xf:if is="$row">
		<xf:formrow label="">
			{$button|raw}
		</xf:formrow>
	<xf:else />
		{$button|raw}
	</xf:if>
</xf:macro>]]></template>
    <template title="mvb_overview" type="public" addon_id="MMO/VerifiedBadge" version_id="2000270" version_string="2.0.2"><![CDATA[<xf:title>{{ phrase('information') }}</xf:title>

<xf:css src="mvb_overview.less" />
<xf:css src="structured_list.less" />


<div class="block-rowMessage block-rowMessage--warning block-rowMessage--iconic">
	{{ phrase('mvb_verification_explain') }}<br> {{ phrase('mvb_verified_members:') }} {{ $total }}
</div>


<div class="block">
	<div class="block-outer">
		<xf:trim>
			<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
			link="verification" data="{$verification}"
			wrapperclass="block-outer-main" />
		</xf:trim>
	</div>
	
	<div class="block-container">
		<div class="block-body">
			<xf:foreach loop="$verification" value="$verifications">
				<div class="block-row block-row--separated">
					<xf:macro template="member_list_macros" name="item" arg-user="{$verifications}" />
				</div>
			</xf:foreach>
		</div>
	</div>
	
	<div class="block-outer block-outer--after">
		<xf:pagenav
			page="{$page}" perpage="{$perPage}" total="{$total}"
			link="verification" data="{$verification}"
			wrapperclass="block-outer-main" />

		<xf:showignored wrapperclass="block-outer-opposite" />
	</div>
</div>

<xf:sidebar>
	<div class="block">
		<div class="block-container">
			<h3 class="block-minorHeader">{{ phrase('mvb_rules_link_title') }}</h3>
			<div class="block-body block-row">
				{{ phrase('mvb_verification_rules') }}
			</div>
		</div>
	</div>
</xf:sidebar>]]></template>
    <template title="node_list.less" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[@_nodeList-statsCellBreakpoint: 1000px;

.node
{
	padding: 0 @xf-paddingLargest @xf-elementSpacer;
	
	& + .node
	{
		.node-body
		{
			border-top: @xf-borderSize solid #393e42;
		}
	}
	
	&:first-child
	{
		padding-top: @xf-elementSpacer;
	}
}

.node-body
{
	display: table;
	table-layout: fixed;
	width: 100%;
	padding: @xf-paddingLarge 0;
}

.node-icon
{
	display: table-cell;
	vertical-align: middle;
	text-align: center;
	width: 60px;
	padding: @xf-paddingLarge 0 @xf-paddingLarge @xf-paddingLargest;

	i
	{
		position: relative;
		display: block;
		width: 40px;
		height: 40px;
		line-height: 40px;
		font-size: 18px;

		&:before
		{
			.m-faBase();

			color: @xf-nodeIconReadColor;

			.node--unread &
			{
				opacity: 1;
				color: @xf-nodeIconUnreadColor;
				font-weight: 900;
			}
		}

		.node--forum &:before,
		.node--category &:before
		{
			.m-faContent(@fa-var-{{ property('dt_node_icon') }}, 1em);
		}
		.node--page &:before
		{
			.m-faContent(@fa-var-user-shield, .86em);
		}

		.node--link &:before
		{
			.m-faContent(@fa-var-{{ property('dt_link_node_icon') }}, .93em);
		}
		
		&:after
		{
			content: '';
			display: block;
			height: 40px;
			width: 40px;
			background-image: url({{ property('dt_files_path') }}/img/forum-icon.svg);
			background-size: 39px 39px;
			background-position: center;
			background-repeat: no-repeat;
			position: absolute;
			top: 0;
		}
	}
}

.node-main
{
	position: relative;
	display: table-cell;
	vertical-align: middle;
	padding: 0 @xf-paddingLarge @xf-paddingLarge;
	
	&:after
	{
		content: '';
		display: block;
		width: 170px;
		height: 5px;
		background-image: url(styles/vigil/img/dashed-border.svg);
		background-repeat: no-repeat;
		background-position: top left;
		position: absolute;
		bottom: -5px;
	}
}

.node-stats
{
	display: none;
	width: 140px;
	vertical-align: middle;
	text-align: center;
	padding: @xf-paddingLarge 0;

	> dl.pairs.pairs--rows
	{
		width: 50%;
		float: left;
		margin: 0;
		padding: 0 @xf-paddingMedium/2;

		&:first-child
		{
			padding-left: 0;
		}

		&:last-child
		{
			padding-right: 0;
		}
	}

	&.node-stats--single
	{
		width: 100px;

		> dl.pairs.pairs--rows
		{
			width: 100%;
			float: none;
		}
	}

	&.node-stats--triple
	{
		width: 240px;

		> dl.pairs.pairs--rows
		{
			width: 33.333%;
		}
	}

	@media (max-width: @_nodeList-statsCellBreakpoint)
	{
		display: none;
	}
}

@_nodeExtra-avatarSize: 34px;

.node-extra
{
	display: table-cell;
	vertical-align: middle;
	width: 270px;
	background: @xf-contentBg;
	padding: @xf-paddingSmall @xf-paddingLargest;
	border: @xf-borderSize solid #2a2e31;
	border-radius: 300px;

	font-size: @xf-fontSizeSmallest;
}

.node-extra-row
{
	.m-overflowEllipsis();
	color: @xf-textColorMuted;
}

.node-extra-icon
{
	padding-top: 8px;
	padding-right: @xf-paddingLarge;
	float: left;

	.avatar
	{
		.m-avatarSize(@_nodeExtra-avatarSize);
	}
}

.node-extra-placeholder
{
	font-style: italic;
}

.node-extra-title
{
	font-size: @xf-fontSizeSmall;
}

.node-extra-user a
{
	color: @xf-textColorMuted;
}

.node-title
{
	display: inline-block;
	margin: 0;
	padding: 0;
	font-size: @xf-fontSizeLarge;
	font-weight: @xf-fontWeightNormal;
	width: 71%;
	.node--unread &
	{
		font-weight: @xf-fontWeightHeavy;
	}
}

.node-description
{
	font-size: @xf-fontSizeSmall;
	color: @xf-textColorDimmed;

	&.node-description--tooltip
	{
		.has-js:not(.has-touchevents) &
		{
			display: none;
		}
	}
}

.node-meta
{
	font-size: @xf-fontSizeSmall;
}

.node-statsMeta
{
	// display: table-cell;
	display: inline-flex;
	align-items: center;
	width: 150px;
	min-width: 150px;
	vertical-align: middle;
	text-align: center;
	padding: @xf-uix_nodePadding 0;

	.pairs {line-height: 1.5;}

	> dl.pairs.pairs--rows
	{
		width: 50%;
		float: left;
		margin: 0;
		padding: 0 @xf-paddingMedium/2;
		border-right: 1px solid @xf-borderColor;

		&:first-child
		{
			padding-left: 25px;
		}

		&:last-child
		{
			padding-right: 0;
			padding-left: 5px;
			border-right: 0;
		}
	}

	&.node-stats--single
	{
		width: 100px;
		> dl.pairs.pairs--rows
		{
			width: 100%;
			float: none;
		}
	}
	&.node-stats--triple
	{
		width: 240px;
		> dl.pairs.pairs--rows
		{
			width: 33.333%;
		}
	}

	@media (max-width: 1257px)
	{
		display: none;
	}
}

.node-bonus
{
	font-size: @xf-fontSizeSmall;
	color: @xf-textColorMuted;
	text-align: right;
}

.node-subNodesFlat
{
	font-size: @xf-fontSizeSmall;
	margin-top: .3em;

	.node-subNodesLabel
	{
		display: none;
	}
}

.node-subNodeMenu
{
	display: inline;

	.menuTrigger
	{
		color: @xf-textColorMuted;
	}
}

@media (max-width: @xf-responsiveMedium)
{
	.node-main
	{
		display: block;
		width: auto;

		.node--link &,
		.node--page &
		{
			// #168882: we only display the title for these types
			// so keep these as table-cells for vertical alignment
			display: table-cell;
		}
	}

	.node-extra
	{
		display: block;
		width: auto;
		// this gives an equivalent of medium padding between main and extra, with main still having large
		margin-top: (@xf-paddingMedium - @xf-paddingLarge);
		padding: @xf-paddingMedium @xf-elementSpacer;
	}

	.node-extra-row
	{
		max-width: 100%;
	}

	.node-extra-icon
	{
		display: none;
	}

	.node-description,
	.node-stats,
	.node-subNodesFlat
	{
		display: none;
	}
}

@media (max-width: @xf-responsiveNarrow)
{
	.node-subNodeMenu
	{
		display: none;
	}
}

.subNodeLink
{
	&:before
	{
		display: inline-block;
		.m-faBase();
		width: 1em;
		padding-right: .3em;
		text-decoration: none;

		color: @xf-nodeIconReadColor;
	}

	&:hover:before
	{
		text-decoration: none;
	}

	&.subNodeLink--unread
	{
		font-weight: @xf-fontWeightHeavy;

		&:before
		{
			color: @xf-nodeIconUnreadColor;
		}
	}

	&.subNodeLink--forum:before,
	&.subNodeLink--category:before
	{
		.m-faContent(@fa-var-comments);
	}

	&.subNodeLink--page:before
	{
		.m-faContent(@fa-var-file-alt);
	}

	&.subNodeLink--link:before
	{
		.m-faContent(@fa-var-link);
	}
}

.node-subNodeFlatList
{
	.m-listPlain();
	.m-clearFix();

	> li
	{
		display: inline-block;
		margin-right: 1em;

		&:last-child
		{
			margin-right: 0;
		}
	}

	ol,
	ul,
	.node-subNodes
	{
		display: none;
	}
}

.subNodeMenu
{
	.m-listPlain();

	ol,
	ul
	{
		.m-listPlain();
	}

	.subNodeLink
	{
		display: block;
		padding: @xf-blockPaddingV @xf-blockPaddingH;
		color: @xf-menuLinkRow--color;
		text-decoration: none;
		cursor: pointer;

		&:hover
		{
			.xf-menuLinkRowSelected();
		}
	}

	li li .subNodeLink { padding-left: 1.5em; }
	li li li .subNodeLink { padding-left: 3em; }
	li li li li .subNodeLink { padding-left: 4.5em; }
	li li li li li .subNodeLink { padding-left: 6em; }
	li li li li li li .subNodeLink { padding-left: 7.5em; }
}]]></template>
    <template title="node_list_category" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[array(11) {
  ["style_id"] => string(2) "20"
  ["type"] => string(6) "public"
  ["title"] => string(18) "node_list_category"
  ["template"] => string(7530) "<xf:macro name="depth1" arg-node="!" arg-extras="!" arg-children="!" arg-childExtras="!" arg-depth="1">
	<div class="block block--category block--category{$node.node_id}">
		<span class="u-anchorTarget" id="{$node.Data.getCategoryAnchor()}"></span>
		<div class="block-container">
			<h2 class="block-header">
				
				<xf:if is="property('dt_cat_description') == 'option3' && {$node.description}">
					<a href="{{ link('categories', $node) }}" data-xf-init="tooltip" title="{$node.description|raw}">{$node.title}</a>
				<xf:else />
					<a href="{{ link('categories', $node) }}">{$node.title}</a>
				</xf:if>
				
				<xf:if is="property('dt_cat_description') != 'option3' && {$node.description}"><span class="block-desc">{$node.description|raw}</span></xf:if>
				
				<xf:if is="property('dt_collapsible_categories')">
					<span id="collapse-{$node.node_id}" class="collapseTrigger collapseTrigger--block {{ !is_toggled('_node-' . $node.node_id) ? ' is-active' : '' }}" title="Toggle Visibilty" data-xf-click="toggle" data-xf-init="toggle-storage" data-storage-type="cookie" data-target=".block--category{$node.node_id} .block-body" data-storage-key="_node-{$node.node_id}"></span>
				</xf:if>
				
				<div class="block-header--animation">
					
				</div>
				
				<span class="block-header--icon">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 15.926 14.478">
					  <defs>
						<style>
						  .cls-1 {
							fill: #9f9f9f;
						  }
						</style>
					  </defs>
					  <g id="maintitle-icon" transform="translate(0)">
						<path id="Path_145" data-name="Path 145" class="cls-1" d="M12.1,14.478H3.8a3.823,3.823,0,0,1-3.8-3.8V5.769a3.809,3.809,0,0,1,3.8-3.8H6.56A3.081,3.081,0,0,1,9.433,0h3.393a3.1,3.1,0,0,1,3.1,3.1v7.578A3.828,3.828,0,0,1,12.1,14.478ZM3.8,4.23A1.54,1.54,0,0,0,2.262,5.769v4.909A1.54,1.54,0,0,0,3.8,12.216h8.3a1.54,1.54,0,0,0,1.538-1.538V3.1a.835.835,0,0,0-.837-.837H9.411a.835.835,0,0,0-.837.837A1.12,1.12,0,0,1,7.443,4.23Z"/>
					  </g>
					</svg>
				</span>
			</h2>
	
			<xf:if is="property('dt_collapsible_categories')">
				<div class="block-body block-body--collapsible {{ !is_toggled('_node-' . $node.node_id) ? ' is-active' : '' }}">
			<xf:else />
				<div class="block-body">
			</xf:if>
				<xf:macro template="forum_list" name="node_list"
					arg-children="{$children}"
					arg-extras="{$childExtras}"
					arg-depth="{{ $depth + 1 }}" />
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="depth2" arg-node="!" arg-extras="!" arg-children="!" arg-childExtras="!" arg-depth="1">
	<div class="node node--id{$node.node_id} node--depth{$depth} node--category {{ $extras.hasNew ? 'node--unread' : 'node--read' }}">
		<div class="node-body">
			<span class="node-icon" aria-hidden="true"><i></i></span>
			<div class="node-main js-nodeMain">
				<xf:set var="$descriptionDisplay" value="{{ property('nodeListDescriptionDisplay') }}" />
				<h3 class="node-title">
					<a href="{{ link('categories', $node) }}" data-xf-init="{{ $descriptionDisplay == 'tooltip' ? 'element-tooltip' : '' }}" data-shortcut="node-description">{$node.title}</a>
				</h3>
				
				<xf:if is="!{$extras.privateInfo}">
					<div class="node-statsMeta">
						<dl class="pairs pairs--rows">
							<dd>{$extras.discussion_count|number_short(1)}</dd>
							<dt>{{ phrase('threads') }}</dt>
						</dl>
						<dl class="pairs pairs--rows">
							<dd>{$extras.message_count|number_short(1)}</dd>
							<dt>{{ phrase('messages') }}</dt>
						</dl>
					</div>
				</xf:if>
				
				<xf:if is="$descriptionDisplay != 'none' && $node.description">
					<div class="node-description {{ $descriptionDisplay == 'tooltip' ? 'node-description--tooltip js-nodeDescTooltip' : '' }}">{$node.description|raw}</div>
				</xf:if>

				<div class="node-meta">
					

					<xf:if is="$depth == 2 AND property('nodeListSubDisplay') == 'menu'">
						<xf:macro template="forum_list" name="sub_nodes_menu"
							arg-children="{$children}"
							arg-childExtras="{$childExtras}"
							arg-depth="{{ $depth + 1 }}" />
					</xf:if>
				</div>

				<xf:if is="$depth == 2 AND property('nodeListSubDisplay') == 'flat'">
					<xf:macro template="forum_list" name="sub_nodes_flat"
						arg-children="{$children}"
						arg-childExtras="{$childExtras}"
						arg-depth="{{ $depth + 1 }}" />
				</xf:if>
			</div>

			<div class="node-extra">
				<xf:if is="{$extras.privateInfo}">
					<span class="node-extra-placeholder">{{ phrase('private') }}</span>
				<xf:elseif is="{$extras.LastThread}" />
					<div class="node-extra-icon">
						<xf:if is="$xf.visitor.isIgnoring($extras.last_post_user_id)">
							<xf:avatar user="{{ null }}" size="xs" />
						<xf:else />
							<xf:avatar user="{$extras.LastPostUser}" defaultname="{$extras.last_post_username}" size="xs" />
						</xf:if>
					</div>
					<div class="node-extra-row">
						<xf:if is="$extras.LastThread.isUnread()">
							<a href="{{ link('threads/unread', $extras.LastThread) }}" class="node-extra-title" title="{$extras.LastThread.title}">{{ prefix('thread', $extras.LastThread) }}{$extras.LastThread.title}</a>
						<xf:else />
							<a href="{{ link('threads/post', $extras.LastThread, {'post_id': $extras.last_post_id}) }}" class="node-extra-title" title="{$extras.LastThread.title}">{{ prefix('thread', $extras.LastThread) }}{$extras.LastThread.title}</a>
						</xf:if>
					</div>
					<div class="node-extra-row">
						<ul class="listPlain">
							<li><xf:date time="{$extras.last_post_date}" class="node-extra-date" /></li>
							<xf:if is="$xf.visitor.isIgnoring($extras.last_post_user_id)">
								<li class="node-extra-user">{{ phrase('ignored_member') }}</li>
							<xf:else />
								<li class="node-extra-user"><xf:username user="{$extras.LastPostUser}" defaultname="{$extras.last_post_username}" rich="true" /></li>
							</xf:if>
						</ul>
					</div>
				<xf:else />
					<span class="node-extra-placeholder">{{ phrase('none') }}</span>
				</xf:if>
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="depthN" arg-node="!" arg-extras="!" arg-children="!" arg-childExtras="!" arg-depth="1">
	<li>
		<a href="{{ link('categories', $node) }}" class="subNodeLink subNodeLink--category {{ $extras.hasNew ? 'subNodeLink--unread' : '' }}">{$node.title}</a>
		<xf:macro template="forum_list" name="sub_node_list"
			arg-children="{$children}"
			arg-childExtras="{$childExtras}"
			arg-depth="{{ $depth + 1 }}" />
	</li>
</xf:macro>"
  ["addon_id"] => string(2) "XF"
  ["_xfRedirect"] => string(93) "https://forum.namalsk-rp.ru/admin.php?styles/namalsk-roleplay.20/templates&type=public&page=2"
  ["_xfToken"] => string(8) "********"
  ["_xfRequestUri"] => string(61) "/admin.php?templates/node_list_category.2422/edit&style_id=20"
  ["_xfWithData"] => string(1) "1"
  ["_xfResponseType"] => string(4) "json"
  ["templates/node_list_category_2422/save"] => string(0) ""
}]]></template>
    <template title="node_list_forum" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<xf:macro name="depth1" arg-node="!" arg-extras="!" arg-children="!" arg-childExtras="!" arg-depth="1">
	<div class="block">
		<div class="block-container">
			<div class="block-body">
				<xf:macro name="forum"
					arg-node="{$node}"
					arg-extras="{$extras}"
					arg-children="{$children}"
					arg-childExtras="{$childExtras}"
					arg-depth="{$depth}" />
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="depth2" arg-node="!" arg-extras="!" arg-children="!" arg-childExtras="!" arg-depth="1">
	<xf:macro name="forum"
		arg-node="{$node}"
		arg-extras="{$extras}"
		arg-children="{$children}"
		arg-childExtras="{$childExtras}"
		arg-depth="{$depth}" />
</xf:macro>

<xf:macro name="depthN" arg-node="!" arg-extras="!" arg-children="!" arg-childExtras="!" arg-depth="1">
	<li>
		<a href="{{ link('forums', $node) }}" class="subNodeLink subNodeLink--forum {{ $extras.hasNew ? 'subNodeLink--unread' : '' }}">{$node.title}</a>
		<xf:macro template="forum_list" name="sub_node_list"
			arg-children="{$children}"
			arg-childExtras="{$childExtras}"
			arg-depth="{{ $depth + 1 }}" />
	</li>
</xf:macro>

<xf:macro name="forum"
	arg-node="!"
	arg-extras="!"
	arg-children="!"
	arg-childExtras="!"
	arg-depth="!"
	arg-chooseName=""
	arg-bonusInfo="">

	<div class="node node--id{$node.node_id} node--depth{$depth} node--forum {{ $extras.hasNew ? 'node--unread' : 'node--read' }}">
		<div class="node-body">
			<span class="node-icon" aria-hidden="true"><i></i></span>
			<div class="node-main js-nodeMain">
				<xf:if is="$chooseName">
					<xf:checkbox standalone="true">
						<xf:option labelclass="u-pullRight" class="js-chooseItem" name="{$chooseName}[]" value="{$node.node_id}" />
					</xf:checkbox>
				</xf:if>

				<xf:set var="$descriptionDisplay" value="{{ property('nodeListDescriptionDisplay') }}" />
				<h3 class="node-title">
					<a href="{{ link('forums', $node) }}" data-xf-init="{{ $descriptionDisplay == 'tooltip' ? 'element-tooltip' : '' }}" data-shortcut="node-description">{$node.title}</a>
					<xf:if is="property('dt_new_indicator')"><span class="node--newIndicator">{{ phrase('new') }}</span></xf:if>
				</h3>
				
				<xf:if is="!{$extras.privateInfo}">
					<div class="node-statsMeta">
						<dl class="pairs pairs--rows">
							<dd>{$extras.discussion_count|number_short(1)}</dd>
							<dt>{{ phrase('threads') }}</dt>
						</dl>
						<dl class="pairs pairs--rows">
							<dd>{$extras.message_count|number_short(1)}</dd>
							<dt>{{ phrase('messages') }}</dt>
						</dl>
					</div>
				</xf:if>
				
				<xf:if is="$descriptionDisplay != 'none' && $node.description">
					<div class="node-description {{ $descriptionDisplay == 'tooltip' ? 'node-description--tooltip js-nodeDescTooltip' : '' }}">{$node.description|raw}</div>
				</xf:if>

				<div class="node-meta">
					<xf:if is="$depth == 2 AND property('nodeListSubDisplay') == 'menu'">
						<xf:macro template="forum_list" name="sub_nodes_menu"
							arg-children="{$children}"
							arg-childExtras="{$childExtras}"
							arg-depth="{{ $depth + 1 }}" />
					</xf:if>
				</div>

				<xf:if is="$depth == 2 AND property('nodeListSubDisplay') == 'flat'">
					<xf:macro template="forum_list" name="sub_nodes_flat"
						arg-children="{$children}"
						arg-childExtras="{$childExtras}"
						arg-depth="{{ $depth + 1 }}" />
				</xf:if>

				<xf:if is="$bonusInfo is not empty">
					<div class="node-bonus">{$bonusInfo}</div>
				</xf:if>
			</div>

			<div class="node-extra">
				<xf:if is="{$extras.privateInfo}">
					<span class="node-extra-placeholder">{{ phrase('private') }}</span>
				<xf:elseif is="{$extras.LastThread}" />
					<div class="node-extra-icon">
						<xf:if is="$xf.visitor.isIgnoring($extras.last_post_user_id)">
							<xf:avatar user="{{ null }}" size="xs" />
						<xf:else />
							<xf:avatar user="{$extras.LastPostUser}" defaultname="{$extras.last_post_username}" size="xs" />
						</xf:if>
					</div>
					<div class="node-extra-row">
						<xf:if is="$extras.LastThread.isUnread()">
							<a href="{{ link('threads/unread', $extras.LastThread) }}" class="node-extra-title" title="{$extras.LastThread.title}">{{ prefix('thread', $extras.LastThread) }}{$extras.LastThread.title}</a>
						<xf:else />
							<a href="{{ link('threads/post', $extras.LastThread, {'post_id': $extras.last_post_id}) }}" class="node-extra-title" title="{$extras.LastThread.title}">{{ prefix('thread', $extras.LastThread) }}{$extras.LastThread.title}</a>
						</xf:if>
					</div>
					<div class="node-extra-row">
						<ul class="listPlain">
							<li><xf:date time="{$extras.last_post_date}" class="node-extra-date" /></li>
							<xf:if is="$xf.visitor.isIgnoring($extras.last_post_user_id)">
								<li class="node-extra-user">{{ phrase('ignored_member') }}</li>
							<xf:else />
								<li class="node-extra-user"><xf:username user="{$extras.LastPostUser}" defaultname="{$extras.last_post_username}" rich="true" /></li>
							</xf:if>
						</ul>
					</div>
				<xf:else />
					<span class="node-extra-placeholder">{{ phrase('none') }}</span>
				</xf:if>
			</div>
		</div>
	</div>
	<xf:if is="{$depth} == 1">
		<xf:macro template="forum_list" name="node_list"
			arg-children="{$children}"
			arg-extras="{$childExtras}"
			arg-depth="{{ $depth + 1 }}" />
	</xf:if>
</xf:macro>]]></template>
    <template title="notices.less" type="public" addon_id="XF" version_id="2010070" version_string="2.1.0"><![CDATA[@_notice-darkBg: rgb(20, 20, 20);
@_notice-lightBg: #fefefe;
@_notice-floatingFade: 80%;
@_notice-imageSize: 48px;
@_notice-padding: @xf-paddingLarge;

.notices
{
	.m-listPlain();

	&.notices--block
	{
		.notice
		{
			margin-bottom: ((@xf-elementSpacer) / 2);
		}
	}

	&.notices--floating
	{
		// assumed to be within u-bottomFixer
		margin: 0 20px 0 auto;
		width: 300px;
		max-width: 100%;
		z-index: @zIndex-8;

		@media (max-width: 340px)
		{
			margin-right: 10px;
		}

		.notice
		{
			margin-bottom: 20px;
		}
	}

	&.notices--scrolling
	{
		display: flex;
		align-items: stretch;
		overflow: hidden;
		.xf-blockBorder();
		margin-bottom: ((@xf-elementSpacer) / 2);

		&.notices--isMulti
		{
			margin-bottom: ((@xf-elementSpacer) / 2) + 20px;
		}

		.notice
		{
			width: 100%;
			flex-grow: 0;
			flex-shrink: 0;
			border: none;
		}
	}
}

.noticeScrollContainer
{
	margin-bottom: ((@xf-elementSpacer) / 2);

	.lSSlideWrapper
	{
		.xf-blockBorder();
	}

	.notices.notices--scrolling
	{
		border: none;
		margin-bottom: 0;
	}
}

.notice
{
	.m-clearFix();
	position: relative;

	.xf-blockBorder();

	&.notice--primary
	{
		.xf-contentHighlightBase();
		border-color: @xf-borderColorHighlight;
	}

	&.notice--accent
	{
		.xf-contentAccentBase();
		border-color: @xf-borderColorAccentContent;

		a:not(.button--notice)
		{
			.xf-contentAccentLink();
		}
	}

	&.notice--dark
	{
		color: #fefefe;
		border: none;
		background: @_notice-darkBg;

		a:not(.button--notice)
		{
			color: rgb(180, 180, 180);
		}
	}

	&.notice--light
	{
		color: rgb(20, 20, 20);
		background: @_notice-lightBg;

		a:not(.button--notice)
		{
			color: rgb(130, 130, 130);
		}
	}

	&.notice--enablePush
	{
		display: none;

		@media (max-width: @xf-responsiveWide)
		{
			padding: @xf-paddingSmall @xf-paddingSmall @xf-paddingLarge;
			font-size: @xf-fontSizeSmall;
		}
	}

	&.notice--cookie
	{
		@media (max-width: @xf-responsiveWide)
		{
			.notice-content
			{
				padding: @xf-paddingSmall @xf-paddingSmall @xf-paddingLarge;
				font-size: @xf-fontSizeSmaller;

				.button--notice
				{
					font-size: @xf-fontSizeSmaller;
					padding: @xf-paddingSmall @xf-paddingMedium;

					.button-text
					{
						font-size: @xf-fontSizeSmaller;
					}
				}
			}
		}
	}

	.notices--block &
	{
		font-size: @xf-fontSizeNormal;
		border-radius: @xf-blockBorderRadius;
	}

	.notices--floating &
	{
		font-size: @xf-fontSizeSmallest;
		border-radius: @xf-borderRadiusMedium;
		box-shadow: 1px 1px 3px rgba(0,0,0, 0.25);

		&.notice--primary
		{
			background-color: fade(@xf-contentHighlightBase--background-color, @_notice-floatingFade);
		}

		&.notice--accent
		{
			background-color: fade(@xf-contentAccentBase--background-color, @_notice-floatingFade);
		}

		&.notice--dark
		{
			background-color: fade(@_notice-darkBg, @_notice-floatingFade);
		}

		&.notice--light
		{
			background-color: fade(@_notice-lightBg, @_notice-floatingFade);
		}

		.has-js &
		{
			display: none;
		}
	}

	&.notice--hasImage
	{
		.notice-content
		{
			margin-left: ((@_notice-imageSize) + (@_notice-padding) * 2);
			min-height: ((@_notice-imageSize) + (@_notice-padding) * 2);
		}
	}

	// note: visibility hidden is used by the JS to detect when responsiveness is hiding a notice

	@media (max-width: @xf-responsiveWide)
	{
		&.notice--hidewide:not(.is-vis-processed)
		{
			display: none;
			visibility: hidden;
		}
	}
	@media (max-width: @xf-responsiveMedium)
	{
		&.notice--hidemedium:not(.is-vis-processed)
		{
			display: none;
			visibility: hidden;
		}
	}
	@media (max-width: @xf-responsiveNarrow)
	{
		&.notice--hidenarrow:not(.is-vis-processed)
		{
			display: none;
			visibility: hidden;
		}
	}
}

.notice-image
{
	float: left;
	padding: @_notice-padding 0 @_notice-padding @_notice-padding;

	img
	{
		max-width: @_notice-imageSize;
		max-height: @_notice-imageSize;
	}
}

.notice-content
{
	padding: @_notice-padding;

	a.notice-dismiss
	{
		&:before
		{
			.m-faBase();

			.m-faContent(@fa-var-times, .69em);
		}

		float: right;

		color: inherit;
		font-size: 16px;
		line-height: 1;
		height: 1em;
		box-sizing: content-box;
		padding: 0 0 5px 5px;

		opacity: .5;
		.m-transition(opacity);

		cursor: pointer;

		&:hover
		{
			text-decoration: none;
			opacity: 1;
		}

		.notices--floating &
		{
			font-size: 14px;
		}
	}
}]]></template>
    <template title="poll_voters" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<xf:title>{{ phrase('poll_voters:') }} {$poll.question}</xf:title>

<xf:head option="metaNoindex"><meta name="robots" content="noindex" /></xf:head>

<xf:breadcrumb source="$breadcrumbs" />

<div class="block">
	<div class="block-container">
		<div class="block-header">{{ phrase('members_who_voted_for_x', {'response': $response.response}) }}</div>
		<div class="block-body block-row">
			<div class="js-pollVoters">
				<ul class="listInline listInline--comma"><xf:trim>
					<xf:foreach loop="$response.Votes" value="$vote">
						<li><xf:username user="$vote.User" rich="true" /></li>
					</xf:foreach>
				</xf:trim></ul>
			</div>
		</div>
	</div>
</div>]]></template>
    <template title="post_macros" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<xf:macro name="post" arg-post="!" arg-thread="!">
	<xf:css src="message.less" />
	<xf:set var="$isIgnored" value="{{ $post.isIgnored() }}" />
	<article class="message message--post js-post js-inlineModContainer {{ $post.position % $xf.options.messagesPerPage == 0 ? 'is-first' : '' }} {{ $isIgnored ? 'is-ignored' : '' }} {{ $post.isUnread() ? ' is-unread' : '' }}"
		data-author="{{ $post.User.username ?: $post.username }}"
		data-content="post-{$post.post_id}"
		id="js-post-{$post.post_id}">

		<span class="u-anchorTarget" id="post-{$post.post_id}"></span>

		<div class="message-inner">
			<div class="message-cell message-cell--user">
				<xf:macro template="message_macros" name="user_info" arg-user="{$post.User}"
					arg-fallbackName="{$post.username}"/>
				<xf:if is="property('dt_collapsible_extras') && property('dt_messages_layout') == 'option1'"><span id="collapse-{$post.post_id}" class="collapseTrigger collapseTrigger--block" data-xf-click="toggle" data-target="#js-post-{$post.post_id} .message-userExtras"></span></xf:if>
			</div>
			<div class="message-cell message-cell--main">
				<div class="message-main js-quickEditTarget">

					<header class="message-attribution message-attribution--split">
						<div class="message-attribution-main">
							<a href="{{ link('threads/post', $thread, {'post_id': $post.post_id}) }}" class="u-concealed"
								rel="nofollow">
								<xf:date time="{$post.post_date}"/>
							</a>
						</div>

						<ul class="message-attribution-opposite message-attribution-opposite--list">
							<xf:if is="$post.isUnread()">
								<li><span class="message-newIndicator">{{ phrase('new') }}</span></li>
							</xf:if>
							<li>
								<a href="{{ link('threads/post', $thread, {'post_id': $post.post_id}) }}"
									data-xf-init="share-tooltip" data-href="{{ link('posts/share', $post) }}"
									rel="nofollow">
									<xf:fa icon="fa-share-alt"/>
								</a>
							</li>
							<xf:if contentcheck="true">
								<li>
									<xf:contentcheck>
										<xf:macro template="bookmark_macros" name="link"
											arg-content="{$post}"
											arg-class="bookmarkLink--highlightable"
											arg-confirmUrl="{{ link('posts/bookmark', $post) }}"
											arg-showText="{{ false }}"/>
									</xf:contentcheck>
								</li>
							</xf:if>
							<xf:if is="!$hidePosition">
								<li>
									<a href="{{ link('threads/post', $thread, {'post_id': $post.post_id}) }}" rel="nofollow">
										#{{ number($post.position + 1) }}
									</a>
								</li>
							</xf:if>
						</ul>
					</header>

					<div class="message-content js-messageContent">

						<xf:if is="$post.message_state == 'deleted'">
							<div class="messageNotice messageNotice--deleted">
								<xf:macro template="deletion_macros" name="notice" arg-log="{$post.DeletionLog}" />
							</div>
						<xf:elseif is="$post.message_state == 'moderated'" />
							<div class="messageNotice messageNotice--moderated">
								{{ phrase('this_message_is_awaiting_moderator_approval_and_is_invisible_to_normal') }}
							</div>
						</xf:if>
						<xf:if is="$post.warning_message">
							<div class="messageNotice messageNotice--warning">
								{$post.warning_message}
							</div>
						</xf:if>
						<xf:if is="$isIgnored">
							<div class="messageNotice messageNotice--ignored">
								{{ phrase('you_are_ignoring_content_by_this_member') }}
								<xf:showignored />
							</div>
						</xf:if>

						<div class="message-userContent lbContainer js-lbContainer {{ $isIgnored ? 'is-ignored' : '' }}"
							data-lb-id="post-{$post.post_id}"
							data-lb-caption-desc="{{ $post.User ? $post.User.username : $post.username }} &middot; {{ date_time($post.post_date) }}">

							<xf:if is="$post.isFirstPost()">
								<xf:macro template="custom_fields_macros" name="custom_fields_view"
									arg-type="threads"
									arg-group="before"
									arg-onlyInclude="{$thread.Forum.field_cache}"
									arg-set="{$thread.custom_fields}"
									arg-wrapperClass="message-fields message-fields--before" />
							</xf:if>

							<article class="message-body js-selectToQuote">
								<xf:ad position="post_above_content" arg-post="{$post}" />
								{{ bb_code($post.message, 'post', $post) }}
								<div class="js-selectToQuoteEnd">&nbsp;</div>
								<xf:ad position="post_below_content" arg-post="{$post}" />
							</article>

							<xf:if is="$post.isFirstPost()">
								<xf:macro template="custom_fields_macros" name="custom_fields_view"
									arg-type="threads"
									arg-group="after"
									arg-onlyInclude="{$thread.Forum.field_cache}"
									arg-set="{$thread.custom_fields}"
									arg-wrapperClass="message-fields message-fields--after" />
							</xf:if>

							<xf:if is="$post.attach_count">
								<xf:macro template="message_macros" name="attachments"
									arg-attachments="{$post.Attachments}"
									arg-message="{$post}"
									arg-canView="{{ $thread.canViewAttachments() }}" />
							</xf:if>
						</div>

						<xf:if is="$post.last_edit_date">
							<div class="message-lastEdit">
								<xf:if is="$post.user_id == $post.last_edit_user_id">
									{{ phrase('last_edited:') }} <xf:date time="{$post.last_edit_date}" />
								<xf:else />
									{{ phrase('last_edited_by_moderator:') }} <xf:date time="{$post.last_edit_date}" />
								</xf:if>
							</div>
						</xf:if>

						<xf:macro template="message_macros" name="signature" arg-user="{$post.User}" />
					</div>

					<footer class="message-footer">
						<xf:if contentcheck="true">
							<div class="message-actionBar actionBar">
								<xf:contentcheck>
									<xf:if contentcheck="true">
										<div class="actionBar-set actionBar-set--external">
										<xf:contentcheck>
											<xf:react content="{$post}" link="posts/react" list="< .js-post | .js-reactionsList" />

											<xf:if is="$thread.canReply()">
												<xf:set var="$quoteLink">{{ link('threads/reply', $thread, {'quote': $post.post_id}) }}</xf:set>

												<xf:if is="$xf.options.multiQuote">
													<a href="{$quoteLink}"
														class="actionBar-action actionBar-action--mq u-jsOnly js-multiQuote"
														title="{{ phrase('toggle_multi_quote_tooltip')|for_attr }}"
														data-message-id="{$post.post_id}"
														data-mq-action="add">{{ phrase('quote') }}</a>
												</xf:if>

												<a href="{$quoteLink}"
													class="actionBar-action actionBar-action--reply"
													title="{{ phrase('reply_quoting_this_message')|for_attr }}"
													data-xf-click="quote"
													data-quote-href="{{ link('posts/quote', $post) }}">{{ phrase('reply') }}</a>
											</xf:if>
										</xf:contentcheck>
										</div>
									</xf:if>

									<xf:if contentcheck="true">
										<div class="actionBar-set actionBar-set--internal">
										<xf:contentcheck>
											<xf:if is="$post.canUseInlineModeration()">
												<span class="actionBar-action actionBar-action--inlineMod">
													<xf:checkbox standalone="true">
														<xf:option value="{$post.post_id}" class="js-inlineModToggle"
															data-xf-init="tooltip"
															title="{{ phrase('select_for_moderation') }}"
															label="{{ phrase('select_for_moderation') }}"
															hiddenlabel="true" />
													</xf:checkbox>
												</span>
											</xf:if>

											<xf:if is="$post.canReport()">
												<a href="{{ link('posts/report', $post) }}"
													class="actionBar-action actionBar-action--report"
													data-xf-click="overlay">{{ phrase('report_verb') }}</a>
											</xf:if>

											<xf:set var="$hasActionBarMenu" value="{{ false }}" />
											<xf:if is="$post.canEdit()">
												<xf:js src="xf/message.js" min="1" />
												<a href="{{ link('posts/edit', $post) }}"
													class="actionBar-action actionBar-action--edit actionBar-action--menuItem"
													data-xf-click="quick-edit"
													data-editor-target="#js-post-{$post.post_id} .js-quickEditTarget"
													data-menu-closer="true">{{ phrase('edit') }}</a>

												<xf:set var="$hasActionBarMenu" value="{{ true }}" />
											</xf:if>
											<xf:if is="$post.edit_count && $post.canViewHistory()">
												<a href="{{ link('posts/history', $post) }}"
													class="actionBar-action actionBar-action--history actionBar-action--menuItem"
													data-xf-click="toggle"
													data-target="#js-post-{$post.post_id} .js-historyTarget"
													data-menu-closer="true">{{ phrase('history') }}</a>

												<xf:set var="$hasActionBarMenu" value="{{ true }}" />
											</xf:if>
											<xf:if is="$post.canDelete('soft')">
												<a href="{{ link('posts/delete', $post) }}"
													class="actionBar-action actionBar-action--delete actionBar-action--menuItem"
													data-xf-click="overlay">{{ phrase('delete') }}</a>

												<xf:set var="$hasActionBarMenu" value="{{ true }}" />
											</xf:if>
											<xf:if is="$post.message_state == 'deleted' AND $post.canUndelete()">
												<a href="{{ link('posts/undelete', $post) }}"
													class="actionBar-action actionBar-action--undelete actionBar-action--menuItem"
													data-xf-click="overlay">{{ phrase('undelete') }}</a>

												<xf:set var="$hasActionBarMenu" value="{{ true }}" />
											</xf:if>
											<xf:if is="$post.canCleanSpam()">
												<a href="{{ link('spam-cleaner', $post) }}"
													class="actionBar-action actionBar-action--spam actionBar-action--menuItem"
													data-xf-click="overlay">{{ phrase('spam') }}</a>

												<xf:set var="$hasActionBarMenu" value="{{ true }}" />
											</xf:if>
											<xf:if is="$xf.visitor.canViewIps() && $post.ip_id">
												<a href="{{ link('posts/ip', $post) }}"
													class="actionBar-action actionBar-action--ip actionBar-action--menuItem"
													data-xf-click="overlay">{{ phrase('ip') }}</a>

												<xf:set var="$hasActionBarMenu" value="{{ true }}" />
											</xf:if>
											<xf:if is="$post.canWarn()">

												<a href="{{ link('posts/warn', $post) }}"
													class="actionBar-action actionBar-action--warn actionBar-action--menuItem">{{ phrase('warn') }}</a>

												<xf:set var="$hasActionBarMenu" value="{{ true }}" />
											<xf:elseif is="$post.warning_id && $xf.visitor.canViewWarnings()" />
												<a href="{{ link('warnings', {'warning_id': $post.warning_id}) }}"
													class="actionBar-action actionBar-action--warn actionBar-action--menuItem"
													data-xf-click="overlay">{{ phrase('view_warning') }}</a>
												<xf:set var="$hasActionBarMenu" value="{{ true }}" />
											</xf:if>

											<xf:if is="$hasActionBarMenu">
												<a class="actionBar-action actionBar-action--menuTrigger"
													data-xf-click="menu"
													title="{{ phrase('more_options')|for_attr }}"
													role="button"
													tabindex="0"
													aria-expanded="false"
													aria-haspopup="true">&#8226;&#8226;&#8226;</a>

												<div class="menu" data-menu="menu" aria-hidden="true" data-menu-builder="actionBar">
													<div class="menu-content">
														<h4 class="menu-header">{{ phrase('more_options') }}</h4>
														<div class="js-menuBuilderTarget"></div>
													</div>
												</div>
											</xf:if>
										</xf:contentcheck>
										</div>
									</xf:if>

								</xf:contentcheck>
							</div>
						</xf:if>

						<div class="reactionsBar js-reactionsList {{ $post.reactions ? 'is-active' : '' }}">
							<xf:reactions content="{$post}" link="posts/reactions" />
						</div>

						<div class="js-historyTarget message-historyTarget toggleTarget" data-href="trigger-href"></div>
					</footer>
				</div>
			</div>
			{$extraAfterMessage|raw}
		</div>
	</article>

	<xf:ad position="post_below_container" arg-post="{$post}" />
</xf:macro>

<xf:macro name="post_deleted" arg-post="!" arg-thread="!">
	<xf:css src="message.less" />
	<div class="message message--deleted message--post{{ $post.isIgnored() ? ' is-ignored' : '' }}{{ $post.isUnread() ? ' is-unread' : '' }} js-post js-inlineModContainer"
		data-author="{{ $post.User.username ?: $post.username }}"
		data-content="post-{$post.post_id}">

		<span class="u-anchorTarget" id="post-{$post.post_id}"></span>
		<div class="message-inner">
			<div class="message-cell message-cell--user">
				<xf:macro template="message_macros" name="user_info" arg-user="{$post.User}" arg-fallbackName="{$post.username}" />
			</div>
			<div class="message-cell message-cell--main">
				<div class="message-attribution">
					<ul class="listInline listInline--bullet message-attribution-main">
						<li><a href="{{ link('threads/post', $thread, {'post_id': $post.post_id}) }}" class="u-concealed" rel="nofollow"><xf:date time="{$post.post_date}" /></a></li>
						<li><xf:username user="{$post.User}" defaultname="{$post.username}" class="u-concealed" rich="true" /></li>
					</ul>
				</div>

				<div class="messageNotice messageNotice--deleted">
					<xf:macro template="deletion_macros" name="notice" arg-log="{$post.DeletionLog}" />

					<a href="{{ link('posts/show', $post) }}" class="u-jsOnly" data-xf-click="inserter" data-replace="[data-content=post-{$post.post_id}]">{{ phrase('show...') }}</a>

					<xf:if is="$post.canUseInlineModeration()">
						<span style="display: none">
							<!-- this can be actioned on the full post -->
							<xf:checkbox standalone="true">
								<xf:option value="{$post.post_id}" class="js-inlineModToggle"
									hiddenlabel="true" />
							</xf:checkbox>
						</span>
					</xf:if>
				</div>
			</div>
		</div>
	</div>

	<xf:ad position="post_below_container" arg-post="{$post}" />
</xf:macro>]]></template>
    <template title="prefix_input" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[<xf:js src="xf/prefix_menu.js" min="1" />
<xf:css src="prefix_menu.less" />

<xf:set var="$textbox">
	<xf:if is="$rows">
		<textarea rows="{$rows}" name="{$textboxName}"
			data-xf-init="textarea-handler {$xfInit}" data-single-line="true"
			class="input js-titleInput {$textboxClass}"
			autocomplete="off"
			{$attrsHtml|raw}>{$textboxValue}</textarea>
	<xf:else />
		<input type="text" name="{$textboxName}"
			data-xf-init="{$xfInit}"
			class="input js-titleInput {$textboxClass}"
			value="{$textboxValue}"
			autocomplete="off"
			{$attrsHtml|raw} />
	</xf:if>
</xf:set>
<xf:set var="$selectbox">
	<xf:macro template="prefix_macros" name="select"
		arg-name="{$prefixName}"
		arg-prefixes="{$prefixes}"
		arg-selected="{$prefixValue}"
		arg-type="{$prefixType}"
		arg-class="js-prefixSelect u-noJsOnly" />
</xf:set>

<xf:if is="$prefixes || $href">
	<div class="js-prefixContainer">
		<div class="inputGroup inputGroup--joined u-jsOnly">
			<div class="inputGroup-text">
				<div class="{$prefixClass}" data-xf-init="prefix-menu"{{ $href ? ' data-href="' . $href . '" data-listen-to="' . $listenTo . '"' : '' }} >
					<a class="menuTrigger menuTrigger--prefix" data-xf-click="menu" role="button" tabindex="0" aria-expanded="false" aria-haspopup="true">
						<span class="js-activePrefix">{{ phrase('(no_prefix)') }}</span>
					</a>
					<div class="menu" data-menu="menu" aria-hidden="true">
						<div class="menu-content">
							<div class="menu-scroller js-prefixMenuContent" role="listbox">
								<xf:macro name="template" />
							</div>
						</div>
					</div>
				</div>
				{$selectbox|raw}
			</div>
			{$textbox|raw}
		</div>
		<noscript>
			<div class="inputGroup">
				{$selectbox|raw}
				<span class="inputGroup-splitter"></span>
				{$textbox|raw}
			</div>
		</noscript>
	</div>
<xf:else />
	{$textbox|raw}
</xf:if>

<xf:macro name="template">
	<script type="text/template">
		<xf:mustache name="#groups">
			<xf:mustache name="#title">
				<h3 class="menu-header">{{ mustache('title') }}</h3>
			</xf:mustache>
			<xf:mustache name="#prefixes">
				<div class="menu-row">
					<a class="menuPrefix {{ mustache('css_class') }}"
						data-prefix-id="{{ mustache('prefix_id') }}"
						data-prefix-class="{{ mustache('css_class') }}"
						role="option">{{ mustache('title') }}</a>
				</div>
			</xf:mustache>
			<hr class="menu-separator" />
		</xf:mustache>
		<div class="menu-row">
			<a class="menuPrefix menuPrefix--none"
				data-prefix-id="0"
				data-prefix-class=""
				role="option">{{ phrase('(no_prefix)') }}</a>
		</div>
	</script>
</xf:macro>

<xf:macro name="menu_prefixes" arg-prefixes="!" arg-prefixType="!">
	<xf:foreach loop="array_keys($prefixes)" value="$groupId">
		<xf:if is="$groupId > 0">
			<h3 class="menu-header">{{ prefix_group($prefixType, $groupId) }}</h3>
			<div class="menu-row">
				<xf:foreach style="color:black" loop="{$prefixes.{$groupId}}" key="$prefixId" value="$prefix">
					<a class="menuPrefix {$prefix.css_class}"
						data-prefix-id="{$prefixId}"
						data-prefix-class="{$prefix.css_class}"
						role="option">{{ prefix_title($prefixType, $prefixId) }}</a>
				</xf:foreach>
			</div>
			<hr class="menu-separator" />
		<xf:else />
			<div class="menu-row">
				<xf:foreach loop="{$prefixes.{$groupId}}" key="$prefixId" value="$prefix">
					<a class="menuPrefix {$prefix.css_class}"
						data-prefix-id="{$prefixId}"
						data-prefix-class="{$prefix.css_class}"
						role="option">{{ prefix_title($prefixType, $prefixId) }}</a>
				</xf:foreach>
			</div>
			<hr class="menu-separator" />
		</xf:if>
	</xf:foreach>
	<div class="menu-row">
		<a class="menuPrefix menuPrefix--none"
			data-prefix-id="0"
			data-prefix-class=""
			role="option">{{ phrase('(no_prefix)') }}</a>
	</div>
</xf:macro>]]></template>
    <template title="profile_post_macros" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<xf:macro name="attribution" arg-profilePost="!" arg-showTargetUser="{{ false }}">
	<xf:if is="$showTargetUser AND $profilePost.user_id != $profilePost.profile_user_id">
		<xf:username user="$profilePost.User" rich="true" defaultname="{$profilePost.username}" aria-hidden="true" />
		<xf:fa icon="{{ $xf.isRtl ? 'fa-caret-left' : 'fa-caret-right' }} u-muted" />
		<xf:username user="$profilePost.ProfileUser" rich="true" defaultname="{{ phrase('unknown') }}" aria-hidden="true" />
		<span class="u-srOnly">{{ phrase('x_wrote_on_ys_profile', {
			'name': ($profilePost.User.username ?: {$profilePost.username}),
			'profile': ($profilePost.ProfileUser.username ?: phrase('unknown'))
		}) }}</span>
	<xf:else />
		<xf:username user="$profilePost.User" rich="true" defaultname="{$profilePost.username}" />
	</xf:if>
</xf:macro>

<xf:macro name="profile_post"
	arg-profilePost="!"
	arg-showTargetUser="{{ false }}"
	arg-allowInlineMod="{{ true }}">

	<xf:css src="message.less" />
	<xf:js src="xf/comment.js" min="1" />

	<article class="message message--simple{{ $profilePost.isIgnored() ? ' is-ignored' : '' }} js-inlineModContainer"
		data-author="{{ $profilePost.User.username ?: $profilePost.username }}"
		data-content="profile-post-{$profilePost.profile_post_id}"
		id="js-profilePost-{$profilePost.profile_post_id}">

		<span class="u-anchorTarget" id="profile-post-{$profilePost.profile_post_id}"></span>
		<div class="message-inner">
			<div class="message-cell message-cell--user">
				<xf:macro template="message_macros" name="user_info_simple" arg-user="{$profilePost.User}" arg-fallbackName="{$profilePost.username}" />
			</div>
			<div class="message-cell message-cell--main">
				<div class="message-main js-quickEditTarget">
					<div class="message-content js-messageContent">
						<header class="message-attribution message-attribution--plain">
							<ul class="listInline listInline--bullet">
								<li class="message-attribution-user">
									<xf:avatar user="$profilePost.User" size="xxs" />
									<h4 class="attribution"><xf:macro name="attribution"
										arg-profilePost="{$profilePost}"
										arg-showTargetUser="{$showTargetUser}" /></h4>
								</li>
								<li><a href="{{ link('profile-posts', $profilePost) }}" class="u-concealed" rel="nofollow"><xf:date time="$profilePost.post_date" /></a></li>
							</ul>
						</header>

						<xf:if is="$profilePost.message_state == 'deleted'">
							<div class="messageNotice messageNotice--deleted">
								<xf:macro template="deletion_macros" name="notice" arg-log="{$profilePost.DeletionLog}" />
							</div>
						<xf:elseif is="$profilePost.message_state == 'moderated'" />
							<div class="messageNotice messageNotice--moderated">
								{{ phrase('this_message_is_awaiting_moderator_approval_and_is_invisible_to_normal') }}
							</div>
						</xf:if>
						<xf:if is="$profilePost.warning_message">
							<div class="messageNotice messageNotice--warning">
								{$profilePost.warning_message}
							</div>
						</xf:if>
						<xf:if is="$profilePost.isIgnored()">
							<div class="messageNotice messageNotice--ignored">
								{{ phrase('you_are_ignoring_content_by_this_member') }}
							</div>
						</xf:if>

						<article class="message-body">
							{{ bb_code($profilePost.message, 'profile_post', $profilePost) }}
						</article>
					</div>


					<footer class="message-footer">
						<div class="message-actionBar actionBar">
							<xf:if contentcheck="true">
								<div class="actionBar-set actionBar-set--external">
								<xf:contentcheck>
									<xf:react content="{$profilePost}" link="profile-posts/react" list="< .message | .js-reactionsList" />

									<xf:if is="$profilePost.canComment() AND property('profilePostCommentToggle')">
										<a class="actionBar-action actionBar-action--reply"
											data-xf-click="toggle"
											data-target=".js-commentsTarget-{$profilePost.profile_post_id}"
											data-scroll-to="true"
											role="button"
											tabindex="0">{{ phrase('comment') }}</a>
									</xf:if>
								</xf:contentcheck>
								</div>
							</xf:if>

							<xf:if contentcheck="true">
								<div class="actionBar-set actionBar-set--internal">
								<xf:contentcheck>
									<xf:if is="{$allowInlineMod} AND $profilePost.canUseInlineModeration()">
										<span class="actionBar-action actionBar-action--inlineMod">
											<xf:checkbox standalone="true">
												<xf:option value="{$profilePost.profile_post_id}"
													class="js-inlineModToggle"
													data-xf-init="tooltip"
													title="{{ phrase('select_for_moderation') }}"
													label="{{ phrase('select_for_moderation') }}"
													hiddenlabel="true" />
											</xf:checkbox>
										</span>
									</xf:if>
									<xf:if is="$profilePost.canReport()">
										<a href="{{ link('profile-posts/report', $profilePost) }}" class="actionBar-action actionBar-action--report" data-xf-click="overlay">{{ phrase('report_verb') }}</a>
									</xf:if>

									<xf:set var="$hasActionBarMenu" value="{{ false }}" />
									<xf:if is="$profilePost.canEdit()">
										<xf:js src="xf/message.js" min="1" />
										<a href="{{ link('profile-posts/edit', $profilePost) }}"
											class="actionBar-action actionBar-action--edit actionBar-action--menuItem"
											data-xf-click="quick-edit"
											data-editor-target="#js-profilePost-{$profilePost.profile_post_id} .js-quickEditTarget"
											data-no-inline-mod="{{ !$allowInlineMod ? 1 : 0 }}"
											data-menu-closer="true">{{ phrase('edit') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									</xf:if>
									<xf:if is="$profilePost.canDelete('soft')">
										<a href="{{ link('profile-posts/delete', $profilePost) }}"
											class="actionBar-action actionBar-action--delete actionBar-action--menuItem"
											data-xf-click="overlay">{{ phrase('delete') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									</xf:if>
									<xf:if is="$profilePost.message_state == 'deleted' AND $profilePost.canUndelete()">
										<a href="{{ link('profile-posts/undelete', $profilePost) }}" data-xf-click="overlay"
											class="actionBar-action actionBar-action--undelete actionBar-action--menuItem">{{ phrase('undelete') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									</xf:if>
									<xf:if is="$profilePost.canCleanSpam()">
										<a href="{{ link('spam-cleaner', $profilePost) }}"
											class="actionBar-action actionBar-action--spam actionBar-action--menuItem"
											data-xf-click="overlay">{{ phrase('spam') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									</xf:if>
									<xf:if is="$xf.visitor.canViewIps() && $profilePost.ip_id">
										<a href="{{ link('profile-posts/ip', $profilePost) }}"
											class="actionBar-action actionBar-action--ip actionBar-action--menuItem"
											data-xf-click="overlay">{{ phrase('ip') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									</xf:if>
									<xf:if is="$profilePost.canWarn()">
										<a href="{{ link('profile-posts/warn', $profilePost) }}"
											class="actionBar-action actionBar-action--warn actionBar-action--menuItem">{{ phrase('warn') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									<xf:elseif is="$profilePost.warning_id && $xf.visitor.canViewWarnings()" />
										<a href="{{ link('warnings', {'warning_id': $profilePost.warning_id}) }}"
											class="actionBar-action actionBar-action--warn actionBar-action--menuItem"
											data-xf-click="overlay">{{ phrase('view_warning') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									</xf:if>

									<xf:if is="$hasActionBarMenu">
										<a class="actionBar-action actionBar-action--menuTrigger"
											data-xf-click="menu"
											title="{{ phrase('more_options')|for_attr }}"
											role="button"
											tabindex="0"
											aria-expanded="false"
											aria-haspopup="true">&#8226;&#8226;&#8226;</a>
										<div class="menu" data-menu="menu" aria-hidden="true" data-menu-builder="actionBar">
											<div class="menu-content">
												<h4 class="menu-header">{{ phrase('more_options') }}</h4>
												<div class="js-menuBuilderTarget"></div>
											</div>
										</div>
									</xf:if>
								</xf:contentcheck>
								</div>
							</xf:if>

						</div>

						<section class="message-responses js-messageResponses">
							<div class="message-responseRow message-responseRow--reactions js-reactionsList {{ $profilePost.reactions ? 'is-active' : '' }}"><xf:if is="$profilePost.reactions">
								<xf:reactions content="{$profilePost}" link="profile-posts/reactions" />
							</xf:if></div>

							<xf:if is="$profilePost.LatestComments is not empty">
								<xf:if is="$profilePost.hasMoreComments()">
									<div class="message-responseRow u-jsOnly js-commentLoader">
										<a href="{{ link('profile-posts/load-previous', $profilePost, {'before': $profilePost.LatestComments.first().comment_date}) }}"
											data-xf-click="comment-loader"
											data-container=".js-commentLoader"
											rel="nofollow">{{ phrase('view_previous_comments...') }}</a>
									</div>
								</xf:if>
								<div class="js-replyNewMessageContainer">
									<xf:foreach loop="$profilePost.LatestComments" value="$comment">
										<xf:macro
											name="{{ $comment.message_state == 'deleted' ? 'comment_deleted' : 'comment' }}"
											arg-comment="{$comment}"
											arg-profilePost="{$profilePost}" />
									</xf:foreach>
								</div>
								<xf:else />
								<div class="js-replyNewMessageContainer"></div>
							</xf:if>

							<xf:if is="$profilePost.canComment()">
								<xf:js src="xf/message.js" min="1" />
								<div class="message-responseRow js-commentsTarget-{$profilePost.profile_post_id} {{ property('profilePostCommentToggle') ? 'toggleTarget' : '' }}">
									<xf:form action="{{ link('profile-posts/add-comment', $profilePost) }}" ajax="true" class="comment"
										data-xf-init="quick-reply"
										data-message-container="< .js-messageResponses | .js-replyNewMessageContainer">
										<div class="comment-inner">
											<span class="comment-avatar">
												<xf:avatar user="{$xf.visitor}" size="xxs" />
											</span>
											<div class="comment-main">
												<div class="editorPlaceholder" data-xf-click="editor-placeholder">
													<div class="editorPlaceholder-editor is-hidden">
														<xf:macro template="quick_reply_macros" name="editor"
															arg-minHeight="40"
															arg-placeholder="{{ phrase('write_comment...') }}"
															arg-submitText="{{ phrase('post_comment') }}"
															arg-deferred="{{ true }}"
															arg-simpleSubmit="{{ true }}"
														/>
													</div>
													<div class="editorPlaceholder-placeholder">
														<div class="input"><span class="u-muted"> {{ phrase('write_comment...') }}</span></div>
													</div>
												</div>
											</div>
										</div>
										<xf:set var="$lastProfilePostComment" value="{$profilePost.LatestComments|last}" />
										<xf:hiddenval name="last_date">{$lastProfilePostComment.comment_date}</xf:hiddenval>
									</xf:form>
								</div>
							</xf:if>
						</section>
					</footer>
				</div>
			</div>
		</div>
	</article>
</xf:macro>

<xf:macro name="profile_post_deleted"
	arg-profilePost="!"
	arg-showTargetUser="{{ false }}">

	<xf:css src="message.less" />
	<div class="message message--simple{{ $profilePost.isIgnored() ? ' is-ignored' : '' }} js-inlineModContainer"
		data-author="{{ $profilePost.User.username ?: $profilePost.username }}"
		data-content="profile-post-{$profilePost.profile_post_id}">

		<span class="u-anchorTarget" id="profile-post-{$profilePost.profile_post_id}"></span>
		<div class="message-inner">
			<div class="message-cell message-cell--user">
				<xf:macro template="message_macros" name="user_info_simple" arg-user="{$profilePost.User}" arg-fallbackName="{$profilePost.username}" />
			</div>
			<div class="message-cell message-cell--main">
				<div class="message-attribution message-attribution--plain">
					<ul class="listInline listInline--bullet">
						<li class="message-attribution-user">
							<xf:avatar user="$profilePost.User" size="xxs" />
							<h4 class="attribution"><xf:macro name="attribution"
								arg-profilePost="{$profilePost}"
								arg-showTargetUser="{$showTargetUser}" /></h4>
						</li>
						<li><xf:date time="$profilePost.post_date" /></li>
					</ul>
				</div>

				<div class="messageNotice messageNotice--deleted">
					<xf:macro template="deletion_macros" name="notice" arg-log="{$profilePost.DeletionLog}" />

					<a href="{{ link('profile-posts/show', $profilePost) }}" class="u-jsOnly" data-xf-click="inserter" data-replace="[data-content=profile-post-{$profilePost.profile_post_id}]">{{ phrase('show...') }}</a>

					<xf:if is="$profilePost.canUseInlineModeration()">
						<span style="display: none">
							<!-- this can be actioned on the full post -->
							<xf:checkbox standalone="true">
								<xf:option value="{$profilePost.profile_post_id}" class="js-inlineModToggle"
									hiddenlabel="true" />
							</xf:checkbox>
						</span>
					</xf:if>
				</div>
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="profile_post_simple"
	arg-profilePost="!"
	arg-limitHeight="{{ false }}">

	<div class="contentRow">
		<div class="contentRow-figure">
			<xf:avatar user="$profilePost.User" size="xxs" defaultname="{$profilePost.username}" />
		</div>
		<div class="contentRow-main contentRow-main--close">
			<div class="contentRow-lesser">
				<xf:macro name="attribution"
					arg-profilePost="{$profilePost}"
					arg-showTargetUser="{{ true }}" />
			</div>

			<xf:if is="$limitHeight">
				<div class="contentRow-faderContainer">
					<div class="contentRow-faderContent">
						{{ bb_code($profilePost.message, 'profile_post', $profilePost, {'simpleUnfurl': true}) }}
					</div>
					<div class="contentRow-fader"></div>
				</div>
			<xf:else />
				{{ bb_code($profilePost.message, 'profile_post', $profilePost, {'simpleUnfurl': true}) }}
			</xf:if>

			<div class="contentRow-minor">
				<a href="{{ link('profile-posts', $profilePost) }}" rel="nofollow" class="u-concealed"><xf:date time="{$profilePost.post_date}" /></a>
				<a href="{{ link('profile-posts', $profilePost) }}" rel="nofollow" class="contentRow-extra" data-xf-click="overlay" data-xf-init="tooltip" title="{{ phrase('interact')|for_attr }}">&#8226;&#8226;&#8226;</a>
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="comment"
	arg-comment="!"
	arg-profilePost="!">

	<div class="message-responseRow {{ $comment.isIgnored() ? 'is-ignored' : '' }}">
		<div class="comment"
			data-author="{$comment.User.username}"
			data-content="profile-post-comment-{$comment.profile_post_comment_id}"
			id="js-profilePostComment-{$comment.profile_post_comment_id}">

			<div class="comment-inner">
				<span class="comment-avatar">
					<xf:avatar user="$comment.User" size="xxs" defaultname="{$comment.username}" />
				</span>
				<div class="comment-main">
					<span class="u-anchorTarget" id="profile-post-comment-{$comment.profile_post_comment_id}"></span>
					<div class="js-quickEditTargetComment">
						<div class="comment-content">
							<xf:if is="$comment.message_state == 'deleted'">
								<div class="messageNotice messageNotice--deleted">
									<xf:macro template="deletion_macros" name="notice" arg-log="{$comment.DeletionLog}" />
								</div>
							<xf:elseif is="$comment.message_state == 'moderated'" />
								<div class="messageNotice messageNotice--moderated">
									{{ phrase('this_message_is_awaiting_moderator_approval_and_is_invisible_to_normal') }}
								</div>
							</xf:if>
							<xf:if is="$comment.warning_message">
								<div class="messageNotice messageNotice--warning">
									{$comment.warning_message}
								</div>
							</xf:if>
							<xf:if is="$comment.isIgnored()">
								<div class="messageNotice messageNotice--ignored">
									{{ phrase('you_are_ignoring_content_by_this_member') }}
								</div>
							</xf:if>

							<div class="comment-contentWrapper">
								<xf:username user="$comment.User" rich="true" defaultname="{$comment.username}" class="comment-user" />
								<article class="comment-body">{{ bb_code($comment.message, 'profile_post_comment', $comment) }}</article>
							</div>
						</div>

						<footer class="comment-footer">
							<div class="comment-actionBar actionBar">
								<div class="actionBar-set actionBar-set--internal">
									<span class="actionBar-action"><xf:date time="{$comment.comment_date}" /></span>
									<xf:if is="$comment.canReport()">
										<a href="{{ link('profile-posts/comments/report', $comment) }}"
											class="actionBar-action actionBar-action--report"
											data-xf-click="overlay">{{ phrase('report_verb') }}</a>
									</xf:if>

									<xf:set var="$hasActionBarMenu" value="{{ false }}" />
									<xf:if is="$comment.canEdit()">
										<xf:js src="xf/message.js" min="1" />
										<a href="{{ link('profile-posts/comments/edit', $comment) }}"
											class="actionBar-action actionBar-action--edit actionBar-action--menuItem"
											data-xf-click="quick-edit"
											data-editor-target="#js-profilePostComment-{$comment.profile_post_comment_id} .js-quickEditTargetComment"
											data-menu-closer="true">{{ phrase('edit') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									</xf:if>
									<xf:if is="$comment.canDelete('soft')">
										<a href="{{ link('profile-posts/comments/delete', $comment) }}"
											class="actionBar-action actionBar-action--delete actionBar-action--menuItem"
											data-xf-click="overlay">{{ phrase('delete') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									</xf:if>
									<xf:if is="$comment.message_state == 'deleted' AND $comment.canUndelete()">
										<a href="{{ link('profile-posts/comments/undelete', $comment) }}" data-xf-click="overlay"
											class="actionBar-action actionBar-action--undelete actionBar-action--menuItem">{{ phrase('undelete') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									</xf:if>
									<xf:if is="$comment.canCleanSpam()">
										<a href="{{ link('spam-cleaner', $comment) }}"
											class="actionBar-action actionBar-action--spam actionBar-action--menuItem"
											data-xf-click="overlay">{{ phrase('spam') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									</xf:if>
									<xf:if is="$xf.visitor.canViewIps() && $comment.ip_id">
										<a href="{{ link('profile-posts/comments/ip', $comment) }}"
											class="actionBar-action actionBar-action--ip actionBar-action--menuItem"
											data-xf-click="overlay">{{ phrase('ip') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									</xf:if>
									<xf:if is="$comment.canWarn()">
										<a href="{{ link('profile-posts/comments/warn', $comment) }}"
											class="actionBar-action actionBar-action--warn actionBar-action--menuItem">{{ phrase('warn') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									<xf:elseif is="$comment.warning_id && $xf.visitor.canViewWarnings()" />
										<a href="{{ link('warnings', {'warning_id': $comment.warning_id}) }}"
											class="actionBar-action actionBar-action--warn actionBar-action--menuItem"
											data-xf-click="overlay">{{ phrase('view_warning') }}</a>
										<xf:set var="$hasActionBarMenu" value="{{ true }}" />
									</xf:if>
									<xf:if is="$comment.canApproveUnapprove()">
										<xf:if is="$comment.message_state == 'moderated'">
											<a href="{{ link('profile-posts/comments/approve', $comment, {'t': csrf_token()}) }}"
												class="actionBar-action actionBar-action--approve actionBar-action--menuItem">{{ phrase('approve') }}</a>
											<xf:set var="$hasActionBarMenu" value="{{ true }}" />
										<xf:elseif is="$comment.message_state == 'visible'" />
											<a href="{{ link('profile-posts/comments/unapprove', $comment, {'t': csrf_token()}) }}"
												class="actionBar-action actionBar-action--unapprove actionBar-action--menuItem">{{ phrase('unapprove') }}</a>
											<xf:set var="$hasActionBarMenu" value="{{ true }}" />
										</xf:if>
									</xf:if>

									<xf:if is="$hasActionBarMenu">
										<a class="actionBar-action actionBar-action--menuTrigger"
											data-xf-click="menu"
											title="{{ phrase('more_options')|for_attr }}"
											role="button"
											tabindex="0"
											aria-expanded="false"
											aria-haspopup="true">&#8226;&#8226;&#8226;</a>
										<div class="menu" data-menu="menu" aria-hidden="true" data-menu-builder="actionBar">
											<div class="menu-content">
												<h4 class="menu-header">{{ phrase('more_options') }}</h4>
												<div class="js-menuBuilderTarget"></div>
											</div>
										</div>
									</xf:if>
								</div>
								<xf:if contentcheck="true">
									<div class="actionBar-set actionBar-set--external">
									<xf:contentcheck>
										<xf:react content="{$comment}" link="profile-posts/comments/react" list="< .comment | .js-commentReactionsList" />
									</xf:contentcheck>
									</div>
								</xf:if>
							</div>

							<div class="comment-reactions js-commentReactionsList {{ $comment.reactions ? 'is-active' : '' }}"><xf:if is="$comment.reactions">
								<xf:reactions content="{$comment}" link="profile-posts/comments/reactions" />
							</xf:if></div>
						</footer>

					</div>
				</div>
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="comment_deleted"
	arg-comment="!"
	arg-profilePost="!">

	<div class="message-responseRow">
		<div class="comment{{ $comment.isIgnored() ? ' is-ignored' : '' }}"
			data-author="{$comment.User.username}"
			data-content="profile-post-comment-{$comment.profile_post_comment_id}">

			<div class="comment-inner">
				<span class="comment-avatar">
					<xf:avatar user="$comment.User" size="xxs" defaultname="{$comment.username}" />
				</span>
				<div class="comment-main">
					<span class="u-anchorTarget" id="profile-post-comment-{$comment.profile_post_comment_id}"></span>
					<div class="comment-content">
						<div class="messageNotice messageNotice--deleted">
							<xf:macro template="deletion_macros" name="notice" arg-log="{$comment.DeletionLog}" />

							<a href="{{ link('profile-posts/comments/show', $comment) }}" class="u-jsOnly"
								data-xf-click="inserter"
								data-replace="[data-content=profile-post-comment-{$comment.profile_post_comment_id}]">{{ phrase('show...') }}</a>
						</div>
					</div>

					<div class="comment-actionBar actionBar">
						<div class="actionBar-set actionBar-set--internal">
							<span class="actionBar-action">
								<xf:date time="{$comment.comment_date}" />
								<span role="presentation" aria-hidden="true">&middot;</span>
								<xf:username user="{$comment.User}" defaultname="{$comment.username}" class="u-concealed" rich="true"/>
							</span>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="quick_post" arg-user="!" arg-containerSelector="!" arg-lastDate="!">
	<xf:js src="xf/message.js" min="1" />

	<xf:form action="{{ link('members/post', $user) }}"
		ajax="true"
		class="message-spacer js-quickReply"
		data-xf-init="quick-reply"
		data-message-container="{$containerSelector}"
		data-ascending="0">

		<xf:macro template="quick_reply_macros" name="body"
			arg-simple="{{ true }}"
			arg-placeholder="{{ $xf.visitor.user_id == $user.user_id ? (phrase('update_your_status...')) : phrase('write_something...') }}"
			arg-submitText="{{ phrase('post_verb') }}"
			arg-showPreviewButton="{{ false }}"
			arg-lastDate="{$lastDate}"
			arg-lastKnownDate="{$lastDate}"
			arg-minHeight="40"
			arg-deferred="{{ true }}"
			arg-simpleSubmit="{{ true }} " />
	</xf:form>
</xf:macro>

<xf:macro name="submit" arg-user="!" arg-lastDate="!" arg-containerSelector="!" arg-style="full" arg-context="user">
	<xf:js src="xf/message.js" min="1" />
	<xf:if is="$style == 'full'">
		<xf:css src="message.less" />
	</xf:if>

	<xf:set var="$placeholder" value="{{ $xf.visitor.user_id == $user.user_id ? (phrase('update_your_status...')) : phrase('write_something...') }}" />

	<xf:form action="{{ link('members/post', $user) }}" ajax="true"
		class="{{ $style == 'full' ? 'message message--simple' : 'block-row' }}"
		data-xf-init="quick-reply"
		data-message-container="{$containerSelector}"
		data-ascending="0">

		<xf:if is="$style == 'full'">
			<div class="message-inner">
				<div class="message-cell message-cell--user">
					<xf:macro template="message_macros" name="user_info_simple" arg-user="{$xf.visitor}" />
				</div>
				<div class="message-cell message-cell--main">
					<div class="message-editorWrapper">
						<div class="editorPlaceholder" data-xf-click="editor-placeholder">
							<div class="editorPlaceholder-editor is-hidden">
								<xf:editor name="message"
									data-min-height="40"
									placeholder="{$placeholder}"
									previewable="0"
									data-deferred="on" />

								<div class="u-inputSpacer">
									<xf:button type="submit" class="button--primary" icon="reply">{{ phrase('post_verb') }}</xf:button>
								</div>
							</div>
							<div class="editorPlaceholder-placeholder">
								<div class="input"><span class="u-muted"> {$placeholder}</span></div>
							</div>
						</div>
					</div>
				</div>
			</div>
		<xf:else />
			<div>
				<xf:textarea name="message" autosize="true" rows="1" maxlength="{$xf.options.profilePostMaxLength}"
					class="{{ $style == 'full' ? 'input--avatarSizeS' : '' }} js-editor"
					data-xf-init="focus-trigger user-mentioner emoji-completer"
					data-display="< :next" aria-labelledby="ctrl_message"
					placeholder="{$placeholder}" />

				<div class="u-hidden u-hidden--transition u-inputSpacer">
					<xf:button type="submit" class="button--primary" icon="reply">{{ phrase('post_verb') }}</xf:button>
				</div>
			</div>
		</xf:if>

		<xf:comment><!-- Posts are in descending order so last post is first! --></xf:comment>
		<xf:hiddenval name="last_date">{$lastDate}</xf:hiddenval>
		<xf:hiddenval name="style">{$style}</xf:hiddenval>
		<xf:hiddenval name="context">{$context}</xf:hiddenval>
	</xf:form>
</xf:macro>]]></template>
    <template title="push_thread_reply_ban" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[<xf:if is="$extra.expiry">
	{{ phrase('you_unable_reply_to_thread_x_until_expiry_y', {'title': prefix('thread', $thread, 'plain') . $content.title, 'expiry': date($extra.expiry)}) }}
<xf:else />
	{{ phrase('you_are_no_longer_able_to_reply_thread_x', {'title': prefix('thread', $thread, 'plain') . $content.title}) }}
</xf:if>
<xf:if is="$extra.reason">{{ phrase('reason:') }} {$extra.reason}</xf:if>
<push:url>{{ link('canonical:threads', $content) }}</push:url>]]></template>
    <template title="report_list_macros" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<xf:macro name="item"
	arg-report="!">

	<xf:css src="structured_list.less" />

	<div class="structItem structItem--report {{ ($report.canView($report) && $report.isAssignedTo()) ? 'is-highlighted' : '' }}">
		<div class="structItem-cell structItem-cell--icon">
			<div class="structItem-iconContainer">
				<xf:avatar user="$report.User" size="s" />
			</div>
		</div>
		<div class="structItem-cell structItem-cell--main" data-xf-init="touch-proxy">
			<a href="{{ link('reports', $report) }}" class="structItem-title" data-tp-primary="on">
				<xf:if is="$report.canView($report)">
					{$report.title}
				<xf:else />
					{{ phrase('unknown_content') }}
				</xf:if>
			</a>

			<div class="structItem-minor">
				<ul class="structItem-extraInfo">
					<li>
						{{ $report.getReportState() }}
						<xf:if is="$report.assigned_user_id && $report.canView($report)">
							{$report.AssignedUser.username|parens}
						</xf:if>
					</li>
				</ul>

				<ul class="structItem-parts">
					<li><xf:username user="$report.User" defaultname="{{ phrase('unknown_member') }}" rich="true" /></li>
					<li class="structItem-startDate"><a href="{{ link('reports', $report) }}" rel="nofollow"><xf:date time="{$report.first_report_date}" /></a></li>
				</ul>
			</div>
		</div>
		<div class="structItem-cell structItem-cell--meta">
			<dl class="pairs pairs--justified">
				<dt>{{ phrase('reports') }}</dt>
				<dd>{$report.report_count|number}</dd>
			</dl>
			<dl class="pairs pairs--justified structItem-minor">
				<dt>{{ phrase('comments') }}</dt>
				<dd>{$report.comment_count|number}</dd>
			</dl>
		</div>
		<div class="structItem-cell structItem-cell--latest">
			<a href="{{ link('reports', $report) }}" rel="nofollow"><xf:date time="{$report.last_modified_date}" class="structItem-latestDate" /></a>
			<div class="structItem-minor">
				<xf:if is="$report.canView($report)">
					<xf:username user="{$report.last_modified_cache}" rich="true"/>
				<xf:else />
					{{ phrase('n_a') }}
				</xf:if>
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="search_menu">
	<div class="menu" data-menu="menu" aria-hidden="true">
		<xf:form action="{{ link('reports/search') }}" class="menu-content">
			<div class="menu-row">
				{{ phrase('find_reports_for_member:') }}
				<xf:textbox name="username" ac="single" maxlength="{{ max_length($xf.visitor, 'username') }}" />
			</div>
			<div class="menu-footer">
				<span class="menu-footer-controls"><xf:button type="submit" class="button--primary" icon="search" /></span>
			</div>
		</xf:form>
	</div>
</xf:macro>]]></template>
    <template title="report_view" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<xf:title>{{ phrase('reported_content:') }} {$report.title}</xf:title>
<xf:h1>{$report.title}</xf:h1>

<xf:breadcrumb href="{{ link('reports') }}">{{ phrase('reports') }}</xf:breadcrumb>
<xf:css src="message.less" />
<xf:css src="report.less" />

<div class="block">
	<div class="block-container">
		<div class="block-body">
			<div class="block-row block-row--separated block-row--alt">
				<xf:macro template="member_list_macros" name="item" arg-user="{$report.User}" />
			</div>
			{$handler.render($report)|raw}
		</div>
		<xf:if is="$report.link">
			<div class="block-footer">
				<span class="block-footer-controls"><xf:button href="{$report.link}">{{ phrase('go_to_content') }}</xf:button></span>
			</div>
		</xf:if>
	</div>
</div>

<div class="blockMessage">
	<div class="pairJustifier">
		<dl class="pairs pairs--rows">
			<dt>{{ phrase('created') }}</dt>
			<dd><xf:date time="$report.first_report_date" /></dd>
		</dl>
		<dl class="pairs pairs--rows">
			<dt>{{ phrase('reports') }}</dt>
			<dd>{$report.report_count|number}</dd>
		</dl>
		<dl class="pairs pairs--rows">
			<dt>{{ phrase('comments') }}</dt>
			<dd>{$report.comment_count|number}</dd>
		</dl>
		<dl class="pairs pairs--rows">
			<dt>{{ phrase('status') }}</dt>
			<dd>
				{$report.getReportState()}
				<xf:if is="$report.report_state == 'assigned'">
					{$xf.language.parenthesis_open}<xf:username user="$report.AssignedUser" rich="true"/>{$xf.language.parenthesis_close}
				</xf:if>
			</dd>
		</dl>
		<dl class="pairs pairs--rows">
			<dt>{{ phrase('updated') }}</dt>
			<dd><xf:date time="$report.last_modified_date" /></dd>
		</dl>
	</div>
</div>

<div class="block">
	<div class="block-container">
		<h3 class="block-header">{{ phrase('comments') }}</h3>

		<div class="block-body">
			<xf:foreach loop="$comments" value="$comment">
				<article class="message message--simple">
					<div class="message-inner">
						<div class="message-cell message-cell--user">
							<xf:macro template="message_macros" name="user_info_simple" arg-user="{$comment.User}"  arg-fallbackName="{$comment.username}" />
						</div>
						<div class="message-cell message-cell--main">
							<span class="u-anchorTarget" id="report-comment-{$comment.report_comment_id}"></span>
							<div class="message-content">
								<header class="message-attribution message-attribution--plain">
									<ul class="listInline listInline--bullet">
										<li class="message-attribution-user">
											<xf:avatar user="$comment.User" size="xxs" />
											<h4 class="attribution"><xf:username user="$comment.User" rich="true" /></h4>
										</li>
										<li><a href="#report-comment-{$comment.report_comment_id}" class="u-concealed"><xf:date time="$comment.comment_date" /></a></li>
										<xf:if is="$comment.is_report">
											<li><span class="label label--accent">{{ phrase('report_noun') }}</span></li>
										</xf:if>
									</ul>
								</header>

								<xf:if is="$comment.state_change">
									<div class="message-minorHighlight">{{ phrase('status_changed:') }} {$report.getReportState($comment.state_change)}</div>
								</xf:if>

								<xf:if is="$comment.message">
									<article class="message-body">
										{{ bb_code($comment.message, 'report_comment', $comment) }}
									</article>
								</xf:if>
							</div>
						</div>
					</div>
				</article>
			</xf:foreach>
		</div>
	</div>
</div>

<div class="block">
	<div class="block-container">

		<h2 class="block-tabHeader tabs" data-xf-init="tabs" role="tablist">
			<a class="tabs-tab is-active" role="tab" tabindex="0" aria-controls="{{ unique_id('reportUpdate') }}">{{ phrase('update') }}</a>
			<a class="tabs-tab" role="tab" tabindex="0" aria-controls="{{ unique_id('reportReassign') }}">{{ phrase('reassign') }}</a>
		</h2>

		<ul class="tabPanes">
			
			<li class="is-active" role="tabpanel" id="{{ unique_id('reportUpdate') }}">
				<xf:form action="{{ link('reports/update', $report) }}" ajax="true" draft="{{ link('reports/draft', $report) }}">
					<div class="block-body">
						<xf:set var="$assignedToOther" value="{{ $report.report_state == 'assigned' && $report.AssignedUser && $report.AssignedUser.user_id != $xf.visitor.user_id }}" />

						<xf:if is="$assignedToOther">
							<xf:formrow rowclass="js-handleToggleTrigger">
								{{ phrase('this_report_is_currently_assigned_to_x', {'assigned_username': $report.AssignedUser.username}) }}
								<div>
									<xf:button data-xf-click="toggle" data-target=".js-handleToggle" data-hide=".js-handleToggleTrigger">
										{{ phrase('handle_report') }}
									</xf:button>
								</div>
							</xf:formrow>
						</xf:if>

						<div class="js-handleToggle{{ !$assignedToOther ? ' is-active' : '' }}">

							<xf:editorrow name="message" value="{$report.draft_comment.message}" data-min-height="100"
								rowtype="fullWidth noLabel"
								label="{{ phrase('message') }}">

								<xf:explain>
									{{ phrase('your_comment_will_only_be_visible_to_moderators') }}
									<xf:if is="$report.isClosed()">{{ phrase('your_comment_will_re_open_this_report') }}</xf:if>
								</xf:explain>
							</xf:editorrow>

							<xf:if is="!$report.isClosed()">
								<xf:radiorow name="report_state"
									label="{{ phrase('status') }}">

									<xf:option value="" label="{{ phrase('do_not_change') }}" selected="true" />
									<xf:option value="assigned" label="{{ $report.report_state == 'assigned' ? phrase('unassign') : phrase('report_state.assigned') }}" />
									<xf:option value="resolved" label="{{ phrase('report_state.resolved') }}" />
									<xf:option value="rejected" label="{{ phrase('report_state.rejected') }}" />
								</xf:radiorow>

								<xf:checkboxrow
									explain="{{ phrase('any_resolution_rejection_alert_text_will_be_appended_to_comment') }}">

									<xf:option name="send_alert" label="{{ phrase('send_resolution_rejection_alert:') }}">
										<xf:dependent>
											<xf:textbox name="alert_comment" maxlength="300" />
										</xf:dependent>
									</xf:option>
								</xf:checkboxrow>
							</xf:if>
						</div>
					</div>
					<div class="js-handleToggle{{ !$assignedToOther ? ' is-active' : '' }}">
						<xf:submitrow icon="save" />
					</div>
				</xf:form>
			</li>

			<li role="tabpanel" id="{{ unique_id('reportReassign') }}">
				<xf:form action="{{ link('reports/reassign', $report) }}" ajax="true">
					<div class="block-body">
						<xf:selectrow name="user_id" value="{$report.assigned_user_id}"
							label="{{ phrase('member') }}">

							<xf:option style="color:black" value="0" label="{{ phrase('(none)') }}" />
							<xf:foreach loop="$moderators" value="$moderator">
								<xf:option value="{$moderator.User.user_id}" label="{$moderator.User.username}" style="color:black"/>
							</xf:foreach>
						</xf:selectrow>
					</div>
					<xf:submitrow submit="{{ phrase('reassign') }}" />
				</xf:form>
			</li>

		</ul>
	</div>
</div>]]></template>
    <template title="search_result_post" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<li class="block-row block-row--separated {{ $post.isIgnored() ? 'is-ignored' : '' }} js-inlineModContainer" data-author="{{ $post.User.username ?: $post.username }}">
	<div class="contentRow {{ !$post.isVisible() ? 'is-deleted' : '' }}">
		<span class="contentRow-figure">
			<xf:avatar user="{$post.User}" size="s" defaultname="{$post.username}" />
		</span>
		<div class="contentRow-main">
			<h3 class="contentRow-title">
				<a href="{{ link('threads/post', $post.Thread, {'post_id': $post.post_id}) }}">{{ prefix('thread', $post.Thread) . highlight($post.Thread.title, $options.term) }}</a>
			</h3>

			<div class="contentRow-snippet">{{ snippet($post.message, 300, {'term': $options.term, 'stripQuote': true}) }}</div>

			<div class="contentRow-minor contentRow-minor--hideLinks">
				<ul class="listInline listInline--bullet">
					<xf:if is="$options.mod == 'post' && $post.canUseInlineModeration()">
						<li><xf:checkbox standalone="true">
							<xf:option value="{$post.post_id}" class="js-inlineModToggle"
								data-xf-init="tooltip"
								title="{{ phrase('select_for_moderation') }}" />
						</xf:checkbox></li>
					</xf:if>
					<li><xf:username user="{$post.User}" defaultname="{$post.username}" rich="true" /></li>
					<li>{{ phrase('post_x', {'position': number($post.position + 1)}) }}</li>
					<li><xf:date time="{$post.post_date}" /></li>
					<li>{{ phrase('forum:') }} <a href="{{ link('forums', $post.Thread.Forum) }}">{$post.Thread.Forum.title}</a></li>
				</ul>
			</div>
		</div>
	</div>
</li>]]></template>
    <template title="search_result_profile_post" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<li class="block-row block-row--separated {{ $profilePost.isIgnored() ? 'is-ignored' : '' }} js-inlineModContainer" data-author="{{ $profilePost.User.username ?: $profilePost.username }}">
	<div class="contentRow {{ !$profilePost.isVisible() ? 'is-deleted' : '' }}">
		<span class="contentRow-figure">
			<xf:avatar user="{$profilePost.User}" size="s" defaultname="{$profilePost.username}" />
		</span>
		<div class="contentRow-main">
			<h3 class="contentRow-title">
				<a href="{{ link('profile-posts', $profilePost) }}">{{ snippet($profilePost.message, 100, {'term': $options.term, 'stripQuote': true, 'fromStart': true, 'hideUnviewable': false}) }}</a>
			</h3>

			<div class="contentRow-snippet">{{ snippet($profilePost.message, 300, {'term': $options.term, 'stripQuote': true}) }}</div>

			<div class="contentRow-minor contentRow-minor--hideLinks">
				<ul class="listInline listInline--bullet">
					<xf:if is="$options.mod == 'profile_post' && $profilePost.canUseInlineModeration()">
						<li><xf:checkbox standalone="true">
							<xf:option value="{$profilePost.profile_post_id}" class="js-inlineModToggle"
								data-xf-init="tooltip"
								title="{{ phrase('select_for_moderation') }}"/>
						</xf:checkbox></li>
					</xf:if>
					<li><xf:username user="{$profilePost.User}" defaultname="{$profilePost.username}" rich="true" /></li>
					<li>{{ phrase('profile_post') }}</li>
					<li><xf:date time="{$profilePost.post_date}" /></li>
				</ul>
			</div>
		</div>
	</div>
</li>]]></template>
    <template title="search_result_profile_post_comment" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<li class="block-row block-row--separated {{ $comment.isIgnored() ? 'is-ignored' : '' }}" data-author="{{ $comment.User.username ?: $comment.username }}">
	<div class="contentRow {{ !$comment.isVisible() ? 'is-deleted' : '' }}">
		<span class="contentRow-figure">
			<xf:avatar user="{$comment.User}" size="s" defaultname="{$comment.username}" />
		</span>
		<div class="contentRow-main">
			<h3 class="contentRow-title">
				<a href="{{ link('profile-posts/comments', $comment) }}">{{ snippet($comment.message, 100, {'term': $options.term, 'stripQuote': true, 'fromStart': true, 'hideUnviewable': false}) }}</a>
			</h3>

			<div class="contentRow-snippet">{{ snippet($comment.message, 300, {'term': $options.term, 'stripQuote': true}) }}</div>

			<div class="contentRow-minor contentRow-minor--hideLinks">
				<ul class="listInline listInline--bullet">
					<li><xf:username user="{$comment.User}" defaultname="{$comment.username}" rich="true" /></li>
					<li>{{ phrase('profile_post_comment') }}</li>
					<li><xf:date time="{$comment.comment_date}" /></li>
				</ul>
			</div>
		</div>
	</div>
</li>]]></template>
    <template title="search_result_thread" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<li class="block-row block-row--separated {{ $thread.isIgnored() ? 'is-ignored' : '' }} js-inlineModContainer" data-author="{{ $thread.User.username ?: $thread.username }}">
	<div class="contentRow {{ !$thread.isVisible() ? 'is-deleted' : '' }}">
		<span class="contentRow-figure">
			<xf:avatar user="{$thread.User}" size="s" defaultname="{$thread.username}" />
		</span>
		<div class="contentRow-main">
			<h3 class="contentRow-title">
				<a href="{{ link('threads', $thread) }}">{{ prefix('thread', $thread) . highlight($thread.title, $options.term) }}</a>
			</h3>

			<div class="contentRow-snippet">{{ snippet($thread.FirstPost.message, 300, {'term': $options.term, 'stripQuote': true}) }}</div>

			<div class="contentRow-minor contentRow-minor--hideLinks">
				<ul class="listInline listInline--bullet">
					<xf:if is="$options.mod == 'thread' && $thread.canUseInlineModeration()">
						<li><xf:checkbox standalone="true">
							<xf:option value="{$thread.thread_id}" class="js-inlineModToggle"
								data-xf-init="tooltip"
								title="{{ phrase('select_for_moderation') }}" />
						</xf:checkbox></li>
					</xf:if>
					<li><xf:username user="{$thread.User}" defaultname="{$thread.username}" rich="true"/></li>
					<li>{{ phrase('thread') }}</li>
					<li><xf:date time="{$thread.post_date}" /></li>
					<li>{{ phrase('replies:') }} {$thread.reply_count|number}</li>
					<li>{{ phrase('forum:') }} <a href="{{ link('forums', $thread.Forum) }}">{$thread.Forum.title}</a></li>
				</ul>
			</div>
		</div>
	</div>
</li>]]></template>
    <template title="setup.less" type="public" addon_id="XF" version_id="2010070" version_string="2.1.0"><![CDATA[// Note that this file should never output any CSS directly. It should contain variables and mixins only.
// Output should go into core.less.

// ################################ VARIABLES ###############################

// BLOCKS
@block-borderRadius-inner: max(@xf-blockBorderRadius - 1px, 0px);
@block-noStripSel: ~'.block-container:not(.block-container--noStripRadius)';

// HELPERS
@zIndex-1: 1 * (@xf-zIndexMultiplier);
@zIndex-2: 2 * (@xf-zIndexMultiplier);
@zIndex-3: 3 * (@xf-zIndexMultiplier);
@zIndex-4: 4 * (@xf-zIndexMultiplier);
@zIndex-5: 5 * (@xf-zIndexMultiplier);
@zIndex-6: 6 * (@xf-zIndexMultiplier);
@zIndex-7: 7 * (@xf-zIndexMultiplier);
@zIndex-8: 8 * (@xf-zIndexMultiplier);
@zIndex-9: 9 * (@xf-zIndexMultiplier);

// AVATARS
@_avatarBaseSize: 96px;
@avatar-xxs: (@_avatarBaseSize) / 4;
@avatar-xs:  (@_avatarBaseSize) / 3;
@avatar-s:   (@_avatarBaseSize) / 2;
@avatar-m:   (@_avatarBaseSize);
@avatar-l:   (@_avatarBaseSize) * 2;
@avatar-o:   (@_avatarBaseSize) * 4;

@rtl: xf-isRtl;
@ltr: xf-isLtr;

// DEFAULT FONTAWESOME TYPE
@faType: 'Pro';

// FONTAWESOME WEIGHT VALUES
@faWeight-light: 300;
@faWeight-regular: 400;
@faWeight-solid: 900;

{{ include('setup_fa.less') }}

// TABLES
@tablePadding: @xf-paddingSmall;

// ####################################### MIXINS ##################################

.m-clearFix()
{
	&:before,
	&:after
	{
		content: " ";
		display: table;
	}
	&:after
	{
		clear: both;
	}
}

.m-hideText()
{
	text-indent: 100%;
	overflow: hidden;
	white-space: nowrap;
	word-wrap: normal;
}

.m-overflowEllipsis()
{
	overflow: hidden;
	white-space: nowrap;
	word-wrap: normal;
	text-overflow: ellipsis;
}

.m-appendColon()
{
	&:after
	{
		content: "{$xf.language.label_separator}";
	}

	&.is-sentence:after
	{
		content: "";
	}
}

.m-tooltipArrow(@color, @size, @variation: ~'', @fillColor: false)
{
	@{variation}.tooltip--top &
	{
		bottom: 0;
		left: 50%;
		margin-left: -@size;
		.m-triangleDown(@color, @size);
	}
	@{variation}.tooltip--bottom &
	{
		top: 0;
		left: 50%;
		margin-left: -@size;
		.m-triangleUp(@color, @size);
	}
	@{variation}.tooltip--right &
	{
		top: 50%;
		left: 0;
		margin-top: -@size;
		.m-triangleLeft(@color, @size);
	}
	@{variation}.tooltip--left &
	{
		top: 50%;
		right: 0;
		margin-top: -@size;
		.m-triangleRight(@color, @size);
	}

	& when (iscolor(@fillColor))
	{
		@{variation} &:after
		{
			position: absolute;
			content: '';
		}

		@{variation}.tooltip--top &:after
		{
			bottom: 1px;
			left: -@size + 1px;
			.m-triangleDown(@fillColor, @size - 1px);
		}

		@{variation}.tooltip--bottom &:after
		{
			top: 1px;
			left: -@size + 1px;
			.m-triangleUp(@fillColor, @size - 1px);
		}

		@{variation}.tooltip--right &:after
		{
			left: 1px;
			bottom: -@size + 1px;
			.m-triangleLeft(@fillColor, @size - 1px);
		}

		@{variation}.tooltip--left &:after
		{
			right: 1px;
			bottom: -@size + 1px;
			.m-triangleRight(@fillColor, @size - 1px);
		}
	}
}

.m-triangleUp(@color; @size)
{
	border: @size solid transparent;
	border-top-width: 0;
	border-bottom-color: @color;
}

.m-triangleDown(@color; @size)
{
	border: @size solid transparent;
	border-bottom-width: 0;
	border-top-color: @color;
}

.m-triangleLeft(@color; @size)
{
	border: @size solid transparent;
	border-left-width: 0;
	border-right-color: @color;
}

.m-triangleRight(@color; @size)
{
	border: @size solid transparent;
	border-right-width: 0;
	border-left-color: @color;
}

.m-dropShadow(@x: 1px; @y: 2px; @blur: 2px; @spread: 0; @alpha: 0.25)
{
	box-shadow: @x @y @blur @spread rgba(0, 0, 0, @alpha);
}

.m-textOutline(@fillColor: white; @strokeColor: black; @width: 1px;)
{
	-webkit-text-fill-color: @fillColor;
	-webkit-text-stroke-color: @strokeColor;
	-webkit-text-stroke-width: @width;
}

.m-gradient(@startColor; @stopColor; @fallback; @startPos: 0%; @endPos: 100%)
{
	background: @fallback;
	background: linear-gradient(to bottom, @startColor @startPos, @stopColor @endPos);
}

.m-gradientHorizontal(@startColor; @stopColor; @fallback; @startPos: 0%; @endPos: 100%)
{
	background: @fallback;

	& when(@ltr)
	{
		background: linear-gradient(to right, @startColor @startPos, @stopColor @endPos);
	}
	& when(@rtl)
	{
		background: linear-gradient(to left, @startColor @startPos, @stopColor @endPos);
	}
}

.m-tabSize(@size: 4)
{
	-moz-tab-size: @size;
	tab-size: @size;
}

.m-transition(@props: all; @duration: @xf-animationSpeed; @timing: ease; @delay: 0; @raw-input: false)
{
	// adapted from https://stackoverflow.com/a/20810461 @ScottS

	.output() when (@raw-input = false)
	{
		@propsLength: length(@props);
		@durationLength: length(@duration);
		@timingLength: length(@timing);
		@delayLength: length(@delay);

		.buildString(@i, @s: ~'') when (@i <= @propsLength)
		{
			@prop: extract(@props, @i);

			.setDuration() when (@i <= @durationLength) { @dur: extract(@duration, @i); }
			.setDuration() when (@i >  @durationLength) { @dur: extract(@duration, @durationLength); }
			.setDuration();

			.setEasing() when (@i <= @timingLength) { @time: extract(@timing, @i); }
			.setEasing() when (@i >  @timingLength) { @time: extract(@timing, @timingLength); }
			.setEasing();

			.setDelay() when (@i <= @delayLength) { @del: extract(@delay, @i); }
			.setDelay() when (@i >  @delayLength) { @del: extract(@delay, @delayLength); }
			.setDelay();

			.setDivider() when (@i > 1) { @divider: ~'@{s},'; }
			.setDivider() when (@i = 1) { @divider: ~''; }
			.setDivider();

			.buildString((@i + 1), @divider @prop @dur @time);
		}

		.buildString(1);

		.buildString(@i, @s: ~'') when (@i > @propsLength)
		{
			.compact(@s);
		}
	}

	.output() when not (@raw-input = false)
	{
		.compact(@raw-input);
	}

	.compact(@string)
	{
		-webkit-transition: @string;
		//-moz-transition: @string;
		//-ms-transition: @string;
		//-o-transition: @string;
		transition: @string;
	}

	.output();
}

.m-transitionProperty(@props)
{
	-webkit-transition-property: @props;
	transition-property: @props;
}

.m-animation(@props)
{
	-webkit-animation: @props;
	animation: @props;
}

.m-transform(@props)
{
	-webkit-transform: @props;
	-ms-transform: @props;
	transform: @props;
}

.m-keyframes(@name, @rules)
{
	@-webkit-keyframes @name { @rules(); }
	@keyframes @name { @rules(); }
}

.m-columns(@count; @breakWidth: 0; @gap: 1em)
{
	-moz-column-count: @count;
	-webkit-column-count: @count;
	column-count: @count;

	-moz-column-gap: @gap;
	-webkit-column-gap: @gap;
	column-gap: @gap;

	& when(@breakWidth > 0)
	{
		@media (max-width: @breakWidth)
		{
			-moz-column-count: 1;
			-webkit-column-count: 1;
			column-count: 1;
		}
	}
}

.m-columnBreakAvoid()
{
	-webkit-column-break-inside: avoid;
	break-inside: avoid-column;
	page-break-inside: avoid;
}

.m-borderLeftRadius(@radius)
{
	border-top-left-radius: @radius;
	border-bottom-left-radius: @radius;
}

.m-borderRightRadius(@radius)
{
	border-top-right-radius: @radius;
	border-bottom-right-radius: @radius;
}

.m-borderTopRadius(@radius)
{
	border-top-left-radius: @radius;
	border-top-right-radius: @radius;
}

.m-borderBottomRadius(@radius)
{
	border-bottom-left-radius: @radius;
	border-bottom-right-radius: @radius;
}

.m-hiddenLinks()
{
	a
	{
		color: inherit;
		text-decoration: none;

		&:hover
		{
			text-decoration: underline;
		}
	}
}

.m-textColoredLinks()
{
	a
	{
		color: inherit;
		text-decoration: underline;
	}
}

.m-placeholder(@rules)
{
	&::-webkit-input-placeholder { @rules(); }
	&::-moz-placeholder { @rules(); }
	&:-moz-placeholder { @rules(); }
	&:-ms-input-placeholder { @rules(); }
}

.m-autoCompleteList(@wide: false)
{
	.m-listPlain();
	cursor: default;

	.xf-menu();
	min-width: 180px;
	& when(@wide = true)
	{
		min-width: 250px;
	}
	max-width: 95%;

	border: @xf-borderSize solid @xf-borderColor;
	.m-dropShadow(0, 3px, 5px, 0, .3);

	li
	{
		padding: @xf-paddingMedium;
		line-height: 24px;

		.m-clearFix();

		&.is-selected
		{
			background: @xf-contentHighlightBg;
		}

		.autoCompleteList-icon
		{
			float: left;
			margin-right: @xf-paddingMedium;
			width: 24px;
			height: 24px;
		}
	}
}

.m-listPlain()
{
	list-style: none;
	margin: 0;
	padding: 0;
}

// makes direct children display: inline-block, removing white-space between elements (mostly used on ul > li)
.m-inlineBlocks(@fontSize: @xf-fontSizeNormal)
{
	font-size: 0;

	> *
	{
		display: inline-block;
		font-size: @fontSize;
	}
}

.m-tabsTogether(@fontSize: @xf-fontSizeNormal)
{
	font-size: 0;

	.tabs-tab,
	.tabs-extra,
	.hScroller-action
	{
		font-size: @fontSize;
	}
}

.m-hiddenEl(@transition: true)
{
	display: none;

	&.is-active
	{
		display: block;
	}

	& when(@transition = true)
	{
		.m-transitionFadeDown();
	}
}

.m-transitionFade(@speed: @xf-animationSpeed)
{
	display: none;
	opacity: 0;

	.m-transition(all, -xf-opacity; @speed);

	&.is-active
	{
		display: block;
		opacity: 1;
	}

	&.is-transitioning
	{
		display: block;
	}
}

.m-transitionFadeDown(@speed: @xf-animationSpeed)
{
	.m-transitionFade(@speed);

	overflow-y: hidden;
	height: 0;

	.m-transitionProperty(all, -xf-height;);

	&.is-active
	{
		height: auto;
		overflow-y: visible;
	}

	&.is-transitioning
	{
		overflow-y: hidden;
	}
}

.m-visuallyHidden()
{
	position: absolute;
	height: 1px;
	width: 1px;
	margin: -1px;
	padding: 0;
	border: 0;
	clip: rect(0 0 0 0);
	overflow: hidden;
}

.m-faBase(@type: @faType; @weight: @xf-fontAwesomeWeight)
{
	.m-defaultFaWeight() when (@type = 'Brands')
	{
		@weight: @faWeight-regular;
	}
	// else use given @weight

	.m-defaultFaWeight();

	font-family: 'Font Awesome 5 @{type}';
	font-size: inherit;
	font-style: normal;
	font-weight: @weight;
	text-rendering: auto;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

.m-faContent(@content, @width: false, @direction: false)
{
	& when (@direction = false)
	{
		content: @content;
	}
	& when (@direction = ltr)
	{
		-ltr-content: @content;
	}
	& when (@direction = rtl)
	{
		-rtl-content: @content;
	}
	& when (isnumber(@width))
	{
		display: inline-block;
		width: @width;
	}
}

.m-faBefore(@icon, @width: false)
{
	&:before
	{
		.m-faContent(@icon, @width);
	}
}

.m-faAfter(@icon, @width: false)
{
	&:after
	{
		.m-faContent(@icon, @width);
	}
}

.m-menuGadget(@separate: false, @faWidth: false, @faWeight: @faWeight-solid)
{
	.m-faBase();
	.m-faContent("@{fa-var-caret-down}", @faWidth);
	font-weight: @faWeight;

	& when (@separate = true)
	{
		margin-left: .2em;
	}
	& when (isnumber(@separate))
	{
		margin-left: @separate;
	}

	unicode-bidi: isolate; // this is needed to ensure correct positioning in RTL with LTR text
}

.m-content(@content, @direction: false, @separateDirection: false, @separateWidth: false)
{
	& when (@direction = false)
	{
		content: @content;
	}
	& when (@direction = ltr)
	{
		-ltr-content: @content;
	}
	& when (@direction = rtl)
	{
		-rtl-content: @content;
	}
	& when (@separateDirection = left)
	{
		& when (isnumber(@separateWidth))
		{
			margin-right: @separateWidth;
		}
		& when not(isnumber(@separateWidth))
		{
			margin-right: .2em;
		}
	}
	& when (@separateDirection = right)
	{
		& when (isnumber(@separateWidth))
		{
			margin-left: @separateWidth;
		}
		& when not(isnumber(@separateWidth))
		{
			margin-left: .2em;
		}
	}
}

.m-buttonIcon(@icon, @width: false)
{
	& > .button-text
	{
		.m-faBefore(@icon, @width);
	}
}

.m-avatarSize(@avatarSize)
{
	width: @avatarSize;
	height: @avatarSize;
	font-size: round((@avatarSize) * (@xf-avatarDynamicTextPercent / 100));
}

.m-buttonBase()
{
	display: inline-block; // maintain this just in case for old browsers

	display: inline-flex;
	align-items: center;
	justify-content: center;
	text-decoration: none;
	cursor: pointer;
	white-space: nowrap;
	.m-transition(background-color);
	.xf-buttonBase();
}

.m-buttonColorVariation(@bgColor; @textColor)
{
	color: @textColor;
	background-color: @bgColor;
	.m-buttonBorderColorVariation(@bgColor);

	&:hover,
	&:active,
	&:focus
	{
		background-color: saturate(xf-intensify(@bgColor, 4%), 12%);
	}
}

.m-buttonBlockColorVariationSimple(@color)
{
	.m-buttonBorderColorVariation(@color);

	&:not(.button--splitTrigger),
	&.button--splitTrigger > .button-text,
	&.button--splitTrigger > .button-menu
	{
		&:hover,
		&:focus,
		&:active
		{
			background-color: saturate(xf-intensify(@color, 4%), 12%);
		}
	}
}

.m-buttonBorderColorVariation(@borderColor)
{
	border-color: xf-diminish(@borderColor, 5%) xf-intensify(@borderColor, 5%) xf-intensify(@borderColor, 5%) xf-diminish(@borderColor, 5%);

	&.button--splitTrigger
	{
		> .button-text { border-right-color: xf-intensify(@borderColor, 5%); }
		> .button-menu { border-left-color: xf-diminish(@borderColor, 5%); }
	}
}

// this will be replaced by the CSS renderer with the correct background-image rule
.m-selectGadgetColor(@color: black)
{
	-xf-select-gadget: @color;
}

.m-hScrollerActionColorVariation(@background, @text, @textHover)
{
	color: @text;

	&:hover
	{
		color: @textHover;
	}

	&.hScroller-action--start
	{
		.m-gradientHorizontal(@background, fade(@background, 0%), @background, 66%, 100%);
	}

	&.hScroller-action--end
	{
		.m-gradientHorizontal(fade(@background, 0%), @background, @background, 0%, 33%);
	}
}

// Fix for iOS zoom on input focus.
.m-inputZoomFix()
{
	@media (max-width: 568px)
	{
		font-size: 16px;
	}
}

.m-checkboxAligner()
{
	vertical-align: -2px;
}

.m-highResolution(@rules)
{
	@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 144dpi)
	{
		@rules();
	}
}

.m-fixedWidthFlex(@width)
{
	flex: 0 0 @width;
}

.m-labelVariation(@color; @bg; @border: false)
{
	color: @color;
	background: @bg;
	border-color: xf-intensify(@bg, 10%);

	& when (iscolor(@border))
	{
		border-color: @border;
	}

	a&:hover,
	a:hover &
	{
		background: xf-intensify(@bg, 4%);
		border-color: xf-intensify(@bg, 14%);

		& when (iscolor(@border))
		{
			border-color: xf-intensify(@border, 4%);
		}
	}
}

.m-tableBase()
{
	> table
	{
		border: none;
		border-collapse: collapse;
		empty-cells: show;
		max-width: 100%;

		> thead, > tbody
		{
			> tr
			{
				> th
				{
					background: @xf-paletteColor1;
					border: @xf-borderSize solid @xf-borderColor;
					border-bottom-color: @xf-borderColorFeature;
					border-bottom-width: @xf-borderSizeMinorFeature;
					padding: @tablePadding;
				}

				> td
				{
					background: @xf-contentBg;
					border: @xf-borderSize solid @xf-borderColor;
					padding: @tablePadding;
				}
			}
		}
	}
}

// STICKY HEADER STUFF
// Note that to access the height and offset, you need to call the mixin and use the variables locally.

@header-navHeight: 2 * (@xf-publicNavPaddingV)
	+ (xf-default(@xf-publicNav--font-size, @xf-fontSizeNormal) * (@xf-lineHeightDefault));
@header-subNavHeight: 2 * (@xf-publicSubNavPaddingV)
	+ (xf-default(@xf-publicSubNav--font-size, @xf-fontSizeNormal) * (@xf-lineHeightDefault))
	+ xf-default(@xf-publicSubNav--border-top-width, 0)
	+ xf-default(@xf-publicSubNav--border-bottom-width, 0);

.m-stickyHeaderConfig(@type)
{
	@_stickyHeader-offset: 10px;
	@_stickyHeader-height: 0;
}
.m-stickyHeaderConfig(@type) when(@type = primary)
{
	@_stickyHeader-height: @header-navHeight;
}
.m-stickyHeaderConfig(@type) when(@type = all)
{
	@_stickyHeader-height: @header-navHeight + @header-subNavHeight;
}

{{ include('setup_custom.less') }}]]></template>
    <template title="structured_list.less" type="public" addon_id="XF" version_id="2010170" version_string="2.1.1"><![CDATA[@_structItem-avatarSize: 36px;
@_structItem-avatarSizeExpanded: 48px;
@_structItem-avatarSizeEnd: @avatar-xxs;
@_structItem-cellPaddingH: ((@xf-paddingMedium) + (@xf-paddingLarge)) / 2; // average
@_structItem-cellPaddingV: @xf-paddingLarge;

.structItemContainer
{
	border-collapse: collapse;
	list-style: none;
	margin: 0;
	padding: 0;
	width: 100%;
}

.structItemContainer-group
{
}

.structItemContainer > .structItem:first-child,
.structItemContainer > .structItemContainer-group:first-child > .structItem:first-child
{
	border-top: none;
}

.structItem
{
	display: table;
	table-layout: fixed;
	border-collapse: collapse;
	border-top: @xf-borderSize solid @xf-borderColor;
	list-style: none;
	margin: 0;
	padding: 0;
	width: 100%;

	&.is-highlighted,
	&.is-moderated
	{
		background: @xf-contentHighlightBg;
	}

	&.is-deleted
	{
		opacity: .7;

		.structItem-title
		{
			text-decoration: line-through;
		}
	}

	&.is-mod-selected
	{
		background: @xf-inlineModHighlightColor;
		opacity: 1;
	}
}

.structItem-cell
{
	display: table-cell;
	vertical-align: top;
	padding: @_structItem-cellPaddingV @_structItem-cellPaddingH;

	.structItem--middle &
	{
		vertical-align: middle;
	}

	&.structItem-cell--icon
	{
		width: ((@_structItem-avatarSize) + (@_structItem-cellPaddingH) * 2);
		position: relative;

		&.structItem-cell--iconExpanded
		{
			width: ((@_structItem-avatarSizeExpanded) + (@_structItem-cellPaddingH) * 2);
		}

		&.structItem-cell--iconEnd
		{
			width: ((@_structItem-avatarSizeEnd) + (@_structItem-cellPaddingH) * 2);
			padding-left: @_structItem-cellPaddingH / 2;

			.structItem-iconContainer
			{
				padding-top: @xf-paddingMedium;
			}
		}

		&.structItem-cell--iconFixedSmall
		{
			width: (60px + (@_structItem-cellPaddingH) * 2);
		}
	}

	&.structItem-cell--meta
	{
		width: 135px;
	}

	&.structItem-cell--latest
	{
		width: 190px;
		text-align: right;
	}
}

.structItem-iconContainer
{
	position: relative;

	img
	{
		display: block;
		width: 100%;
	}

	.avatar
	{
		.m-avatarSize(@_structItem-avatarSize);

		&.avatar--xxs
		{
			.m-avatarSize(@_structItem-avatarSizeEnd);
		}
	}

	.structItem-secondaryIcon
	{
		position: absolute;
		right: -5px;
		bottom: -5px;

		.m-avatarSize(@_structItem-avatarSize / 2  + 2px);
	}

	.structItem-cell--iconExpanded &
	{
		.avatar
		{
			.m-avatarSize(@_structItem-avatarSizeExpanded);
		}

		.structItem-secondaryIcon
		{
			.m-avatarSize(@_structItem-avatarSizeExpanded / 2 - 2px);
		}
	}
}

.structItem-title
{
	font-size: @xf-fontSizeNormal;
	font-weight: @xf-fontWeightNormal;
	margin: 0;
	padding: 0;

	.label
	{
		font-weight: @xf-fontWeightNormal;
	}

	.is-unread &
	{
		font-weight: @xf-fontWeightHeavy;
	}
}

.structItem-minor
{
	font-size: @xf-fontSizeSmaller;
	color: @xf-textColorMuted;

	.m-hiddenLinks();
}

.structItem-parts
{
	.m-listPlain();
	display: inline;

	> li
	{
		display: inline;
		margin: 0;
		padding: 0;

		&:nth-child(even)
		{
			color: @xf-textColorDimmed;
		}

		&:before
		{
			content: "\00B7\20";
		}

		&:first-child:before
		{
			content: "";
			display: none;
		}
	}
}

.structItem-pageJump
{
	margin-left: 8px;
	font-size: @xf-fontSizeSmallest;

	a
	{
		.xf-chip();
		text-decoration: none;
		border-radius: @xf-borderRadiusSmall;
		padding: 0 3px;
		opacity: .5;
		.m-transition();

		.structItem:hover &,
		.has-touchevents &
		{
			opacity: 1;
		}

		&:hover
		{
			text-decoration: none;
			.xf-chipHover();
		}
	}
}

.structItem-statuses,
.structItem-extraInfo
{
	.m-listPlain();
	float: right;

	> li
	{
		float: left;
		margin-left: 8px;
	}

	input[type=checkbox]
	{
		.m-checkboxAligner();
	}
}

.structItem-statuses .reactionSummary
{
	vertical-align: -2px;
}

.structItem-extraInfo .reactionSummary
{
	vertical-align: middle;
}

.structItem-status
{
	&::before
	{
		.m-faBase();
		display: inline-block;
		font-size: 90%;
		color: @xf-textColorMuted;
	}

	&--deleted::before { .m-faContent(@fa-var-trash-alt); }
	&--locked::before { .m-faContent(@fa-var-lock); }
	&--moderated::before { .m-faContent(@fa-var-shield); color: @xf-textColorAttention; }
	&--redirect::before { .m-faContent(@fa-var-external-link); }
	&--starred::before { .m-faContent(@fa-var-star); color: @xf-starFullColor; }
	&--sticky::before { .m-faContent(@fa-var-thumbtack); }
	&--watched::before { .m-faContent(@fa-var-eye); color: @xf-textColorFeature; }
	&--poll::before { .m-faContent(@fa-var-chart-bar); }
	&--attention::before { .m-faContent(@fa-var-bullhorn); color: @xf-textColorAttention; }
}

.structItem.structItem--note
{
	.xf-contentHighlightBase();
	color: @xf-textColorFeature;

	.structItem-cell
	{
		padding-top: @_structItem-cellPaddingV / 2;
		padding-bottom: @_structItem-cellPaddingV / 2;
		font-size: @xf-fontSizeSmaller;
		text-align: center;
	}
}

@media (max-width: @xf-responsiveWide)
{
	.structItem-cell
	{
		vertical-align: top;

		&.structItem-cell--meta
		{
			width: 115px;
			font-size: @xf-fontSizeSmaller;
		}

		&.structItem-cell--latest
		{
			width: 140px;
			font-size: @xf-fontSizeSmaller;
		}
	}
}

@media (max-width: @xf-responsiveMedium)
{
	.structItem-cell
	{
		//padding: (@_structItem-cellPaddingV) / 2 @_structItem-cellPaddingH;

		&.structItem-cell--main
		{
			display: block;
			padding-bottom: .2em;
			padding-left: 0;
		}

		&.structItem-cell--meta
		{
			display: block;
			width: auto;
			float: left;
			padding-top: 0;
			padding-left: 0;
			padding-right: 0;
			color: @xf-textColorMuted;

			.structItem-minor
			{
				display: none;
			}

			.pairs
			{
				> dt,
				> dd
				{
					display: inline;
					float: none;
					margin: 0;
				}
			}
		}

		&.structItem-cell--latest
		{
			display: block;
			width: auto;
			float: left;
			padding-top: 0;
			padding-left: 0;

			&:before
			{
				content: "\00A0\00B7\20";
				color: @xf-textColorMuted;
			}

			a
			{
				color: @xf-textColorMuted;
			}

			.structItem-minor
			{
				display: none;
			}
		}

		&.structItem-cell--iconEnd
		{
			display: none;
		}
	}

	.structItem-pageJump,
	.structItem-extraInfoMinor
	{
		display: none;
	}

	.is-unread .structItem-latestDate
	{
		font-weight: @xf-fontWeightNormal;
	}
}

@media (max-width: @xf-responsiveNarrow)
{
	.structItem-parts
	{
		.structItem-startDate
		{
			display: none;
		}
	}
}]]></template>
    <template title="svg_countdownnewyear" type="public" addon_id="SVG/CountdownNewYear" version_id="2010673" version_string="2.1.6.3"><![CDATA[<link href="https://fonts.googleapis.com/css?family=Fira+Sans+Condensed:100,200,300,400,500,600,700,800,900&subset=cyrillic" rel="stylesheet">
<xf:css src="svg_countdownnewyear.less" />
<div class="santaclaus-hohoho">
    <ul onclick="clickSanta()">
        <li class="santaclaus">
            <div class="chapeu">
                <div class="cone-2"></div>
                <div class="cone-1"></div>
            </div>
            <div class="face">
                <div class="eyes"></div>
                <div class="nariz"></div>
                <div class="barba">
                    <div class="boca"></div>
                </div>
            </div>
            <div class="orelhas"></div>
        </li>
    </ul>
    <div class="countdown">
        <div class="text">До Нового {{ date($xf.time, 'Y') + 1 }} года:</div>
        <div id="timer"></div>
    </div>
</div>

<xf:js>{{ include('svg_countdownnewyear.js') }}</xf:js>]]></template>
    <template title="svg_countdownnewyear.js" type="public" addon_id="SVG/CountdownNewYear" version_id="2010673" version_string="2.1.6.3"><![CDATA[let statusSanta = 0;
let statusAnswer = [
	() => { alert('Не трогай меня!'); statusSanta++; },
	() => { alert('Мне больно!'); statusSanta++; },
	() => { alert('Я сейчас обижусь и уйду...'); statusSanta++; },
	() => { alert('Еще раз и будешь без меня!'); statusSanta++; },
	() => { alert('Ну все, пока!'); statusSanta++; $('.santaclaus')[0].style.display = 'none'; },
	() => { alert('А надо было раньше думать!'); },
];
function clickSanta() {
	statusAnswer[statusSanta]();
}

function updateTimer() {
  if(statusSanta == 5) {
	document.getElementById("timer")
    .innerHTML =
      'Все, я обиделся.';
	return;
  }
  future  = Date.parse("{{ date($xf.time, 'Y') + 1 }}/01/01 00:00:00");
  now     = new Date();
  diff    = future - now;

  days  = Math.floor( diff / (1000*60*60*24) );
  hours = Math.floor( diff / (1000*60*60) );
  mins  = Math.floor( diff / (1000*60) );
  secs  = Math.floor( diff / 1000 );

  d = days;
  h = hours - days  * 24;
  m = mins  - hours * 60;
  s = secs  - mins  * 60;

  document.getElementById("timer")
    .innerHTML =
      '<div>' + ('0' + d).slice(-2) + '<span>дни</span></div>' +
      '<div>' + ('0' + h).slice(-2) + '<span>часы</span></div>' +
      '<div>' + ('0' + m).slice(-2) + '<span>мин</span></div>' +
      '<div>' + ('0' + s).slice(-2) + '<span>сек</span></div>' ;
}
setInterval('updateTimer()', 1000 );]]></template>
    <template title="svg_countdownnewyear.less" type="public" addon_id="SVG/CountdownNewYear" version_id="2010673" version_string="2.1.6.3"><![CDATA[.santaclaus-hohoho {
    display: block;
    background-color: #44a2fa;
    width: 250px;
    height: auto;
    font-family: 'Fira Sans Condensed', sans-serif;
    padding: 20px auto;
    margin: 0 auto;
    text-align: center;
}

.santaclaus-hohoho ul {
    display: table;
    list-style: none;
    margin: 0 auto;
    max-width: 250px;
    padding: 0;
}

.santaclaus-hohoho ul li {
    display: inline-block;
    float: left;
}

.santaclaus-hohoho .santaclaus {
    display: block;
    margin: 0 auto;
    max-width: 250px;
}

.santaclaus-hohoho .santaclaus > div {
    margin: 0 auto;
    max-width: 200px;
}

.santaclaus-hohoho .santaclaus .chapeu {
    display: block;
    position: relative;
    width: 155px;
    z-index: 99;
}

.santaclaus-hohoho .santaclaus .chapeu .cone-1 {
    border-left: 25px solid transparent;
    border-right: 10px solid transparent;
    border-bottom: 35px solid #D32F2F;
}

.santaclaus-hohoho .santaclaus .chapeu .cone-2 {
    background-color: #D32F2F;
    border-top: 0px solid transparent;
    border-right: 170px solid #D32F2F;
    border-bottom: 50px solid transparent;
    border-color: transparent;
    position: relative;
    left: -28px;
    top: 24px;
    box-shadow: -25px 15px 30px -5px rgba(1, 1, 1, 0.3);
    transform: rotate(-15deg);
    border-radius: 30% 100% 0 100%;
}

.santaclaus-hohoho .santaclaus .chapeu:after,
.santaclaus-hohoho .santaclaus .chapeu:before {
    background-color: #fff;
    content: " ";
    display: block;
}

.santaclaus-hohoho .santaclaus .chapeu:after {
    height: 40px;
    margin-left: -7px;
    position: relative;
    width: 170px;
    border-radius: 0.8em;
}

.santaclaus-hohoho .santaclaus .chapeu:before {
    height: 40px;
    left: -60px;
    position: absolute;
    top: 40px;
    width: 40px;
    z-index: 111;
    border-radius: 50%;
    box-shadow: 20px 20px 40px -5px rgba(1, 1, 1, 0.3);
}

.santaclaus-hohoho .santaclaus .face {
    background-color: #ffccbc;
    content: " ";
    display: block;
    height: 60px;
    position: relative;
    top: -5px;
    width: 150px;
    box-shadow: 0px 0px 30px 5px rgba(1, 1, 1, 0.3);
    z-index: 1;
}

.santaclaus-hohoho .santaclaus > .orelhas {
    background-color: #eea2ad;
    display: block;
    height: 30px;
    margin: 0 auto;
    position: relative;
    top: -60px;
    width: 170px;
    z-index: 0;
    box-shadow: 0px 0px 30px 5px rgba(1, 1, 1, 0.3);
    border-radius: 1em 1em 2em 2em;
}

.santaclaus-hohoho .santaclaus .face > .eyes {
    display: inline-block;
    height: 0px;
    margin: 10px auto 0;
    max-width: 80px;
    width: 100%;
}

.santaclaus-hohoho .santaclaus .face > .eyes:before,
.santaclaus-hohoho .santaclaus .face > .eyes:after {
    background-color: #111;
    content: " ";
    display: inline-block;
    float: left;
    height: 15px;
    width: 15px;
    border-radius: 50%;
}

.santaclaus-hohoho .santaclaus .face > .eyes:after {
    float: right;
}

.santaclaus-hohoho .santaclaus .face > .nariz {
    background-color: #EEA2AD;
    height: 25px;
    margin: 0 auto;
    position: relative;
    width: 35px;
    z-index: 111;
    border-radius: 50%;
}

.santaclaus-hohoho .santaclaus .face > .barba {
    background-color: #ecf0f1;
    height: 120px;
    margin: 0 auto;
    position: relative;
    top: -15px;
    width: 170px;
    left: -10px;
    transform: rotate(-20deg);
    border-radius: 0% 100% 70% 100%;
    box-shadow: -10px 10px 10px -5px rgba(1, 1, 1, 0.3);
    animation: animaBarba 1.6s ease-in-out infinite alternate;
}

.santaclaus-hohoho .santaclaus .face > .barba > .boca {
    height: 25px;
    left: 15px;
    margin: 0 auto;
    position: relative;
    top: 10px;
    width: 30px;
    border-radius: 50%;
    animation: hoho 1.6s ease-in-out infinite alternate;
}

/*Movimenta barba*/

@keyframes animaBarba {
    to {
        transform: rotate(-10deg);
    }
}

/*Hoho no movimento da boca*/

@keyframes hoho {
    0% {
        background-color: #ecf0f1;
        box-shadow: 0px 10px 0 0 #111;
        height: 20px;
        width: 30px;
    }

    60% {
        background-color: #ecf0f1;
        box-shadow: 0px 30px 0 0 #111;
        height: 30px;
        width: 15px;
    }

    80% {
        background-color: #ecf0f1;
        box-shadow: 0px 30px 0 0 #111;
        height: 25px;
        width: 20px;
    }

    100% {
        background-color: #ecf0f1;
        box-shadow: 0px 30px 0 0 #111;
        height: 30px;
        width: 15px;
    }
}

.santaclaus-hohoho .countdown {
    display: block;
    position: relative;
    width: 90%;
    height: 100%;
    color: #fff;
    text-transform: uppercase;
    margin: 70px auto 20px;
}

.santaclaus-hohoho .countdown .text {
    font-size: 1.2em;
    font-weight: 400;
}

.santaclaus-hohoho .countdown #timer {
    font-size: 2.5em;
    font-weight: 500;
}

.santaclaus-hohoho .countdown #timer div {
    display: inline-block;
    width: 25%;
}

.santaclaus-hohoho .countdown #timer div span {
    display: block;
    font-size: .35em;
    font-weight: 300;
}]]></template>
    <template title="thread_list_macros" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<xf:macro name="item"
	arg-thread="!"
	arg-forum=""
	arg-forceRead="{{ false }}"
	arg-showWatched="{{ true }}"
	arg-allowInlineMod="{{ true }}"
	arg-chooseName=""
	arg-extraInfo=""
	arg-allowEdit="{{ true }}">

	<xf:css src="structured_list.less" />

	<div class="structItem structItem--thread<xf:if is="!$thread.discussion_open"> is-locked</xf:if>{{ $thread.prefix_id ? ' is-prefix' . $thread.prefix_id : '' }}{{ $thread.isIgnored() ? ' is-ignored' : '' }}{{ ($thread.isUnread() AND !$forceRead) ? ' is-unread' : '' }}{{ $thread.discussion_state == 'moderated' ? ' is-moderated' : '' }}{{ $thread.discussion_state == 'deleted' ? ' is-deleted' : '' }} js-inlineModContainer js-threadListItem-{$thread.thread_id}" data-author="{{ $thread.User.username ?: $thread.username }}">
		<div class="structItem-cell structItem-cell--icon">
			<div class="structItem-iconContainer">
				<xf:avatar user="$thread.User" size="s" defaultname="{$thread.username}" />
				<xf:if is="property('dt_discussion_online')">
					<xf:if is="$thread.User.isOnline()">
							<span class="forum-avatar-online" data-xf-init="tooltip" title="{{ phrase('online_now')|for_attr }}"></span>
						<xf:elseif is="property('dt_offline_indicator')" />
							<span class="forum-avatar-offline" data-xf-init="tooltip" title="Offline"></span>
					</xf:if>
				</xf:if>
				<xf:if is="$thread.getUserPostCount()">
					<xf:avatar user="$xf.visitor" size="s"
						href=""
						class="avatar--separated structItem-secondaryIcon"
						tabindex="0"
						data-xf-init="tooltip"
						data-trigger="auto"
						title="{{ phrase('you_have_posted_x_messages_in_this_thread', {'count': $thread.getUserPostCount() }) }}" />
				</xf:if>
			</div>
		</div>
		<div class="structItem-cell structItem-cell--main" data-xf-init="touch-proxy">
			<xf:if contentcheck="true">
				<ul class="structItem-statuses">
				<xf:contentcheck>
					<xf:if is="property('reactionSummaryOnLists') == 'status' && $thread.first_post_reactions">
						<li><xf:reactions summary="true" reactions="{$thread.first_post_reactions}" /></li>
					</xf:if>
					<xf:if is="$thread.discussion_state == 'moderated'">
						<li>
							<i class="structItem-status structItem-status--moderated" aria-hidden="true" title="{{ phrase('awaiting_approval')|for_attr }}"></i>
							<span class="u-srOnly">{{ phrase('awaiting_approval') }}</span>
						</li>
					</xf:if>
					<xf:if is="$thread.discussion_state == 'deleted'">
						<li>
							<i class="structItem-status structItem-status--deleted" aria-hidden="true" title="{{ phrase('deleted')|for_attr }}"></i>
							<span class="u-srOnly">{{ phrase('deleted') }}</span>
						</li>
					</xf:if>
					<xf:if is="!$thread.discussion_open">
						<li>
							<i class="structItem-status structItem-status--locked" aria-hidden="true" title="{{ phrase('locked')|for_attr }}"></i>
							<span class="u-srOnly">{{ phrase('locked') }}</span>
						</li>
					</xf:if>
					<xf:if is="$thread.discussion_type == 'redirect'">
						<li>
							<i class="structItem-status structItem-status--redirect" aria-hidden="true" title="{{ phrase('redirect')|for_attr }}"></i>
							<span class="u-srOnly">{{ phrase('redirect') }}</span>
						</li>
					<xf:elseif is="$thread.discussion_type == 'poll'" />
						<li>
							<i class="structItem-status structItem-status--poll" aria-hidden="true" title="{{ phrase('poll')|for_attr }}"></i>
							<span class="u-srOnly">{{ phrase('poll') }}</span>
						</li>
					</xf:if>
					<xf:if is="$thread.sticky">
						<li>
							<i class="structItem-status structItem-status--sticky" aria-hidden="true" title="{{ phrase('sticky')|for_attr }}"></i>
							<span class="u-srOnly">{{ phrase('sticky') }}</span>
						</li>
					</xf:if>
					<xf:if is="{$showWatched} AND {$xf.visitor.user_id}">
						<xf:if is="{$thread.Watch.{$xf.visitor.user_id}}">
							<li>
								<i class="structItem-status structItem-status--watched" aria-hidden="true" title="{{ phrase('thread_watched')|for_attr }}"></i>
								<span class="u-srOnly">{{ phrase('thread_watched') }}</span>
							</li>
						<xf:elseif is="!$forum AND {$thread.Forum.Watch.{$xf.visitor.user_id}}" />
							<li>
								<i class="structItem-status structItem-status--watched" aria-hidden="true" title="{{ phrase('forum_watched')|for_attr }}"></i>
								<span class="u-srOnly">{{ phrase('forum_watched') }}</span>
							</li>
						</xf:if>
					</xf:if>
				</xf:contentcheck>
				</ul>
			</xf:if>

			<div class="structItem-title">
				<xf:set var="$canPreview" value="{{ $thread.canPreview() }}" />
				<xf:if is="$thread.prefix_id">
					<xf:if is="$forum">
						<a href="{{ link('forums', $forum, {'prefix_id': $thread.prefix_id}) }}" class="labelLink" rel="nofollow">{{ prefix('thread', $thread, 'html', '') }}</a>
					<xf:else />
						{{ prefix('thread', $thread, 'html', '') }}
					</xf:if>
				</xf:if>
				<a href="{{ link('threads' . (($thread.isUnread() AND !$forceRead) ? '/unread' : ''), $thread) }}" class="" data-tp-primary="on" data-xf-init="{{ $canPreview ? 'preview-tooltip' : '' }}" data-preview-url="{{ $canPreview ? link('threads/preview', $thread) : '' }}">{$thread.title}</a>
			</div>

			<div class="structItem-minor">
				<xf:if contentcheck="true">
					<ul class="structItem-extraInfo">
					<xf:contentcheck>
						<xf:if is="property('reactionSummaryOnLists') == 'minor_opposite' && $thread.first_post_reactions">
							<li><xf:reactions summary="true" reactions="{$thread.first_post_reactions}" /></li>
						</xf:if>
						<xf:if is="{$extraInfo}">
							<li>{$extraInfo}</li>
						<xf:elseif is="$allowEdit AND $thread.canEdit() AND $thread.canUseInlineModeration()" />
							<xf:if is="!$allowInlineMod OR !$forum">
								<xf:set var="$editParams" value="{{ {
									'_xfNoInlineMod': !$allowInlineMod ? 1 : null,
									 '_xfForumName': !$forum ? 1 : 0
								} }}" />
							<xf:else />
								<xf:set var="$editParams" value="{{ [] }}" />
							</xf:if>
							<xf:if is="$thread.discussion_type != 'redirect'">
								<li class="structItem-extraInfoMinor">
									<a href="{{ link('threads/edit', $thread) }}" data-xf-click="overlay" data-cache="false" data-href="{{ link('threads/edit', $thread, $editParams) }}">
										{{ phrase('edit') }}
									</a>
								</li>
							</xf:if>
						</xf:if>
						<xf:if is="$chooseName">
							<li><xf:checkbox standalone="true">
								<xf:option name="{$chooseName}[]" value="{$thread.thread_id}" class="js-chooseItem" />
							</xf:checkbox></li>
						<xf:elseif is="$allowInlineMod AND $thread.canUseInlineModeration()" />
							<li><xf:checkbox standalone="true">
								<xf:option value="{$thread.thread_id}" class="js-inlineModToggle"
									data-xf-init="tooltip"
									title="{{ phrase('select_for_moderation') }}"
									label="{{ phrase('select_for_moderation') }}"
									hiddenlabel="true"
								/>
							</xf:checkbox></li>
						</xf:if>
					</xf:contentcheck>
					</ul>
				</xf:if>

				<xf:if is="$thread.discussion_state == 'deleted'">
					<xf:if is="{$extraInfo}"><span class="structItem-extraInfo">{$extraInfo}</span></xf:if>

					<xf:macro template="deletion_macros" name="notice" arg-log="{$thread.DeletionLog}" />
				<xf:else />
					<ul class="structItem-parts">
						<li><xf:username user="$thread.User" defaultname="{$thread.username}" rich="true"/></li>
						<li class="structItem-startDate"><a href="{{ link('threads', $thread) }}" rel="nofollow"><xf:date time="{$thread.post_date}" /></a></li>
						<xf:if is="!$forum">
							<li><a href="{{ link('forums', $thread.Forum) }}">{$thread.Forum.title}</a></li>
						</xf:if>
					</ul>

					<xf:if is="$thread.discussion_type != 'redirect' && $thread.reply_count >= $xf.options.messagesPerPage && $xf.options.lastPageLinks">
						<span class="structItem-pageJump">
						<xf:foreach loop="{{ last_pages($thread.reply_count + 1, $xf.options.messagesPerPage, $xf.options.lastPageLinks) }}" value="$p">
							<a href="{{ link('threads', $thread, {'page': $p}) }}">{$p}</a>
						</xf:foreach>
						</span>
					</xf:if>
				</xf:if>
			</div>
		</div>
		<div class="structItem-cell structItem-cell--meta" title="{{ phrase('first_message_reaction_score:')|for_attr }} {$thread.first_post_reaction_score|number}">
			<dl class="pairs pairs--justified">
				<dt>{{ phrase('replies') }}</dt>
				<dd>{{ $thread.discussion_type == 'redirect' ? '&ndash;' : $thread.reply_count|number_short }}</dd>
			</dl>
			<dl class="pairs pairs--justified structItem-minor">
				<dt>{{ phrase('views') }}</dt>
				<dd>{{ $thread.discussion_type == 'redirect' ? '&ndash;' : ($thread.view_count > $thread.reply_count ? $thread.view_count|number_short : number_short($thread.reply_count+1)) }}</dd>
			</dl>
		</div>
		<div class="structItem-cell structItem-cell--latest">
			<xf:if is="$thread.discussion_type == 'redirect'">
				{{ phrase('n_a') }}
			<xf:else />
				<a href="{{ link('threads/latest', $thread) }}" rel="nofollow"><xf:date time="{$thread.last_post_date}" class="structItem-latestDate" /></a>
				<div class="structItem-minor">
					<xf:if is="$xf.visitor.isIgnoring($thread.last_post_user_id)">
						{{ phrase('ignored_member') }}
					<xf:else />
						<xf:username user="{$thread.LastPoster}" defaultname="{$thread.last_post_username}" rich="true" />
					</xf:if>
				</div>
			</xf:if>
		</div>
		<div class="structItem-cell structItem-cell--icon structItem-cell--iconEnd">
			<div class="structItem-iconContainer">
				<xf:if is="$xf.visitor.isIgnoring($thread.last_post_user_id) OR $thread.discussion_type == 'redirect'">
					<xf:avatar user="{{ null }}" size="xxs" />
				<xf:else />
					<xf:avatar user="{$thread.LastPoster}" defaultname="{$thread.last_post_username}" size="xxs" />
				</xf:if>
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="item_new_posts" arg-thread="!">
	<div class="contentRow">
		<div class="contentRow-figure">
			<xf:avatar user="$thread.LastPoster" size="xxs" defaultname="{$thread.last_post_username}" />
		</div>
		<div class="contentRow-main contentRow-main--close">
			<xf:if is="$thread.isUnread()">
				<a href="{{ link('threads/unread', $thread) }}">{{ prefix('thread', $thread) }}{$thread.title}</a>
			<xf:else />
				<a href="{{ link('threads/post', $thread, {'post_id': $thread.last_post_id}) }}">{{ prefix('thread', $thread) }}{$thread.title}</a>
			</xf:if>

			<div class="contentRow-minor contentRow-minor--hideLinks">
				<ul class="listInline listInline--bullet">
					<li>{{ phrase('latest_x', {'name': $thread.last_post_cache.username}) }}</li>
					<li><xf:date time="{$thread.last_post_date}" /></li>
				</ul>
			</div>
			<div class="contentRow-minor contentRow-minor--hideLinks">
				<a href="{{ link('forums', $thread.Forum) }}">{$thread.Forum.title}</a>
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="item_new_threads" arg-thread="!">
	<div class="contentRow">
		<div class="contentRow-figure">
			<xf:avatar user="$thread.User" size="xxs" defaultname="{$thread.username}" />
		</div>
		<div class="contentRow-main contentRow-main--close">
			<a href="{{ link('threads', $thread) }}">{{ prefix('thread', $thread) }}{$thread.title}</a>

			<div class="contentRow-minor contentRow-minor--hideLinks">
				<ul class="listInline listInline--bullet">
					<li>{{ phrase('started_by_x', {'name': $thread.username}) }}</li>
					<li><xf:date time="{$thread.post_date}" /></li>
					<li>{{ phrase('replies:') }} {$thread.reply_count|number_short}</li>
				</ul>
			</div>
			<div class="contentRow-minor contentRow-minor--hideLinks">
				<a href="{{ link('forums', $thread.Forum) }}">{$thread.Forum.title}</a>
			</div>
		</div>
	</div>
</xf:macro>

<xf:macro name="quick_thread"
	arg-forum="!"
	arg-page="1"
	arg-order="last_post_date"
	arg-direction="desc">

	<xf:css src="structured_list.less" />

	<xf:if is="$forum.canCreateThread()">

		<xf:js src="xf/thread.js" min="1" />

		<xf:set var="$inlineMode" value="{{ ($page == 1 && $order == 'last_post_date' && $direction == 'desc') ? true : false }}" />

		<xf:form action="{{ link('forums/post-thread', $forum, {'inline-mode': $inlineMode}) }}" class="structItem" ajax="true"
			draft="{{ link('forums/draft', $forum) }}"
			data-xf-init="quick-thread"
			data-focus-activate=".js-titleInput"
			data-focus-activate-href="{{ link('forums/post-thread', $forum, {'inline-mode': true}) }}"
			data-focus-activate-target=".js-quickThreadFields"
			data-insert-target=".js-threadList"
			data-replace-target=".js-emptyThreadList">

			<div class="structItem-cell structItem-cell--icon">
				<div class="structItem-iconContainer">
					<xf:avatar user="$xf.visitor" size="s" />
				</div>
			</div>
			<div class="structItem-cell structItem-cell--newThread js-prefixListenContainer">

				<xf:formrow rowtype="noGutter noLabel fullWidth noPadding mergeNext"
					label="{{ phrase('title') }}">

					<xf:prefixinput maxlength="{{ max_length('XF:Thread', 'title') }}"
						placeholder="{$forum.thread_prompt}"
						title="{{ phrase('post_new_thread_in_this_forum') }}"
						prefix-value="{$forum.default_prefix_id}"
						type="thread"
						prefixes="{{ $forum.getUsablePrefixes() }}"
						data-xf-init="tooltip"
						rows="1"/>
				</xf:formrow>

				<div class="js-quickThreadFields inserter-container is-hidden"><!--{{ phrase('loading...') }}--></div>
			</div>
		</xf:form>
	</xf:if>

</xf:macro>]]></template>
    <template title="thread_move" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[<xf:title>{{ phrase('move_thread:') }} {{ prefix('thread', $thread, 'escaped') }}{$thread.title}</xf:title>
<xf:h1>{{ phrase('move_thread:') }} {{ prefix('thread', $thread) }}{$thread.title}</xf:h1>

<xf:breadcrumb source="$thread.getBreadcrumbs()" />

<xf:form action="{{ link('threads/move', $thread) }}" class="block" ajax="true">
	<div class="block-container">
		<div class="block-body js-prefixListenContainer">
			<xf:prefixinputrow
				label="{{ phrase('title') }}"
				prefixes="{$prefixes}"
				type="thread"
				prefix-value="{$thread.prefix_id}"
				textbox-value="{$thread.title}"
				href="{{ link('forums/prefixes') }}"
				listen-to="< .js-prefixListenContainer | .js-nodeList"
				autofocus="autofocus"
				maxlength="{{ max_length($thread, 'title') }}" />

			<xf:selectrow style="color:black" name="target_node_id" value="{$forum.node_id}" class="js-nodeList"
				label="{{ phrase('destination_forum') }}">

				<xf:foreach loop="$nodeTree.getFlattened(0)" value="$treeEntry">
					<xf:option style="color:black" value="{$treeEntry.record.node_id}" disabled="{{ $treeEntry.record.node_type_id != 'Forum' ? 'disabled' : '' }}">
						{{ repeat_raw('&nbsp; ', $treeEntry.depth) }} {$treeEntry.record.title}
					</xf:option>
				</xf:foreach>
			</xf:selectrow>

			<xf:macro template="helper_action" name="thread_redirect" arg-label="{{ phrase('redirection_notice') }}" />

			<xf:checkboxrow>
				<xf:option style="color:black" name="notify_watchers" value="1" selected="{{ true }}">{{ phrase('notify_members_watching_destination_forum') }}</xf:option>
			</xf:checkboxrow>

			<xf:if is="$thread.canSendModeratorActionAlert()">
				<xf:macro template="helper_action" name="thread_alert" arg-selected="{{ true }}" />
			</xf:if>
		</div>
		<xf:submitrow icon="save" sticky="true" />
	</div>
</xf:form>]]></template>
    <template title="thread_reply_bans" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<xf:title>{{ phrase('manage_reply_bans:') }} {{ prefix('thread', $thread, 'escaped') }}{$thread.title}</xf:title>
<xf:h1>{{ phrase('manage_reply_bans:') }} {{ prefix('thread', $thread) }}{$thread.title}</xf:h1>

<xf:breadcrumb source="$thread.getBreadcrumbs()" />

<xf:form action="{{ link('threads/reply-bans', $thread) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:if is="$bans is not empty">
				<xf:datalist data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:cell>{{ phrase('user') }}</xf:cell>
						<xf:cell>{{ phrase('reason') }}</xf:cell>
						<xf:cell>{{ phrase('end_date') }}</xf:cell>
						<xf:cell class="dataList-cell--min">{{ phrase('delete') }}</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$bans" value="$ban">
						<xf:datarow rowclass="dataList-row--noHover">
							<xf:cell><xf:username user="$ban.User" rich="true"/></xf:cell>
							<xf:cell>
								<xf:if is="$ban.reason">
									{$ban.reason}
								<xf:else />
									{{ phrase('n_a') }}
								</xf:if>
							</xf:cell>
							<xf:cell>
								<xf:if is="$ban.expiry_date">
									<xf:date time="{$ban.expiry_date}" />
								<xf:else />
									{{ phrase('permanent') }}
								</xf:if>
							</xf:cell>
							<xf:toggle name="delete[{$ban.user_id}]" class="dataList-cell--separated dataList-cell--alt" />
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<h2 class="block-formSectionHeader">{{ phrase('new_reply_ban') }}</h2>
			<div class="block-body">
			</xf:if>

			<xf:textboxrow name="username" ac="single"
				maxlength="{{ max_length($xf.visitor, 'username') }}"
				label="{{ phrase('user_name') }}"
				explain="{{ phrase('this_user_still_able_to_view_thread_not_reply') }}" />

			<xf:radiorow name="ban_length"
				label="{{ phrase('ban_length') }}">

				<xf:option value="permanent"
					label="{{ phrase('permanent') }}" />

				<xf:option value="temporary" selected="true"
					label="{{ phrase('temporary:') }}">

					<xf:dependent>
						<div class="inputGroup inputGroup--auto">
							<xf:textbox name="ban_length_value" value="7" />
							<span class="inputGroup-splitter"></span>
							<xf:select name="ban_length_unit">
								<xf:option value="hours">{{ phrase('hours') }}</xf:option>
								<xf:option value="days" selected="true">{{ phrase('days') }}</xf:option>
								<xf:option value="weeks">{{ phrase('weeks') }}</xf:option>
								<xf:option value="months">{{ phrase('months') }}</xf:option>
							</xf:select>
						</div>
					</xf:dependent>
				</xf:option>
			</xf:radiorow>

			<xf:textboxrow name="reason" maxlength="{{ max_length('XF:ThreadReplyBan', 'reason') }}"
				label="{{ phrase('reason') }}"
				explain="{{ phrase('this_will_be_shown_to_user_if_you_choose_to_notify_them') }}" />

			<xf:checkboxrow>
				<xf:option name="send_alert">{{ phrase('notify_user_of_this_action') }}</xf:option>
			</xf:checkboxrow>
		</div>
		<xf:submitrow icon="save" sticky="true" />
	</div>
</xf:form>]]></template>
    <template title="thread_view" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<xf:title page="{$page}">{{ prefix('thread', $thread, 'escaped') }}{$thread.title}</xf:title>
<xf:h1>{{ prefix('thread', $thread) }}{$thread.title}</xf:h1>

<xf:description meta="false">
	<ul class="listInline listInline--bullet">
		<li>
			<xf:fa icon="fa-user" title="{{ phrase('thread_starter')|for_attr }}" />
			<span class="u-srOnly">{{ phrase('thread_starter') }}</span>

			<xf:username user="{$thread.User}" defaultname="{$thread.username}" class="u-concealed" rich="true" />
		</li>
		<li>
			<xf:fa icon="fa-clock" title="{{ phrase('start_date')|for_attr }}" />
			<span class="u-srOnly">{{ phrase('start_date') }}</span>

			<a href="{{ link('threads', $thread) }}" class="u-concealed"><xf:date time="{$thread.post_date}" /></a>
		</li>
		<xf:if is="$xf.options.enableTagging AND ($thread.canEditTags() OR $thread.tags)">
			<li>
				<xf:macro template="tag_macros" name="list"
					arg-tags="{$thread.tags}"
					arg-tagList="tagList--thread-{$thread.thread_id}"
					arg-editLink="{{ $thread.canEditTags() ? link('threads/tags', $thread) : '' }}" />
			</li>
		</xf:if>
	</ul>
</xf:description>

<xf:set var="$fpSnippet" value="{{ snippet($firstPost.message, 0, {'stripBbCode': true}) }}" />

<xf:macro template="metadata_macros" name="metadata"
	arg-description="{$fpSnippet}"
	arg-shareUrl="{{ link('canonical:threads', $thread) }}"
	arg-canonicalUrl="{{ link('canonical:threads', $thread, {'page': $page}) }}" />

<xf:page option="ldJsonHtml">
	<xf:if is="$thread.User.avatar_highdpi">
		<xf:set var="$image">{$thread.User.getAvatarUrl('h', null, true)}</xf:set>
	<xf:elseif is="$thread.User.avatar_date" />
		<xf:set var="$image">{$thread.User.getAvatarUrl('l', null, true)}</xf:set>
	<xf:elseif is="property('publicMetadataLogoUrl')" />
		<xf:set var="$image">{{ base_url(property('publicMetadataLogoUrl'), true) }}</xf:set>
	</xf:if>
	<xf:if is="$image">
		<script type="application/ld+json">
		{
			"@context": "https://schema.org",
			"@type": "DiscussionForumPosting",
			"@id": "{{ link('canonical:threads', $thread)|escape('json') }}",
			"headline": "{$thread.title|escape('json')}",
			"articleBody": "{$fpSnippet|escape('json')}",
			"articleSection": "{$thread.Forum.Node.title|escape('json')}",
			"author": {
				"@type": "Person",
				"name": "{{ ($thread.User ? $thread.User.username : $thread.username)|escape('json') }}"
			},
			"datePublished": "{{ date($thread.post_date, 'Y-m-d')|escape('json') }}",
			"dateModified": "{{ date($thread.last_post_date, 'Y-m-d')|escape('json') }}",
			"image": "{$image|escape('json')}",
			"interactionStatistic": {
				"@type": "InteractionCounter",
				"interactionType": "https://schema.org/ReplyAction",
				"userInteractionCount": {$thread.reply_count}
			}
		}
		</script>
	</xf:if>
</xf:page>

<!--[XF:content_top]-->

<xf:if is="$pendingApproval">
	<div class="blockMessage blockMessage--important">{{ phrase('content_submitted_displayed_pending_approval') }}</div>
</xf:if>

<xf:macro template="forum_macros" name="forum_page_options" arg-forum="{$forum}" arg-thread="{$thread}" />

<xf:breadcrumb source="$forum.getBreadcrumbs()" />

<xf:if is="$canInlineMod OR $thread.canUseInlineModeration()">
	<xf:js src="xf/inline_mod.js" min="1" />
</xf:if>

<xf:macro template="lightbox_macros" name="setup" arg-canViewAttachments="{$thread.canViewAttachments()}" />

<xf:if is="$poll">
	<xf:macro template="poll_macros" name="poll_block" arg-poll="{$poll}" />
</xf:if>

<xf:ad position="thread_view_above_messages" arg-thread="{$thread}" />

<div class="block block--messages" data-xf-init="{{ $canInlineMod ? 'inline-mod' : '' }}" data-type="post" data-href="{{ link('inline-mod') }}">

	<xf:macro name="thread_status" arg-thread="{$thread}" arg-wrapperClass="block-outer" />

	<div class="block-outer"><xf:trim>
		<xf:pagenav
			page="{$page}" perpage="{$perPage}" total="{{ $thread.reply_count + 1 }}"
			link="threads" data="{$thread}"
			wrapperclass="block-outer-main" />
		<xf:if contentcheck="true">
			<div class="block-outer-opposite">
				<div class="buttonGroup">
				<xf:contentcheck>
					<xf:if is="$canInlineMod">
						<xf:macro template="inline_mod_macros" name="button" />
					</xf:if>
					<xf:if is="$thread.discussion_state == 'deleted' AND $thread.canUndelete()">
						<xf:button href="{{ link('threads/undelete', $thread) }}" class="button--link" overlay="true">
							{{ phrase('undelete') }}
						</xf:button>
					</xf:if>
					<xf:if is="$thread.canApproveUnapprove() AND $thread.discussion_state == 'moderated'">
						<xf:button href="{{ link('threads/approve', $thread) }}" class="button--link" overlay="true">
							{{ phrase('approve') }}
						</xf:button>
					</xf:if>
					<xf:if is="$xf.visitor.user_id AND $thread.isUnread()">
						<xf:button href="{{ $firstUnread ? ('#post-' . $firstUnread.post_id) : link('threads/unread', $thread, {'new': 1}) }}"
							class="button--link"
							data-xf-click="scroll-to"
							data-silent="true">
								{{ phrase('jump_to_new') }}
						</xf:button>
					</xf:if>
					<xf:if is="$thread.canWatch()">
						<xf:button href="{{ link('threads/watch', $thread) }}" class="button--link"
							data-xf-click="switch-overlay"
							data-sk-watch="{{ phrase('watch') }}"
							data-sk-unwatch="{{ phrase('unwatch') }}">
							<xf:if is="{$thread.Watch.{$xf.visitor.user_id}}">
								{{ phrase('unwatch') }}
							<xf:else />
								{{ phrase('watch') }}
							</xf:if>
						</xf:button>
					</xf:if>

					<xf:if contentcheck="true">
						<div class="buttonGroup-buttonWrapper">
							<xf:button class="button--link menuTrigger" data-xf-click="menu" aria-expanded="false" aria-haspopup="true" title="{{ phrase('more_options') }}">&#8226;&#8226;&#8226;</xf:button>
							<div class="menu" data-menu="menu" aria-hidden="true">
								<div class="menu-content">
									<h4 class="menu-header">{{ phrase('more_options') }}</h4>
									<xf:contentcheck>
										<!--[XF:thread_tools_menu:top]-->
										<xf:if is="$thread.canEdit()">
											<a href="{{ link('threads/edit', $thread) }}" data-xf-click="overlay" class="menu-linkRow">{{ phrase('edit_thread') }}</a>
										</xf:if>
										<xf:if is="$thread.canLockUnlock()">
											<a href="{{ link('threads/quick-close', $thread) }}"
												class="menu-linkRow"
												data-xf-click="switch"
												data-menu-closer="true">

												<xf:if is="$thread.discussion_open">
													{{ phrase('lock_thread') }}
												<xf:else />
													{{ phrase('unlock_thread') }}
												</xf:if>
											</a>
										</xf:if>
										<xf:if is="$thread.canStickUnstick()">
											<a href="{{ link('threads/quick-stick', $thread) }}"
												class="menu-linkRow"
												data-xf-click="switch"
												data-menu-closer="true">

												<xf:if is="$thread.sticky">
													{{ phrase('unstick_thread') }}
												<xf:else />
													{{ phrase('stick_thread') }}
												</xf:if>
											</a>
										</xf:if>
										<xf:if is="$thread.canCreatePoll()">
											<a href="{{ link('threads/poll/create', $thread) }}" data-xf-click="overlay" class="menu-linkRow">{{ phrase('create_poll') }}</a>
										</xf:if>
										<xf:if is="$thread.canDelete('soft')">
											<a href="{{ link('threads/delete', $thread) }}" data-xf-click="overlay" class="menu-linkRow">{{ phrase('delete_thread') }}</a>
										</xf:if>
										<xf:if is="$thread.canMove()">
											<a href="{{ link('threads/move', $thread) }}" data-xf-click="overlay" class="menu-linkRow">{{ phrase('move_thread') }}</a>
										</xf:if>
										<xf:if is="$thread.canReplyBan()">
											<a href="{{ link('threads/reply-bans', $thread) }}" data-xf-click="overlay" class="menu-linkRow">{{ phrase('manage_reply_bans') }}</a>
										</xf:if>
										<xf:if is="$thread.canViewModeratorLogs()">
											<a href="{{ link('threads/moderator-actions', $thread) }}" data-xf-click="overlay" class="menu-linkRow">{{ phrase('moderator_actions') }}</a>
										</xf:if>
										<!--[XF:thread_tools_menu:before_footer]-->
										<xf:if is="$thread.canUseInlineModeration()">
											<div class="menu-footer"
												data-xf-init="inline-mod"
												data-type="thread"
												data-href="{{ link('inline-mod') }}"
												data-toggle=".js-threadInlineModToggle">
												<xf:checkbox>
													<xf:option class="js-threadInlineModToggle" value="{$thread.thread_id}">{{ phrase('select_for_moderation') }}</xf:option>
												</xf:checkbox>
											</div>
										</xf:if>
										<!--[XF:thread_tools_menu:bottom]-->
									</xf:contentcheck>
								</div>
							</div>
						</div>
					</xf:if>
				</xf:contentcheck>
				</div>
			</div>
		</xf:if>
	</xf:trim></div>

	<div class="block-outer js-threadStatusField"><xf:trim>
		<xf:if contentcheck="true">
			<div class="blockStatus blockStatus--info">
				<xf:contentcheck>
					<xf:macro template="custom_fields_macros" name="custom_fields_view"
						arg-type="threads"
						arg-group="thread_status"
						arg-onlyInclude="{$forum.field_cache}"
						arg-set="{$thread.custom_fields}"
						arg-wrapperClass="blockStatus-message" />
				</xf:contentcheck>
			</div>
		</xf:if>
	</xf:trim></div>

	<div class="block-container lbContainer"
		data-xf-init="lightbox{{ $xf.options.selectQuotable ? ' select-to-quote' : '' }}"
		data-message-selector=".js-post"
		data-lb-id="thread-{$thread.thread_id}"
		data-lb-universal="{$xf.options.lightBoxUniversal}">

		<div class="block-body js-replyNewMessageContainer">
			<xf:foreach loop="$posts" value="$post">
				<xf:if is="$post.message_state == 'deleted'">
					<xf:macro template="post_macros" name="post_deleted"
						arg-post="{$post}"
						arg-thread="{$thread}" />
				<xf:else />
					<xf:macro template="post_macros" name="post"
						arg-post="{$post}"
						arg-thread="{$thread}" />
				</xf:if>
			</xf:foreach>
		</div>
	</div>

	<xf:if contentcheck="true">
		<div class="block-outer block-outer--after">
			<xf:contentcheck>
				<xf:pagenav
					page="{$page}" perpage="{$perPage}" total="{{ $thread.reply_count + 1 }}"
					link="threads" data="{$thread}"
					wrapperclass="block-outer-main" />
				<xf:showignored wrapperclass="block-outer-opposite" />
				<xf:if is="!$thread.canReply() AND $thread.discussion_state == 'visible' AND $thread.discussion_open">
					<div class="block-outer-opposite">
						<xf:if is="$xf.visitor.user_id">
							<span class="button is-disabled">
								{{ phrase('no_permission_to_reply') }}
								<!-- this is not interactive so shouldn't be a button element -->
							</span>
						<xf:else />
							<xf:button href="{{ link('login') }}" class="button--link" overlay="true">
								{{ phrase('log_in_or_register_to_reply') }}
							</xf:button>
						</xf:if>
					</div>
				</xf:if>
			</xf:contentcheck>
		</div>
	</xf:if>

	<xf:macro name="thread_status" arg-thread="{$thread}" arg-wrapperClass="block-outer block-outer--after" />
</div>

<xf:ad position="thread_view_below_messages" arg-thread="{$thread}" />

<xf:if is="$thread.canReply()">
	<xf:form action="{{ link('threads/add-reply', $thread) }}"
		ajax="true"
		draft="{{ link('threads/draft', $thread) }}"
		class="block js-quickReply"
		data-xf-init="attachment-manager quick-reply{{ $xf.visitor.isShownCaptcha() ? ' guest-captcha' : '' }}"
		data-message-container="div[data-type='post'] .js-replyNewMessageContainer"
		data-preview-url="{{ link('threads/reply-preview', $thread, {'quick_reply': 1}) }}">

		<xf:js src="xf/message.js" min="1" />
		<xf:set var="$lastPost" value="{$posts|last}" />

		<div class="block-container">
			<div class="block-body">
				<xf:macro template="quick_reply_macros" name="body"
					arg-message="{$thread.draft_reply.message}"
					arg-attachmentData="{$attachmentData}"
					arg-forceHash="{$thread.draft_reply.attachment_hash}"
					arg-messageSelector=".js-post"
					arg-multiQuoteHref="{{ link('threads/multi-quote', $thread) }}"
					arg-multiQuoteStorageKey="multiQuoteThread"
					arg-lastDate="{$lastPost.post_date}"
					arg-lastKnownDate="{$thread.last_post_date}" />
			</div>
		</div>
	</xf:form>
</xf:if>

<div class="blockMessage blockMessage--none">
	<xf:macro template="share_page_macros" name="buttons" arg-iconic="{{ true }}" arg-label="{{ phrase('share:') }}" />
</div>

<xf:macro name="thread_status" arg-thread="!" arg-wrapperClass="">
	<xf:if contentcheck="true">
		<div class="{$wrapperClass}">
			<dl class="blockStatus">
				<dt>{{ phrase('status') }}</dt>
				<xf:contentcheck>
					<xf:if is="$thread.discussion_state == 'deleted'">
						<dd class="blockStatus-message blockStatus-message--deleted">
							<xf:macro template="deletion_macros" name="notice" arg-log="{$thread.DeletionLog}" />
						</dd>
					<xf:elseif is="$thread.discussion_state == 'moderated'" />
						<dd class="blockStatus-message blockStatus-message--moderated">
							{{ phrase('awaiting_approval_before_being_displayed_publicly') }}
						</dd>
					</xf:if>
					<xf:if is="!$thread.discussion_open">
						<dd class="blockStatus-message blockStatus-message--locked">
							{{ phrase('not_open_for_further_replies') }}
						</dd>
					</xf:if>
				</xf:contentcheck>
			</dl>
		</div>
	</xf:if>
</xf:macro>

<xf:widgetpos id="thread_view_sidebar" context-thread="{$thread}" position="sidebar" />]]></template>
    <template title="warning_info" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<xf:title>{{ phrase('warning_for_x', {'name': $user.username}) }}</xf:title>

<div class="form block">
	<div class="block-container">
		<div class="block-body">
			<xf:if is="$canViewContent">
				<xf:formrow label="{{ phrase('content') }}">
					<xf:if is="{$contentUrl}">
						<a href="{$contentUrl}">{$warning.display_title}</a>
					<xf:else />
						{$warning.display_title}
					</xf:if>
				</xf:formrow>
			</xf:if>

			<xf:formrow label="{{ phrase('given_by') }}">
				<ul class="listInline listInline--bullet">
					<li><xf:username rich="true" user="{$warning.WarnedBy}" /></li>
					<li><xf:date time="{$warning.warning_date}" /></li>
				</ul>
			</xf:formrow>

			<xf:formrow label="{{ phrase('details_of_warning') }}">
				{$warning.title}
				<xf:if is="{$warning.notes}"><div class="u-muted">{{ structured_text($warning.notes) }}</div></xf:if>
			</xf:formrow>

			<xf:formrow label="{{ phrase('warning_points') }}">
				{$warning.points|number}
				<xf:if is="$warning.is_expired">
					<span class="u-muted">{{ phrase('(expired)') }}</span>
				<xf:elseif is="$warning.expiry_date" />
					<span class="u-muted">{{ phrase('(expires_x)', {'date': date($warning.expiry_date)}) }}</span>
				</xf:if>
			</xf:formrow>
		</div>
		<xf:if is="$warning.canDelete() AND $warning.canEditExpiry()">
			<h2 class="block-tabHeader tabs" data-xf-init="tabs" role="tablist">
				<a class="tabs-tab is-active" role="tab" tabindex="0" aria-controls="{{ unique_id('warningDelete') }}">{{ phrase('delete_warning') }}</a>
				<a class="tabs-tab is-active" role="tab" tabindex="0" aria-controls="{{ unique_id('warningUpdate') }}">{{ phrase('update_warning') }}</a>
			</h2>
			<ul class="tabPanes">
				<li class="is-active" role="tabpanel" id="{{ unique_id('warningDelete') }}">
					<xf:macro name="delete" arg-warning="{$warning}" />
				</li>
				<li role="tabpanel" id="{{ unique_id('warningUpdate') }}">
					<xf:macro name="expire" arg-warning="{$warning}" />
				</li>
			</ul>
		<xf:elseif is="$warning.canDelete()" />
			<xf:macro name="delete" arg-warning="{$warning}" />
		<xf:elseif is="$warning.canEditExpiry()" />
			<xf:macro name="expire" arg-warning="{$warning}" />
		</xf:if>
	</div>
</div>

<xf:macro name="delete" arg-warning="!" arg-redirect="">
	<xf:form action="{{ link('warnings/delete', $warning) }}">
		<xf:checkboxrow>
			<xf:option name="confirm" value="1">{{ phrase('confirm_deletion') }}</xf:option>
		</xf:checkboxrow>
		<xf:submitrow icon="delete" />
		<xf:redirect url="{$redirect}" />
	</xf:form>
</xf:macro>

<xf:macro name="expire" arg-warning="!" arg-redirect="">
	<xf:form action="{{ link('warnings/expire', $warning) }}">
		<xf:radiorow name="expire" value="now">
			<xf:option value="now">{{ phrase('expire_now') }}</xf:option>
			<xf:option value="future" label="{{ phrase('expire_in_time:') }}">
				<xf:dependent>
					<div class="inputGroup">
						<xf:numberbox name="expiry_value" value="1" min="0" />
						<span class="inputGroup-splitter"></span>
						<xf:select name="expiry_unit" value="days" class="input--inline">
							<xf:option value="days">{{ phrase('days') }}</xf:option>
							<xf:option value="weeks">{{ phrase('weeks') }}</xf:option>
							<xf:option value="months">{{ phrase('months') }}</xf:option>
							<xf:option value="years">{{ phrase('years') }}</xf:option>
						</xf:select>
					</div>
				</xf:dependent>
			</xf:option>
		</xf:radiorow>
		<xf:submitrow icon="save" />
		<xf:redirect url="{$redirect}" />
	</xf:form>
</xf:macro>]]></template>
    <template title="watched_threads_list" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[<xf:title page="{$page}">{{ phrase('watched_threads') }}</xf:title>

<xf:if is="$threads is not empty">
	<xf:form action="{{ link('watched/threads/update') }}" ajax="true" class="block" autocomplete="off">
		<div class="block-outer">
			<xf:pagenav
				page="{$page}" perpage="{$perPage}" total="{$total}"
				link="watched/threads"
				wrapperclass="block-outer-main" />
			<div class="block-outer-opposite">
				<xf:button class="button--link menuTrigger" data-xf-click="menu" aria-expanded="false" aria-haspopup="true">{{ phrase('manage_watched_threads') }}</xf:button>
				<div class="menu" data-menu="menu" aria-hidden="true">
					<div class="menu-content">
						<h3 class="menu-header">{{ phrase('manage_watched_threads') }}</h3>
						<!--[XF:manage_menu:top]-->
						<a href="{{ link('watched/threads/manage', null, {'state': 'watch_no_email'}) }}" data-xf-click="overlay" class="menu-linkRow">{{ phrase('disable_email_notification') }}</a>
						<a href="{{ link('watched/threads/manage', null, {'state': 'delete'}) }}" data-xf-click="overlay" class="menu-linkRow">{{ phrase('stop_watching_threads') }}</a>
						<!--[XF:manage_menu:bottom]-->
					</div>
				</div>
			</div>
		</div>

		<div class="block-container">
			<div class="block-body">
				<div class="structItemContainer">
					<xf:foreach loop="$threads" value="$thread">
						<xf:set var="$extra" value="{{ {$thread.Watch.{$xf.visitor.user_id}.email_subscribe} ? phrase('email') : '' }}" />
						<xf:macro template="thread_list_macros" name="item"
							arg-thread="{$thread}"
							arg-chooseName="thread_ids"
							arg-showWatched="{{ false }}"
							arg-extraInfo="{$extra}"
							arg-allowEdit="{{ false }}" />
					</xf:foreach>
				</div>
			</div>
			<div class="block-footer block-footer--split">
				<span class="block-footer-counter"></span>
				<span class="block-footer-select"><xf:checkbox standalone="true"><xf:option check-all="< .block-container" label="{{ phrase('select_all') }}" /></xf:checkbox></span>
				<span class="block-footer-controls">
						<xf:select name="state" class="input--inline">
						<xf:option style="color:black" > {{ phrase('with_selected...') }}</xf:option>
						<!--[XF:action_menu:top]-->
							<xf:option style="color:black" value="watch_email">{{ phrase('enable_email_notification') }}</xf:option>
							<xf:option style="color:black" value="watch_no_email">{{ phrase('disable_email_notification') }}</xf:option>
							<xf:option style="color:black" value="delete">{{ phrase('stop_watching') }}</xf:option>
						<!--[XF:action_menu:bottom]-->
					</xf:select>
					<xf:button type="submit">{{ phrase('go') }}</xf:button>
				</span>
			</div>
		</div>

		<xf:pagenav link="watched/threads" page="{$page}" perpage="{$perPage}" total="{$total}"
			wrapperclass="block-outer block-outer--after" />

		<xf:showignored wrapperclass="block-outer block-outer-opposite block-outer--after" />
	</xf:form>
<xf:else />
	<div class="blockMessage">
		<xf:if is="$page > 1">
			{{ phrase('there_no_threads_to_display') }}
		<xf:else />
			<p>{{ phrase('you_not_watching_any_threads') }}</p>
			<div>{{ phrase('show_all:') }}</div>
			<ul>
				<li><a href="{{ link('find-threads/started') }}">{{ phrase('threads_youve_started') }}</a></li>
				<li><a href="{{ link('find-threads/contributed') }}">{{ phrase('threads_in_which_youve_participated') }}</a></li>
			</ul>
		</xf:if>
	</div>
</xf:if>]]></template>
    <template title="widget_forum_statistics" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<div class="block"{{ widget_data($widget) }}>
	<div class="block-container">
		<h3 class="block-minorHeader">{$title}</h3>
		<div class="block-body block-row">
			<dl class="pairs pairs--justified">
				<dt>{{ phrase('threads') }}</dt>
				<dd>{$forumStatistics.threads|number}</dd>
			</dl>

			<dl class="pairs pairs--justified">
				<dt>{{ phrase('messages') }}</dt>
				<dd>{$forumStatistics.messages|number}</dd>
			</dl>

			<dl class="pairs pairs--justified">
				<dt>{{ phrase('members') }}</dt>
				<dd>{$forumStatistics.users|number}</dd>
			</dl>

			<dl class="pairs pairs--justified">
				<dt>{{ phrase('latest_member') }}</dt>
				<dd><xf:username user="{$forumStatistics.latestUser}" rich="true" /></dd>
			</dl>
		</div>
	</div>
</div>]]></template>
    <template title="widget_members_online" type="public" addon_id="XF" version_id="2010370" version_string="2.1.3"><![CDATA[<xf:if is="$options.staffOnline">
	<xf:if contentcheck="true">
		<div class="block" data-widget-section="staffMembers"{{ widget_data($widget) }}>
			<div class="block-container">
				<h3 class="block-minorHeader"><a href="{{ link('members', null, {'key': 'staff_members'}) }}">{{ phrase('staff_online') }}</a></h3>
				<ul class="block-body">
				<xf:contentcheck>
					<xf:foreach loop="$online.users" value="$user">
						<xf:if is="$user.is_staff">
							<li class="block-row">
								<div class="contentRow">
									<div class="contentRow-figure">
										<xf:avatar user="$user" size="xs" />
									</div>
									<div class="contentRow-main contentRow-main--close">
										<xf:username user="$user" rich="true" />
										<div class="contentRow-minor">
											<xf:usertitle user="$user" />
										</div>
									</div>
								</div>
							</li>
						</xf:if>
					</xf:foreach>
				</xf:contentcheck>
				</ul>
			</div>
		</div>
	</xf:if>
</xf:if>

<div class="block" data-widget-section="onlineNow"{{ widget_data($widget) }}>
	<div class="block-container">
		<h3 class="block-minorHeader"><a href="{{ link('online') }}">{$title}</a></h3>
		<div class="block-body">
			<xf:if contentcheck="true">
				<div class="block-row block-row--minor">
					<h4 class="block-textHeader block-textHeader--scaled">
						{{ phrase('people_you_follow') }}
					</h4>
					<ul class="listHeap">
						<xf:contentcheck>
							<xf:if is="$options.followedOnline">
								<xf:foreach loop="$online.users" value="$user">
									<xf:if is="in_array($user.user_id, $xf.visitor.Profile.following)">
										<li>
											<xf:avatar user="$user" size="xxs" img="true" />
										</li>
									</xf:if>
								</xf:foreach>
							</xf:if>
						</xf:contentcheck>
					</ul>
				</div>

				<div class="block-row block-row--minor">
					<h4 class="block-textHeader block-textHeader--scaled">
						{{ phrase('members') }}
					</h4>
			<xf:else />
				<div class="block-row block-row--minor">
			</xf:if>

				<xf:if is="$online.users is not empty">
					<ul class="listInline listInline--comma">
						<xf:foreach loop="$online.users" value="$user"><xf:trim>
							<li><xf:username user="$user" rich="true" class="{{ !$user.visible ? '' : '' }}" /></li>
						</xf:trim></xf:foreach>
					</ul>
					<xf:if is="$online.counts.unseen">
						<a href="{{ link('online') }}">{{ phrase('ellipsis_and_x_more', {'count': $online.counts.unseen}) }}</a>
					</xf:if>
				<xf:else />
					{{ phrase('no_members_online_now') }}
				</xf:if>
			</div>
		</div>
		<div class="block-footer">
			<span class="block-footer-counter">{{ phrase('online_now_x_members_y_guests_z',{
				'total': number($online.counts.total),
				'members': number($online.counts.members),
				'guests': number($online.counts.guests)})
			}}</span>
		</div>
	</div>
</div>]]></template>
    <template title="widget_new_threads" type="public" addon_id="XF" version_id="2010470" version_string="2.1.4"><![CDATA[<xf:if is="$threads is not empty">
	<xf:if is="$style != 'expanded'">
		<div class="block"{{ widget_data($widget) }}>
			<div class="block-container">
				<xf:if is="$style == 'full'">
					<h3 class="block-header">
						<a href="{$link}" rel="nofollow">{$title}</a>
					</h3>
					<div class="block-body">
						<div class="structItemContainer">
							<xf:foreach loop="$threads" value="$thread">
								<xf:macro template="thread_list_macros" name="item"
									arg-allowInlineMod="{{ false }}"
									arg-thread="{$thread}" />
							</xf:foreach>
						</div>
					</div>
				<xf:else />
					<h3 class="block-minorHeader">
						<a href="{$link}" rel="nofollow">{$title}</a>
					</h3>
					<ul class="block-body">
						<xf:foreach loop="$threads" value="$thread">
							<li class="block-row">
								<xf:macro template="thread_list_macros" name="item_new_threads"
									arg-thread="{$thread}" />
							</li>
						</xf:foreach>
					</ul>
				</xf:if>
			</div>
		</div>
	<xf:else />
		<xf:css src="message.less" />

		<div class="blocks">
			<xf:if is="$showExpandedTitle">
				<h2 class="blocks-header">
					{$title}
				</h2>
			</xf:if>

			<xf:foreach loop="$threads" value="$thread">
				<xf:set var="$post" value="{$thread.FirstPost}" />

				<div class="block">
					<div class="block-container"
						data-xf-init="lightbox">

						<h4 class="block-header">
							<a href="{{ link('threads', $thread) }}">{$thread.title}</a>
						</h4>
						<div class="block-body">
							<div class="message message--post">
								<div class="message-inner">
									<div class="message-cell message-cell--main">
										<div class="message-content js-messageContent">
											<header class="message-attribution">
												<ul class="listInline listInline--bullet u-muted">
													<li><xf:username user="{$thread.User}" rich="true" defaultname="{$thread.username}" /></li>
													<li><xf:date time="{$post.post_date}" /></li>
													<li><a href="{{ link('forums', $thread.Forum) }}">{$thread.Forum.title}</a></li>
													<li>{{ phrase('replies:') }} {$thread.reply_count|number}</li>
												</ul>
											</header>
											<div class="message-userContent lbContainer js-lbContainer"
												data-lb-id="post-{$post.post_id}"
												data-lb-caption-desc="{{ $post.User ? $post.User.username : $post.username }} &middot; {{ date_time($post.post_date) }}">

												<article class="message-body">
													{{ bb_code($post.message, 'post', $post) }}
												</article>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</xf:foreach>
		</div>
	</xf:if>
</xf:if>]]></template>
  </templates>
  <properties>
    <group group_name="dohthemebasic" title="[DohTheme] --&gt; Basic options" description="General settings that control the theme overall." display_order="10" addon_id=""/>
    <group group_name="dohthemeheader" title="[DohTheme] --&gt; Header and navigation" description="Generic header specific settings." display_order="20" addon_id=""/>
    <group group_name="dohthemeforum" title="[DohTheme] --&gt; Node/forum list" description="Controls the display and properties of the categories and other node types." display_order="30" addon_id=""/>
    <group group_name="sidebaroptions" title="[DohTheme] --&gt; Sidebar" description="Properties for sidebar collapse, icons, etc." display_order="40" addon_id=""/>
    <group group_name="dohthemeds" title="[DohTheme] --&gt; Discussion List" description="Control on the appearance of the list of discussions within a forum." display_order="50" addon_id=""/>
    <group group_name="threadoptions" title="[DohTheme] --&gt; Messages" description="Thread list styling, post styles, and post settings." display_order="60" addon_id=""/>
    <group group_name="dohthemefooter" title="[DohTheme] --&gt; Extra Footer" description="Show footer columns and also general footer settings." display_order="70" addon_id=""/>
    <group group_name="dohthemeglyphs" title="[DohTheme] --&gt; Icons" description="Settings for the main icon font for the theme." display_order="80" addon_id=""/>
    <property property_name="avatarBorderRadius" group_name="avatar" title="Avatar border radius" description="Controls the size of the rounded corners on avatars - a sufficiently large value will make avatars circular" property_type="value" value_type="unit" depends_on="" value_group="" display_order="200" addon_id="XF">
      <value>"60%"</value>
    </property>
    <property property_name="avatarDefaultImage" group_name="avatar" title="Default avatar image URL" description="The image URL specified here will be used as the image within the default avatar. Only applies if the &quot;Image&quot; type is selected above." property_type="value" value_type="string" depends_on="" value_group="" display_order="800" addon_id="XF">
      <value>"https://forum.namalsk-rp.ru/img/favico.png"</value>
    </property>
    <property property_name="avatarDefaultType" group_name="avatar" title="Default avatar type" description="Controls whether the default avatar is text or image based. Unless disabled in the options, default avatars will be dynamically generated based on the user's name." property_type="value" value_type="radio" depends_on="" value_group="" display_order="600" addon_id="XF">
      <value_parameters>text={{ phrase('text') }}
image={{ phrase('image') }}</value_parameters>
      <value>"image"</value>
    </property>
    <property property_name="badgeHighlighted" group_name="misc" title="Badge - highlighted" description="Highlighted badges grab the viewer's attention more and tend to indicate new items to be reviewed" property_type="css" value_type="" depends_on="" value_group="" display_order="20100" css_components="text,background,border,extra" addon_id="XF">
      <value>{
    "color": "white",
    "background-color": "rgb(210, 72, 72)"
}</value>
    </property>
    <property property_name="bbCodeBlock" group_name="bbCode" title="BB code blocks" description="All BB code blocks within messages make use of these styling rules" property_type="css" value_type="" depends_on="" value_group="" display_order="20000" css_components="text,background,border,border_radius,extra" addon_id="XF">
      <value>{
    "background-color": "@xf-contentAltBg",
    "border-width": "@xf-borderSize",
    "border-color": "@xf-borderColor",
    "border-left-width": "@xf-borderSizeFeature",
    "border-left-color": "@xf-paletteAccent1"
}</value>
    </property>
    <property property_name="bbCodeBlockTitle" group_name="bbCode" title="BB code blocks - title" description="Styles the title section of BB code blocks within messages" property_type="css" value_type="" depends_on="" value_group="" display_order="20100" css_components="text,background,border,extra" addon_id="XF">
      <value>{
    "font-size": "@xf-fontSizeSmall",
    "color": "@xf-paletteAccent1",
    "background-color": "xf-diminish(@xf-contentAltBg, 2%)"
}</value>
    </property>
    <property property_name="blockBorder" group_name="block" title="Block border framework" description="Virtually all blocks have their borders styled with these settings" property_type="css" value_type="" depends_on="" value_group="" display_order="20000" css_components="border,extra" addon_id="XF">
      <value>{
    "border-width": "@xf-borderSize",
    "border-color": "@xf-borderColor"
}</value>
    </property>
    <property property_name="blockFilterBar" group_name="block" title="Block filter bar" description="When the content of a block can be filtered, the controls to do so are styled here" property_type="css" value_type="" depends_on="" value_group="" display_order="20800" css_components="text,background,border,extra" addon_id="XF">
      <value>{
    "font-size": "@xf-fontSizeSmall",
    "color": "@xf-paletteAccent1",
    "background-color": "@xf-paletteAccent2",
    "extra": "text-transform: uppercase;\npadding: @xf-paddingLarge;"
}</value>
    </property>
    <property property_name="blockFooter" group_name="block" title="Block footer" description="When information needs to be conveyed in a footer element for a block, its style is controlled here" property_type="css" value_type="" depends_on="" value_group="" display_order="21200" css_components="text,background,border,extra" addon_id="XF">
      <value>{
    "font-size": "@xf-fontSizeSmaller",
    "color": "@xf-textColorDimmed",
    "background-color": "rgb(66, 70, 73)",
    "border-top-width": "@xf-borderSize",
    "border-top-color": "@xf-borderColor"
}</value>
    </property>
    <property property_name="blockFooterBg" group_name="color" title="Block footer background color" description="" property_type="value" value_type="color" depends_on="" value_group="blockFooter" display_order="7100" addon_id="XF">
      <value>"@xf-contentAltBg"</value>
    </property>
    <property property_name="blockHeader" group_name="block" title="Block header" description="Blocks often have title bars at their tops, which are styled here" property_type="css" value_type="" depends_on="" value_group="" display_order="20100" css_components="text,background,border,extra" addon_id="XF">
      <value>{
    "font-size": "@xf-fontSizeLarge",
    "color": "@xf-linkColor",
    "background-color": "rgb(66, 70, 73)",
    "extra": "text-transform: uppercase;"
}</value>
    </property>
    <property property_name="blockLinkSelected" group_name="misc" title="Block link - selected" description="Styling for block-type links when in their selected state" property_type="css" value_type="" depends_on="" value_group="" display_order="21000" css_components="text,background,border_width_simple,border_color_simple,extra" addon_id="XF">
      <value>{
    "background-color": "@xf-paletteColor2",
    "border-width": "@xf-borderSizeFeature",
    "border-color": "@xf-paletteColor1"
}</value>
    </property>
    <property property_name="blockMinorHeader" group_name="block" title="Block minor header" description="Sub-headings in blocks use these settings" property_type="css" value_type="" depends_on="" value_group="" display_order="20400" css_components="text,background,border,extra" addon_id="XF">
      <value>{
    "font-size": "@xf-fontSizeNormal",
    "color": "@xf-paletteAccent1",
    "background-color": "@xf-paletteAccent2",
    "extra": "text-transform: uppercase;"
}</value>
    </property>
    <property property_name="blockTabHeader" group_name="block" title="Block tab header" description="Occasionally, blocks will have multi-part, tab headers, styled with these settings" property_type="css" value_type="" depends_on="" value_group="" display_order="20200" css_components="text,background,border,extra" addon_id="XF">
      <value>{
    "font-size": "@xf-fontSizeNormal",
    "color": "@xf-textColor",
    "background-color": "@xf-paletteColor5",
    "border-bottom-width": "@xf-borderSize",
    "border-bottom-color": "@xf-borderColor"
}</value>
    </property>
    <property property_name="blockTabHeaderBg" group_name="color" title="Block tab header background color" description="" property_type="value" value_type="color" depends_on="" value_group="blockTabHeader" display_order="6500" addon_id="XF">
      <value>"#378ae7"</value>
    </property>
    <property property_name="blockTabHeaderSelected" group_name="block" title="Block tab header - selected tab" description="The selected tab in multi-part headers takes additional styling from here" property_type="css" value_type="" depends_on="" value_group="" display_order="20300" css_components="text,background,border_color_simple,extra" addon_id="XF">
      <value>{
    "color": "@xf-paletteAccent1",
    "border-color": "@xf-paletteAccent1"
}</value>
    </property>
    <property property_name="blockTabHeaderTextColor" group_name="color" title="Block tab header text color" description="" property_type="value" value_type="color" depends_on="" value_group="blockTabHeader" display_order="6600" addon_id="XF">
      <value>"@xf-textColorMuted"</value>
    </property>
    <property property_name="borderColor" group_name="color" title="Border color" description="Structural borders around blocks of content generally use this color" property_type="value" value_type="color" depends_on="" value_group="borderBasic" display_order="4000" addon_id="XF">
      <value>"@xf-paletteColor4"</value>
    </property>
    <property property_name="borderColorAccentContent" group_name="color" title="Accent content border color" description="" property_type="value" value_type="color" depends_on="" value_group="borderOther" display_order="5200" addon_id="XF">
      <value>"@xf-contentAccentBg"</value>
    </property>
    <property property_name="borderColorAttention" group_name="color" title="Attention-grabbing border color" description="" property_type="value" value_type="color" depends_on="" value_group="borderOther" display_order="5300" addon_id="XF">
      <value>"@xf-paletteColor4"</value>
    </property>
    <property property_name="borderColorFaint" group_name="color" title="Faint border color" description="" property_type="value" value_type="color" depends_on="" value_group="borderBasic" display_order="4100" addon_id="XF">
      <value>"xf-diminish(@xf-borderColor, 6%)"</value>
    </property>
    <property property_name="borderColorFeature" group_name="color" title="Feature border color" description="" property_type="value" value_type="color" depends_on="" value_group="borderOther" display_order="5100" addon_id="XF">
      <value>"#378ae7"</value>
    </property>
    <property property_name="borderColorHeavy" group_name="color" title="Heavy border color" description="" property_type="value" value_type="color" depends_on="" value_group="borderBasic" display_order="4300" addon_id="XF">
      <value>"xf-intensify(@xf-borderColor, 5%)"</value>
    </property>
    <property property_name="borderColorHighlight" group_name="color" title="Highlight border color" description="" property_type="value" value_type="color" depends_on="" value_group="borderOther" display_order="5000" addon_id="XF">
      <value>"@xf-paletteColor2"</value>
    </property>
    <property property_name="borderColorLight" group_name="color" title="Light border color" description="" property_type="value" value_type="color" depends_on="" value_group="borderBasic" display_order="4200" addon_id="XF">
      <value>"rgba(255, 255, 255, 0.12)"</value>
    </property>
    <property property_name="buttonBase" group_name="button" title="Button base" description="Defines the styling for the basic elements that are common to all text-based buttons" property_type="css" value_type="" depends_on="" value_group="" display_order="20000" css_components="text,border_radius,padding,extra" addon_id="XF">
      <value>{
    "font-size": "@xf-fontSizeSmall",
    "border-radius": "30px",
    "padding-top": "@xf-paddingLarge",
    "padding-right": "@xf-paddingLargest",
    "padding-bottom": "@xf-paddingLarge",
    "padding-left": "@xf-paddingLargest",
    "extra": "text-align: center;\nborder: none;"
}</value>
    </property>
    <property property_name="buttonBg" group_name="color" title="Default button background color" description="" property_type="value" value_type="color" depends_on="" value_group="buttons" display_order="8200" addon_id="XF">
      <value>"@xf-paletteColor4"</value>
    </property>
    <property property_name="buttonCta" group_name="button" title="Button - call to action" description="Call to action buttons sit alone and invite the user to do something, like post a new thread" property_type="css" value_type="" depends_on="" value_group="" display_order="20300" css_components="text,background,extra" addon_id="XF">
      <value>{
    "color": "@xf-contentBg",
    "background-color": "@xf-paletteAccent1"
}</value>
    </property>
    <property property_name="buttonCtaBg" group_name="color" title="Call-to-action button background" description="" property_type="value" value_type="color" depends_on="" value_group="buttons" display_order="8400" addon_id="XF">
      <value>"@xf-paletteAccent2"</value>
    </property>
    <property property_name="buttonDefault" group_name="button" title="Button - default" description="Most buttons use this styling, except for primary form submit buttons" property_type="css" value_type="" depends_on="" value_group="" display_order="20100" css_components="text,background,extra" addon_id="XF">
      <value>{
    "color": "@xf-textColorEmphasized",
    "background-color": "@xf-paletteColor1"
}</value>
    </property>
    <property property_name="buttonPrimary" group_name="button" title="Button - primary" description="These rules are used mostly for the main submit button for forms" property_type="css" value_type="" depends_on="" value_group="" display_order="20200" css_components="text,background,extra" addon_id="XF">
      <value>{
    "color": "@xf-textColorEmphasized",
    "background-color": "@xf-paletteColor2",
    "extra": "min-width: 80px;"
}</value>
    </property>
    <property property_name="buttonPrimaryBg" group_name="color" title="Primary button background color" description="" property_type="value" value_type="color" depends_on="" value_group="buttons" display_order="8300" addon_id="XF">
      <value>"#378ae7"</value>
    </property>
    <property property_name="buttonTextColor" group_name="color" title="Default button text color" description="" property_type="value" value_type="color" depends_on="" value_group="buttons" display_order="8100" addon_id="XF">
      <value>"#378ae7"</value>
    </property>
    <property property_name="chromeBg" group_name="color" title="Page chrome background color" description="" property_type="value" value_type="color" depends_on="" value_group="chrome" display_order="6000" addon_id="XF">
      <value>"@xf-paletteColor5"</value>
    </property>
    <property property_name="chromeTextColor" group_name="color" title="Page chrome text color" description="" property_type="value" value_type="color" depends_on="" value_group="chrome" display_order="6050" addon_id="XF">
      <value>"#378ae7"</value>
    </property>
    <property property_name="contentAccentBg" group_name="color" title="Accented content background color" description="This background color is used for further differentiation from regular content" property_type="value" value_type="color" depends_on="" value_group="contentBackground" display_order="2400" addon_id="XF">
      <value>"#35393c"</value>
    </property>
    <property property_name="contentAltBase" group_name="content" title="Alternate content area base" description="When an alternative background needs to be presented along side the main content background, this will be employed" property_type="css" value_type="" depends_on="" value_group="" display_order="20100" css_components="text,background,extra" addon_id="XF">
      <value>{
    "color": "@xf-textColorDimmed",
    "background-color": "@xf-contentAltBg"
}</value>
    </property>
    <property property_name="contentAltBg" group_name="color" title="Alternate content background color" description="In order to differentiate it, some content will be presented on this alternative background" property_type="value" value_type="color" depends_on="" value_group="contentBackground" display_order="2200" addon_id="XF">
      <value>"@xf-paletteColor5"</value>
    </property>
    <property property_name="contentBg" group_name="color" title="Content background color" description="Most normal content will sit on this background" property_type="value" value_type="color" depends_on="" value_group="contentBackground" display_order="2000" addon_id="XF">
      <value>"@xf-paletteNeutral1"</value>
    </property>
    <property property_name="contentHighlightBase" group_name="content" title="Highlighted content area base" description="If an area of content is selected, for example a row in a table, its normal background will be substituted with this" property_type="css" value_type="" depends_on="" value_group="" display_order="20200" css_components="text,background,extra" addon_id="XF">
      <value>{
    "color": "@xf-textColorEmphasized",
    "background-color": "@xf-contentHighlightBg"
}</value>
    </property>
    <property property_name="contentHighlightBg" group_name="color" title="Highlighted content background color" description="When the standard background color is highlighted or selected, it will use this color" property_type="value" value_type="color" depends_on="" value_group="contentBackground" display_order="2300" addon_id="XF">
      <value>"#378ae7"</value>
    </property>
    <property property_name="dt_account_wrapper_glyphs" group_name="dohthemeglyphs" title="Account Wrapper Icons" description="Adds icons to tabs in account wrapper page when enabled." property_type="value" value_type="boolean" depends_on="" value_group="" display_order="100" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_alternative_nodes" group_name="dohthemeforum" title="Alternative Node Background" description="Sets the background color of even node items." property_type="value" value_type="color" depends_on="" value_group="Forum" display_order="30" addon_id="">
      <value>""</value>
    </property>
    <property property_name="dt_alternative_threads" group_name="dohthemeds" title="Alternative Thread Background" description="Set the background color of even discussion list items." property_type="value" value_type="color" depends_on="" value_group="General" display_order="30" addon_id="">
      <value>""</value>
    </property>
    <property property_name="dt_avatar_shape" group_name="dohthemebasic" title="Avatar Shape" description="Change small avatars around the forum to visually crop into a specific shape." property_type="value" value_type="select" depends_on="" value_group="Global" display_order="30" addon_id="">
      <value_parameters>option1=Default
option2=Circle
option3=Rhombus
option4=Pentagon
option5=Hexagon
option6=Heptagon
option7=Octagon
option8=Nonagon
option9=Bevel
option10=Rabbet</value_parameters>
      <value>"option2"</value>
    </property>
    <property property_name="dt_background_sticky_thread_css" group_name="dohthemeds" title="Sticky Threads" description="Styles the individual sticky threads." property_type="css" value_type="" depends_on="" value_group="" display_order="11" css_components="text,background,border,border_radius,padding,extra" addon_id="">
      <value>[]</value>
    </property>
    <property property_name="dt_breadbrumb_bottom" group_name="dohthemebasic" title="Remove Bottom Breadcrumb" description="Removes the breadcrumb at the bottom of the page." property_type="value" value_type="boolean" depends_on="" value_group="Global" display_order="70" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_breadbrumb_index" group_name="dohthemebasic" title="Remove Breadcrumb on Forum Index" description="This removes the breadcrumb for the forum list index page." property_type="value" value_type="boolean" depends_on="" value_group="ForumHome" display_order="80" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_breadbrumb_top" group_name="dohthemebasic" title="Remove Top Breadcrumb" description="Removes the breadcrumb at the top of the page." property_type="value" value_type="boolean" depends_on="" value_group="Global" display_order="60" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_cat_description" group_name="dohthemeforum" title="Category Description" description="Sets the tooltip display type." property_type="value" value_type="select" depends_on="" value_group="Forum" display_order="20" addon_id="">
      <value_parameters>option1=Default
option2=Hover Only
option3=Tooltip</value_parameters>
      <value>"option3"</value>
    </property>
    <property property_name="dt_catstrips_minorheader" group_name="dohthemeforum" title="Minor Header Under Category Strips" description="Displays a minor header under the category strips with sections info." property_type="value" value_type="boolean" depends_on="" value_group="Forum" display_order="18" addon_id="">
      <value>1</value>
    </property>
    <property property_name="dt_chrome_scrollbar" group_name="dohthemebasic" title="Custom Scrollbar (Chrome Only)" description="This allows us to modify the look of the browser's scrollbar based on theme's color palette." property_type="value" value_type="boolean" depends_on="" value_group="Global" display_order="40" addon_id="">
      <value>1</value>
    </property>
    <property property_name="dt_collapsible_categories" group_name="dohthemeforum" title="Enable Collapsible Category Nodes" description="Allows the user to collapse whole categories in the node list." property_type="value" value_type="boolean" depends_on="" value_group="Forum" display_order="10" addon_id="">
      <value>1</value>
    </property>
    <property property_name="dt_collapsible_extras" group_name="threadoptions" title="Collapsible User Extras" description="Adds a trigger to toggle the Postbit extra information open and closed (such as joined, messages, trophies, etc..)." property_type="value" value_type="boolean" depends_on="" value_group="MessageElements" display_order="50" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_collapsible_sidebar" group_name="sidebaroptions" title="Collapsible Sidebar" description="Allows you to collapse and expand the sidebar if it is enabled." property_type="value" value_type="boolean" depends_on="" value_group="Sidebar" display_order="30" addon_id="">
      <value>1</value>
    </property>
    <property property_name="dt_collapsible_sidebar_block" group_name="sidebaroptions" title="Collapsible Sidebar Block" description="Allows you to collapse and expand a sidebar block if it is enabled." property_type="value" value_type="boolean" depends_on="" value_group="Sidebar" display_order="40" addon_id="">
      <value>1</value>
    </property>
    <property property_name="dt_collpse_off_icon" group_name="dohthemeglyphs" title="Sidebar Toggle-Off" description="Unicode of the Icon." property_type="value" value_type="string" depends_on="dt_collapsible_sidebar" value_group="Sidebar" display_order="30" addon_id="">
      <value>"\"\\f204\""</value>
    </property>
    <property property_name="dt_collpse_on_icon" group_name="dohthemeglyphs" title="Sidebar Toggle-On" description="Unicode of the Icon." property_type="value" value_type="string" depends_on="dt_collapsible_sidebar" value_group="Sidebar" display_order="20" addon_id="">
      <value>"\"\\f205\""</value>
    </property>
    <property property_name="dt_condense_visito_tabs" group_name="dohthemeheader" title="Condense Visitor Tabs" description="Allows you to condense the visitor tabs. Links for the Alerts and Conversations are added to the user drop-down menu." property_type="value" value_type="boolean" depends_on="" value_group="Navisitor" display_order="40" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_disable_sidebar" group_name="sidebaroptions" title="Disable Sidebar" description="Tick in this checked box if you want to disable the sidebar at the forum." property_type="value" value_type="boolean" depends_on="" value_group="Sidebar" display_order="10" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_disable_tab_links" group_name="dohthemeheader" title="Remove Sub-navigation row" description="Allows you to remove the selected navigation sub-links." property_type="value" value_type="boolean" depends_on="" value_group="Navigation" display_order="90" addon_id="">
      <value>1</value>
    </property>
    <property property_name="dt_discussion_glyphs" group_name="dohthemeglyphs" title="Discussion List Icons" description="Adds icons next to username and date text." property_type="value" value_type="boolean" depends_on="" value_group="" display_order="80" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_discussion_online" group_name="dohthemeds" title="Online/Offline status indicator" description="This is an extension to display Online/Offline depending on the user's status." property_type="value" value_type="boolean" depends_on="" value_group="General" display_order="70" addon_id="">
      <value>1</value>
    </property>
    <property property_name="dt_editor_avatar" group_name="threadoptions" title="Hide Avatar Beside Editor" description="This removes the user's avatar from the Rich text editor." property_type="value" value_type="boolean" depends_on="" value_group="MessageLayout" display_order="40" addon_id="">
      <value>1</value>
    </property>
    <property property_name="dt_euicss" group_name="threadoptions" title="Show User Extras Info On Hover" description="As opposed to on click, hovering over the Postbit extra information will trigger the sliding effect." property_type="value" value_type="boolean" depends_on="" value_group="MessageElements" display_order="60" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_extra_footer" group_name="dohthemefooter" title="Enable Extra Footer" description="" property_type="value" value_type="boolean" depends_on="" value_group="" display_order="10" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_extra_footer_content_css" group_name="dohthemefooter" title="Extra Footer widget" description="Styles the widget block." property_type="css" value_type="" depends_on="" value_group="" display_order="100" css_components="text,background,border,border_radius,padding,extra" addon_id="">
      <value>{
    "color": "@xf-textColorEmphasized",
    "background-color": "@xf-contentBg",
    "extra": "border: none;\nborder-radius: 4px;"
}</value>
    </property>
    <property property_name="dt_extra_footer_css" group_name="dohthemefooter" title="Extra Footer body" description="Styles the body of the footer widgets." property_type="css" value_type="" depends_on="" value_group="" display_order="90" css_components="text,background,border,border_radius,padding,extra" addon_id="">
      <value>{
    "color": "@xf-textColorEmphasized",
    "background-color": "rgb(42, 46, 49)",
    "padding-top": "@xf-elementSpacer",
    "padding-bottom": "@xf-elementSpacer"
}</value>
    </property>
    <property property_name="dt_extra_footer_custom_html" group_name="dohthemefooter" title="Custom HTML Content" description="" property_type="value" value_type="string" depends_on="dt_extra_footer" value_group="dt_extra_footer_html" display_order="30" addon_id="">
      <value_parameters>rows=4</value_parameters>
      <value>""</value>
    </property>
    <property property_name="dt_extra_footer_custom_html_title" group_name="dohthemefooter" title="Custom HTML Title" description="" property_type="value" value_type="string" depends_on="" value_group="dt_extra_footer_html" display_order="25" addon_id="">
      <value>""</value>
    </property>
    <property property_name="dt_extra_footer_facebook" group_name="dohthemefooter" title="Facebook URL" description="" property_type="value" value_type="string" depends_on="" value_group="dt_extra_footer_social" display_order="56" addon_id="">
      <value>""</value>
    </property>
    <property property_name="dt_extra_footer_first_column" group_name="dohthemefooter" title="First Column Content" description="" property_type="value" value_type="select" depends_on="dt_extra_footer" value_group="" display_order="20" addon_id="">
      <value_parameters>option1=Members online
option2=Forum statistics
option3=Share this page
option4=Online statistics
option5=New profile posts
option6=New posts
option7=Newest members
option8=Social Links
option9=Custom HTML
option10=Links Column 1
option11=Links Column 2</value_parameters>
      <value>"option8"</value>
    </property>
    <property property_name="dt_extra_footer_fourth_column" group_name="dohthemefooter" title="Fourth Column Content" description="" property_type="value" value_type="select" depends_on="dt_extra_footer" value_group="" display_order="23" addon_id="">
      <value_parameters>option1=Members online
option2=Forum statistics
option3=Share this page
option4=Online statistics
option5=New profile posts
option6=New posts
option7=Newest members
option8=Social Links
option9=Custom HTML
option10=Links Column 1
option11=Links Column 2</value_parameters>
      <value>"option11"</value>
    </property>
    <property property_name="dt_extra_footer_index" group_name="dohthemefooter" title="Enable Extra Footer on Forum Index Only" description="" property_type="value" value_type="boolean" depends_on="" value_group="" display_order="15" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_extra_footer_instagram" group_name="dohthemefooter" title="Instagram URL" description="" property_type="value" value_type="string" depends_on="" value_group="dt_extra_footer_social" display_order="58" addon_id="">
      <value>""</value>
    </property>
    <property property_name="dt_extra_footer_link_1" group_name="dohthemefooter" title="Links Column 1" description="" property_type="value" value_type="string" depends_on="dt_extra_footer" value_group="dt_extra_footer_links" display_order="40" addon_id="">
      <value_parameters>rows=4</value_parameters>
      <value>""</value>
    </property>
    <property property_name="dt_extra_footer_link_1_title" group_name="dohthemefooter" title="Links Column 1 Title" description="" property_type="value" value_type="string" depends_on="dt_extra_footer" value_group="dt_extra_footer_links" display_order="35" addon_id="">
      <value>""</value>
    </property>
    <property property_name="dt_extra_footer_link_2" group_name="dohthemefooter" title="Links Column 2" description="" property_type="value" value_type="string" depends_on="dt_extra_footer" value_group="dt_extra_footer_links" display_order="50" addon_id="">
      <value_parameters>rows=4</value_parameters>
      <value>""</value>
    </property>
    <property property_name="dt_extra_footer_link_2_title" group_name="dohthemefooter" title="Links Column 2 Title" description="" property_type="value" value_type="string" depends_on="dt_extra_footer" value_group="dt_extra_footer_links" display_order="45" addon_id="">
      <value>""</value>
    </property>
    <property property_name="dt_extra_footer_link_css" group_name="dohthemefooter" title="Extra Footer links" description="Controls styling for individual links within the links columns." property_type="css" value_type="" depends_on="" value_group="" display_order="130" css_components="text,background,border,border_radius,padding,extra" addon_id="">
      <value>{
    "color": "@xf-textColorEmphasized",
    "padding-top": "2px",
    "padding-bottom": "2px"
}</value>
    </property>
    <property property_name="dt_extra_footer_second_column" group_name="dohthemefooter" title="Second Column Content" description="" property_type="value" value_type="select" depends_on="dt_extra_footer" value_group="" display_order="21" addon_id="">
      <value_parameters>option1=Members online
option2=Forum statistics
option3=Share this page
option4=Online statistics
option5=New profile posts
option6=New posts
option7=Newest members
option8=Social Links
option9=Custom HTML
option10=Links Column 1
option11=Links Column 2</value_parameters>
      <value>"option10"</value>
    </property>
    <property property_name="dt_extra_footer_social_title" group_name="dohthemefooter" title="Social Widget Title" description="" property_type="value" value_type="string" depends_on="" value_group="dt_extra_footer_social" display_order="55" addon_id="">
      <value>"\u041c\u044b \u0432 \u0441\u043e\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u0441\u0435\u0442\u044f\u0445"</value>
    </property>
    <property property_name="dt_extra_footer_third_column" group_name="dohthemefooter" title="Third Column Content" description="" property_type="value" value_type="select" depends_on="dt_extra_footer" value_group="" display_order="22" addon_id="">
      <value_parameters>option1=Members online
option2=Forum statistics
option3=Share this page
option4=Online statistics
option5=New profile posts
option6=New posts
option7=Newest members
option8=Social Links
option9=Custom HTML
option10=Links Column 1
option11=Links Column 2</value_parameters>
      <value>"option10"</value>
    </property>
    <property property_name="dt_extra_footer_title_css" group_name="dohthemefooter" title="Extra Footer widget header" description="Styles the heading block is footer widgets." property_type="css" value_type="" depends_on="" value_group="" display_order="120" css_components="text,background,border,border_radius,padding,extra" addon_id="">
      <value>{
    "font-size": "@xf-fontSizeNormal",
    "color": "@xf-textColorEmphasized",
    "font-weight": "@xf-fontWeightNormal",
    "background-color": "@xf-paletteAccent2",
    "padding": "@xf-paddingLarge",
    "extra": "text-transform: uppercase;\nborder-top-left-radius: 3px;\nborder-top-right-radius: 3px;\nmargin: 0;"
}</value>
    </property>
    <property property_name="dt_extra_footer_twitter" group_name="dohthemefooter" title="Twitter URL" description="" property_type="value" value_type="string" depends_on="" value_group="dt_extra_footer_social" display_order="57" addon_id="">
      <value>""</value>
    </property>
    <property property_name="dt_extra_footer_widgcont_css" group_name="dohthemefooter" title="Extra Footer widget content" description="Styles the content block is footer widgets." property_type="css" value_type="" depends_on="" value_group="" display_order="125" css_components="text,background,border,border_radius,padding,extra" addon_id="">
      <value>{
    "padding": "@xf-paddingLarge",
    "extra": "margin: 0;"
}</value>
    </property>
    <property property_name="dt_extra_footer_youtube" group_name="dohthemefooter" title="Youtube URL" description="" property_type="value" value_type="string" depends_on="" value_group="dt_extra_footer_social" display_order="59" addon_id="">
      <value>"UCqs6hgOzhUoaFSMrg7IN1Yg"</value>
    </property>
    <property property_name="dt_favicon" group_name="dohthemebasic" title="Favicon Path" description="The path to the small logo that is associated with bookmarks pointing to your site." property_type="value" value_type="string" depends_on="" value_group="Global" display_order="20" addon_id="">
      <value>"/img/favico.png"</value>
    </property>
    <property property_name="dt_files_path" group_name="dohthemebasic" title="Files Path" description="This sets the path to the themes main images directory. This will generally be &quot;styles/themeName.&quot; This is useful in case you later change where your main images directory is." property_type="value" value_type="string" depends_on="" value_group="Global" display_order="10" addon_id="">
      <value>"styles/sense"</value>
    </property>
    <property property_name="dt_firstpost_customization" group_name="threadoptions" title="First Post" description="Styles first post in the thread." property_type="css" value_type="" depends_on="" value_group="" display_order="50" css_components="text,background,border,border_radius,padding,extra" addon_id="">
      <value>[]</value>
    </property>
    <property property_name="dt_google_font" group_name="dohthemebasic" title="Google Font" description="Choose which fonts you wanted to be loaded from the Google Fonts API." property_type="value" value_type="string" depends_on="" value_group="Global" display_order="25" addon_id="">
      <value>"Muli:400,700"</value>
    </property>
    <property property_name="dt_guest_message" group_name="dohthemebasic" title="Enable Guest Message" description="Shows a welcome section to your visitors." property_type="value" value_type="boolean" depends_on="" value_group="GuestMessage" display_order="50" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_guest_message_content" group_name="dohthemebasic" title="Guest Message Content" description="" property_type="value" value_type="string" depends_on="dt_guest_message" value_group="GuestMessage" display_order="55" addon_id="">
      <value_parameters>rows=4</value_parameters>
      <value>"&lt;h1&gt;Welcome!&lt;/h1&gt;\n&lt;p&gt;By registering with us, you'll be able to discuss, share and private message with other members of our community.&lt;/p&gt;\n&lt;a href=\"index.php?register\" class=\"button--cta button button--icon button--icon--write\"&gt;&lt;span class=\"button-text\"&gt;\nSignUp Now!\n&lt;/span&gt;&lt;/a&gt;"</value>
    </property>
    <property property_name="dt_guest_message_css" group_name="dohthemebasic" title="Guest Message" description="Styles the wrapper around the guest message." property_type="css" value_type="" depends_on="" value_group="" display_order="52" css_components="text,background,border,border_radius,padding,extra" addon_id="">
      <value>{
    "background-color": "@xf-contentBg",
    "border-width": "@xf-borderSize",
    "border-color": "@xf-borderColorFaint",
    "border-radius": "4px",
    "padding": "20px",
    "extra": "width: 100%;\nmargin: 15px auto 30px;"
}</value>
    </property>
    <property property_name="dt_guest_message_index" group_name="dohthemebasic" title="Enable Guest Message on Forum Index Only" description="Enabling this setting shows the guest message only in the forum list." property_type="value" value_type="boolean" depends_on="dt_guest_message" value_group="GuestMessage" display_order="51" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_hb_nodes" group_name="dohthemeforum" title="Hover Background on Nodes" description="Sets the background color of node items on hover." property_type="value" value_type="color" depends_on="" value_group="Forum" display_order="40" addon_id="">
      <value>""</value>
    </property>
    <property property_name="dt_hb_threads" group_name="dohthemeds" title="Hover Background on Threads" description="Set the background color of discussion list items on hover." property_type="value" value_type="color" depends_on="" value_group="General" display_order="40" addon_id="">
      <value>""</value>
    </property>
    <property property_name="dt_he_nodes" group_name="dohthemeforum" title="Hover Effect on Nodes" description="This will enable a hover effect for nodes." property_type="value" value_type="boolean" depends_on="" value_group="Forum" display_order="50" addon_id="">
      <value>1</value>
    </property>
    <property property_name="dt_he_threads" group_name="dohthemeds" title="Hover Effect on Threads" description="This will enable a hover effect for discussion list threads." property_type="value" value_type="boolean" depends_on="" value_group="General" display_order="50" addon_id="">
      <value>1</value>
    </property>
    <property property_name="dt_inline_ballons" group_name="dohthemeheader" title="Inline Navigation Alert Balloons" description="Instead of displaying like a balloon, alerts will display inline with the text." property_type="value" value_type="boolean" depends_on="" value_group="Navisitor" display_order="50" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_link_node_icon" group_name="dohthemeglyphs" title="Link Node Icon" description="Name of Fontawesome Icon." property_type="value" value_type="string" depends_on="" value_group="glyphs_nodes" display_order="37" addon_id="">
      <value>"link"</value>
    </property>
    <property property_name="dt_logo_max_height" group_name="dohthemeheader" title="Logo Maximum Height" description="The pixel value of the maximum height of the logo." property_type="value" value_type="unit" depends_on="" value_group="Header" display_order="18" addon_id="">
      <value>"150%"</value>
    </property>
    <property property_name="dt_logo_max_width" group_name="dohthemeheader" title="Logo Maximum Width" description="The pixel value of the maximum width of the logo." property_type="value" value_type="unit" depends_on="" value_group="Header" display_order="15" addon_id="">
      <value>"150%"</value>
    </property>
    <property property_name="dt_messages_glyphs" group_name="dohthemeglyphs" title="Message Action Bar Icons" description="Adds icons next to the Action Bar text (such as Report, Edit, Delete, etc..)." property_type="value" value_type="boolean" depends_on="" value_group="" display_order="70" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_messages_layout" group_name="threadoptions" title="Messages Layout" description="Specify what message layout you would like to use." property_type="value" value_type="select" depends_on="" value_group="MessageLayout" display_order="10" addon_id="">
      <value_parameters>option1=Vertical
option2=Horizontal
option3=First Post Horizontal</value_parameters>
      <value>"option1"</value>
    </property>
    <property property_name="dt_nav_avatar" group_name="dohthemeheader" title="Remove user avatar from navigation" description="This removes the account tab avatar next to the username." property_type="value" value_type="boolean" depends_on="" value_group="Navisitor" display_order="60" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_nav_icons" group_name="dohthemeheader" title="Remove visitor tab icons" description="This setting allows you to remove the visitor tab icons." property_type="value" value_type="boolean" depends_on="" value_group="Navisitor" display_order="80" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_nav_text" group_name="dohthemeheader" title="Remove visitor tab text" description="This setting allows you to remove the visitor tab text." property_type="value" value_type="boolean" depends_on="" value_group="Navisitor" display_order="70" addon_id="">
      <value>1</value>
    </property>
    <property property_name="dt_navigation_glyphs" group_name="dohthemeglyphs" title="Navigation Icons" description="Adds icons next to the navigation text on the navigation bar." property_type="value" value_type="boolean" depends_on="" value_group="Navigation" display_order="10" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_new_indicator" group_name="dohthemeforum" title="New Indicator Label" description="Displays a new indicator next to the node title if there is new content." property_type="value" value_type="boolean" depends_on="" value_group="Forum" display_order="80" addon_id="">
      <value>1</value>
    </property>
    <property property_name="dt_new_indicator_css" group_name="dohthemeforum" title="New Indicator Label" description="Styles the new node indicator if enabled." property_type="css" value_type="" depends_on="" value_group="" display_order="81" css_components="text,background,border,border_radius,padding,extra" addon_id="">
      <value>{
    "font-size": "11px",
    "color": "@xf-paletteAccent2",
    "background-color": "@xf-paletteAccent1",
    "border-radius": "@xf-borderRadiusMedium",
    "padding-top": "3px",
    "padding-right": "6px",
    "padding-bottom": "3px",
    "padding-left": "6px",
    "extra": "text-transform: uppercase;"
}</value>
    </property>
    <property property_name="dt_node_icon" group_name="dohthemeglyphs" title="Node Icon" description="Name of Fontawesome Icon." property_type="value" value_type="string" depends_on="" value_group="glyphs_nodes" display_order="35" addon_id="">
      <value>"folder"</value>
    </property>
    <property property_name="dt_node_off_icon" group_name="dohthemeglyphs" title="Node Toggle-Off" description="Unicode of the Icon." property_type="value" value_type="string" depends_on="dt_collapsible_categories" value_group="glyphs_nodes" display_order="50" addon_id="">
      <value>"\"\\f077\""</value>
    </property>
    <property property_name="dt_node_on_icon" group_name="dohthemeglyphs" title="Node Toggle-On" description="Unicode of the Icon." property_type="value" value_type="string" depends_on="dt_collapsible_categories" value_group="glyphs_nodes" display_order="40" addon_id="">
      <value>"\"\\f053\""</value>
    </property>
    <property property_name="dt_node_stats" group_name="dohthemeforum" title="Show Node Stats on Hover" description="Hides the node stats, and displays them only when hovering over the node." property_type="value" value_type="boolean" depends_on="" value_group="Forum" display_order="70" addon_id="">
      <value>1</value>
    </property>
    <property property_name="dt_nodestat_simple" group_name="dohthemeforum" title="Simplified Node Statics" description="Only shows the number of threads inside the node." property_type="value" value_type="boolean" depends_on="" value_group="Forum" display_order="60" addon_id="">
      <value>1</value>
    </property>
    <property property_name="dt_offcanvasmenu_linkholder_glyphs" group_name="dohthemeglyphs" title="offCanvasMenu linkHolder Icons" description="Adds icons next to the off-canvas menu header." property_type="value" value_type="boolean" depends_on="" value_group="Navigation" display_order="16" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_offcanvasmenu_links_glyphs" group_name="dohthemeglyphs" title="offCanvasMenu Links Icons" description="Adds icons next to the off-canvas menu links." property_type="value" value_type="boolean" depends_on="" value_group="Navigation" display_order="17" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_offline_indicator" group_name="threadoptions" title="Offline status indicator" description="This is an extension of the status indicator to display Online/Offline depending on the user's status." property_type="value" value_type="boolean" depends_on="" value_group="MessageLayout" display_order="30" addon_id="">
      <value>1</value>
    </property>
    <property property_name="dt_opacity_thread_lock" group_name="dohthemeds" title="Locked Threads Opacity" description="This will gives transparency to locked threads." property_type="value" value_type="boolean" depends_on="" value_group="General" display_order="60" addon_id="">
      <value>1</value>
    </property>
    <property property_name="dt_pa_index" group_name="dohthemebasic" title="Remove page actions from forum index" description="Enabling this setting removes the page actions from the forum list. By default, these are New Posts and Post New Thread." property_type="value" value_type="boolean" depends_on="" value_group="ForumHome" display_order="100" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_page_node_icon" group_name="dohthemeglyphs" title="Page Node Icon" description="Name of Fontawesome Icon." property_type="value" value_type="string" depends_on="" value_group="glyphs_nodes" display_order="36" addon_id="">
      <value>"file-text"</value>
    </property>
    <property property_name="dt_profile_tabs_glyphs" group_name="dohthemeglyphs" title="Member Profiles Tabs Icons" description="Adds icons to tabs in member profile page when enabled." property_type="value" value_type="boolean" depends_on="" value_group="" display_order="90" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_seperate_sticky_threads" group_name="dohthemeds" title="Separate Sticky Threads" description="This will add headings above sticky threads and above normal threads to clearly differentiate the two types of threads." property_type="value" value_type="boolean" depends_on="" value_group="General" display_order="20" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_seperate_sticky_threads_css" group_name="dohthemeds" title="Sticky Threads Separator" description="Styles the sticky threads separator if enabled." property_type="css" value_type="" depends_on="" value_group="" display_order="12" css_components="background,border,border_radius,padding,extra" addon_id="">
      <value>{
    "background-color": "@xf-contentAltBg",
    "border-width": "0",
    "border-top-width": "@xf-borderSize",
    "border-top-color": "@xf-borderColor",
    "extra": "height: 10px;\nmargin: 0;"
}</value>
    </property>
    <property property_name="dt_sidebar_glyphs" group_name="dohthemeglyphs" title="Sidebar Heading Icons" description="Adds icons to the sidebar headings when enabled." property_type="value" value_type="boolean" depends_on="" value_group="" display_order="60" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_sidebar_position" group_name="sidebaroptions" title="Sidebar Position" description="Set whether the sidebar is on the left or the right of the main content." property_type="value" value_type="select" depends_on="" value_group="Sidebar" display_order="20" addon_id="">
      <value_parameters>option1=Right
option2=Left</value_parameters>
      <value>"option1"</value>
    </property>
    <property property_name="dt_sticky_catstrips" group_name="dohthemeforum" title="Sticky Category Strips" description="Enables category strips to stick to the top of the page for the category that is currently in view." property_type="value" value_type="boolean" depends_on="" value_group="Forum" display_order="15" addon_id="">
      <value>1</value>
    </property>
    <property property_name="dt_sticky_sidebar" group_name="sidebaroptions" title="Sticky Sidebar" description="Makes the sidebar component sticky.&#10;&#10;The sticky functionality is being added purely with CSS. This means that it has no performance drawbacks. However, it is not supported in older browsers." property_type="value" value_type="boolean" depends_on="" value_group="Sidebar" display_order="25" addon_id="">
      <value>1</value>
    </property>
    <property property_name="dt_sticky_staff_tools" group_name="dohthemeheader" title="Sticky Staff tools" description="If you intend for staff tools to stick to the top of the page when it is scrolled." property_type="value" value_type="boolean" depends_on="" value_group="Header" display_order="10" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_sub_navigation_glyphs" group_name="dohthemeglyphs" title="Sub-navigation row Icons" description="Adds icons next to the sub-navigation text on the sub-navigation bar." property_type="value" value_type="boolean" depends_on="" value_group="Navigation" display_order="15" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_text_logo" group_name="dohthemeheader" title="Logo Text" description="Set the text value to replace the logo image." property_type="value" value_type="string" depends_on="" value_group="Header" display_order="20" addon_id="">
      <value>""</value>
    </property>
    <property property_name="dt_text_logo_css" group_name="dohthemeheader" title="Logo Text" description="Styles the Logo Text if enabled." property_type="css" value_type="" depends_on="" value_group="" display_order="25" css_components="text,background,border,border_radius,padding,extra" addon_id="">
      <value>{
    "font-size": "@xf-fontSizeLargest"
}</value>
    </property>
    <property property_name="dt_thread_title_center" group_name="threadoptions" title="Center Thread Title" description="This small modification will allow you to center thread message titles." property_type="value" value_type="boolean" depends_on="" value_group="MessageLayout" display_order="20" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_title_index" group_name="dohthemebasic" title="Remove Title from Forum Index" description="Removes the page title from the forum index." property_type="value" value_type="boolean" depends_on="" value_group="ForumHome" display_order="90" addon_id="">
      <value>0</value>
    </property>
    <property property_name="dt_triggers_style" group_name="dohthemeheader" title="Login triggers style" description="The method by which the login form displays once the trigger is activated." property_type="value" value_type="select" depends_on="" value_group="Navisitor" display_order="30" addon_id="">
      <value_parameters>option1=Overlay
option2=Dropdown</value_parameters>
      <value>"option1"</value>
    </property>
    <property property_name="dt_version" group_name="dohthemebasic" title="Re-Me version" description="This is for development only, and should not ever be changed." property_type="value" value_type="string" depends_on="" value_group="version" display_order="500" addon_id="">
      <value>"2.1.1"</value>
    </property>
    <property property_name="dt_visitor_menu_glyphs" group_name="dohthemeglyphs" title="Visitor Menu Icons" description="Adds icons next to the user's visitor menu links." property_type="value" value_type="boolean" depends_on="" value_group="Navigation" display_order="18" addon_id="">
      <value>0</value>
    </property>
    <property property_name="editorSelectedBg" group_name="rte" title="Editor selected text background color" description="Background color for text that has been selected in the editor" property_type="value" value_type="color" depends_on="" value_group="" display_order="500" addon_id="XF">
      <value>"@xf-contentAltBg"</value>
    </property>
    <property property_name="editorToolbarActiveColor" group_name="rte" title="Editor toolbar active color" description="When controls on the editor toolbar are active (such as 'B' when bold text is selected), the control will use this color" property_type="value" value_type="color" depends_on="" value_group="" display_order="300" addon_id="XF">
      <value>"@xf-paletteAccent1"</value>
    </property>
    <property property_name="editorToolbarBorderColor" group_name="rte" title="Editor toolbar border color" description="Like popup menus, the editor has an upper border accent, controlled here" property_type="value" value_type="color" depends_on="" value_group="" display_order="200" addon_id="XF">
      <value>"@xf-paletteColor1"</value>
    </property>
    <property property_name="errorBg" group_name="color" title="Error message background" description="" property_type="value" value_type="color" depends_on="" value_group="errorMessage" display_order="10410" addon_id="XF">
      <value>"#378ae7"</value>
    </property>
    <property property_name="errorColor" group_name="color" title="Error message text color" description="" property_type="value" value_type="color" depends_on="" value_group="errorMessage" display_order="10420" addon_id="XF">
      <value>"@xf-textColor"</value>
    </property>
    <property property_name="errorFeatureColor" group_name="color" title="Error message feature color" description="" property_type="value" value_type="color" depends_on="" value_group="errorMessage" display_order="10430" addon_id="XF">
      <value>"rgb(255, 0, 8)"</value>
    </property>
    <property property_name="fontFamilyBody" group_name="fonts" title="Body Text Font" description="This font is used for the text of messages etc." property_type="value" value_type="string" depends_on="" value_group="font" display_order="200" addon_id="XF">
      <value>"'Muli', 'Helvetica Neue', Helvetica, Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', sans-serif"</value>
    </property>
    <property property_name="fontFamilyUi" group_name="fonts" title="User Interface Font" description="The font list for your main text" property_type="value" value_type="string" depends_on="" value_group="font" display_order="100" addon_id="XF">
      <value>"'Muli', 'Helvetica Neue', Helvetica, Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', sans-serif"</value>
    </property>
    <property property_name="formLabel" group_name="form" title="Form label column" description="In full-width forms, the left column contains labels for the controls in the right column" property_type="css" value_type="" depends_on="" value_group="" display_order="20100" css_components="text,background,border_color_simple,extra" addon_id="XF">
      <value>{
    "background-color": "@xf-contentAltBg",
    "border-color": "@xf-borderColor",
    "extra": "text-align: right;"
}</value>
    </property>
    <property property_name="formSubmitRow" group_name="form" title="Form submit row" description="At the bottom of most forms is a bar containing the submit button etc." property_type="css" value_type="" depends_on="" value_group="" display_order="20400" css_components="background,border,extra" addon_id="XF">
      <value>{
    "background-color": "rgb(66, 70, 73)"
}</value>
    </property>
    <property property_name="globalActionColor" group_name="misc" title="Global action indicator color" description="This is the base color of the gadgets that display when an action is being processed in the background." property_type="value" value_type="color" depends_on="" value_group="" display_order="400" addon_id="XF">
      <value>"@xf-paletteAccent1"</value>
    </property>
    <property property_name="inlineModBar" group_name="inlineMod" title="Inline moderation bar" description="A bar containing controls appears when content is selected for inline moderation. Its appearance is controlled here" property_type="css" value_type="" depends_on="" value_group="" display_order="20000" css_components="text,background,border,padding,extra" addon_id="XF">
      <value>{
    "color": "@xf-textColorEmphasized",
    "background-color": "rgb(66, 70, 73)",
    "padding-top": "@xf-paddingSmall",
    "padding-bottom": "@xf-paddingSmall"
}</value>
    </property>
    <property property_name="inlineModHighlightColor" group_name="color" title="Inline moderation highlight color" description="When content is selected for inline moderation, its background color will be replaced with this" property_type="value" value_type="color" depends_on="" value_group="contentBackground" display_order="2500" addon_id="XF">
      <value>"#378ae7"</value>
    </property>
    <property property_name="input" group_name="input" title="Form input" description="Controls the style of most text-input boxes" property_type="css" value_type="" depends_on="" value_group="" display_order="20000" css_components="text,background,border,border_radius,padding,extra" addon_id="XF">
      <value>{
    "font-size": "@xf-fontSizeNormal",
    "color": "@xf-textColorEmphasized",
    "background-color": "rgba(255, 255, 255, 0.12)",
    "border-width": "@xf-borderSize",
    "border-color": "rgba(255, 255,255, 0)",
    "border-radius": "@xf-borderRadiusLarge",
    "padding": "@xf-paddingMedium"
}</value>
    </property>
    <property property_name="inputDisabled" group_name="input" title="Form input - disabled" description="When text boxes are disabled, these rules are applied" property_type="css" value_type="" depends_on="" value_group="" display_order="20200" css_components="text,background,border,extra" addon_id="XF">
      <value>{
    "color": "@xf-textColorMuted",
    "background-color": "xf-intensify(@xf-paletteNeutral1, 6%)",
    "border-color": "xf-intensify(@xf-paletteNeutral1, 6%)"
}</value>
    </property>
    <property property_name="inputFocus" group_name="input" title="Form input - focused" description="These rules are applied to text boxes when they are selected for input" property_type="css" value_type="" depends_on="" value_group="" display_order="20100" css_components="text,background,extra" addon_id="XF">
      <value>[]</value>
    </property>
    <property property_name="inputFocusBgColor" group_name="color" title="Focused text box background color" description="" property_type="value" value_type="color" depends_on="" value_group="input" display_order="8600" addon_id="XF">
      <value>"#378ae7"</value>
    </property>
    <property property_name="inputTextColor" group_name="color" title="Text input box text color" description="" property_type="value" value_type="color" depends_on="" value_group="input" display_order="8499" addon_id="XF">
      <value>"@xf-textColor"</value>
    </property>
    <property property_name="linkColor" group_name="color" title="Link color" description="Basic hyperlinks on standard background colors will use this style" property_type="value" value_type="color" depends_on="" value_group="links" display_order="1000" addon_id="XF">
      <value>"@xf-textColorEmphasized"</value>
    </property>
    <property property_name="linkHover" group_name="page" title="Links - hovered" description="When basic links are hovered, they use this set of rules for their styling" property_type="css" value_type="" depends_on="" value_group="" display_order="20100" css_components="text,extra" addon_id="XF">
      <value>{
    "color": "@xf-linkHoverColor",
    "text-decoration": "none"
}</value>
    </property>
    <property property_name="linkHoverColor" group_name="color" title="Link hover color" description="Basic hyperlinks will turn this color when hovered" property_type="value" value_type="color" depends_on="" value_group="links" display_order="1100" addon_id="XF">
      <value>"#378ae7"</value>
    </property>
    <property property_name="majorHeadingBg" group_name="color" title="Major heading background color" description="" property_type="value" value_type="color" depends_on="" value_group="heading" display_order="6100" addon_id="XF">
      <value>"#378ae7"</value>
    </property>
    <property property_name="memberHeader" group_name="member" title="Member profile header" description="The member profile page's content header is styled with these settings" property_type="css" value_type="" depends_on="" value_group="" display_order="20000" css_components="text,background,border,extra" addon_id="XF">
      <value>{
    "background-color": "@xf-contentAltBg",
    "border-bottom-width": "@xf-borderSize",
    "border-bottom-color": "@xf-borderColorLight"
}</value>
    </property>
    <property property_name="memberHeaderName" group_name="member" title="Member profile header - name" description="The styling of the name of the member whose page is being viewed is controlled here" property_type="css" value_type="" depends_on="" value_group="" display_order="20100" css_components="text,extra" addon_id="XF">
      <value>{
    "font-size": "@xf-fontSizeLargest",
    "color": "@xf-textColorEmphasized"
}</value>
    </property>
    <property property_name="memberTooltipHeader" group_name="member" title="Member tooltip header" description="The member tooltip, which appears when hovering over user names, is styled with these controls" property_type="css" value_type="" depends_on="" value_group="" display_order="20200" css_components="text,background,border,extra" addon_id="XF">
      <value>{
    "background-color": "@xf-contentAltBg",
    "border-bottom-width": "@xf-borderSize",
    "border-bottom-color": "@xf-borderColorLight"
}</value>
    </property>
    <property property_name="memberTooltipName" group_name="member" title="Member tooltip header - name" description="Styling for the name of the user whose tooltip is being displayed" property_type="css" value_type="" depends_on="" value_group="" display_order="20300" css_components="text,extra" addon_id="XF">
      <value>{
    "font-size": "@xf-fontSizeLargest",
    "color": "@xf-textColorEmphasized"
}</value>
    </property>
    <property property_name="menu" group_name="menu" title="Menu" description="Controls the main block of all popup menus" property_type="css" value_type="" depends_on="" value_group="" display_order="20000" css_components="text,background,border_width_simple,border_color_simple,extra" addon_id="XF">
      <value>{
    "font-size": "@xf-fontSizeSmall",
    "color": "@xf-linkColor",
    "background-color": "@xf-paletteColor2"
}</value>
    </property>
    <property property_name="menuFeatureBorderColor" group_name="menu" title="Menu feature border color" description="Popup menus have a thick feature border on their upper edge, the styling of which is controlled here" property_type="value" value_type="color" depends_on="" value_group="" display_order="100" addon_id="XF">
      <value>"@xf-paletteColor1"</value>
    </property>
    <property property_name="menuFooter" group_name="menu" title="Menu footer" description="When a popup menu has a bottom, footer element, it will use these settings" property_type="css" value_type="" depends_on="" value_group="" display_order="20600" css_components="text,background,border,extra" addon_id="XF">
      <value>{
    "font-size": "@xf-fontSizeSmaller",
    "color": "@xf-textColorEmphasized",
    "background-color": "@xf-paletteColor2",
    "border-top-width": "@xf-borderSize",
    "border-top-color": "@xf-borderColorLight"
}</value>
    </property>
    <property property_name="menuHeader" group_name="menu" title="Menu header" description="Most menus identify themselves with a header just underneath their top border" property_type="css" value_type="" depends_on="" value_group="" display_order="20100" css_components="text,background,border,extra" addon_id="XF">
      <value>{
    "font-size": "@xf-fontSizeLarge",
    "color": "@xf-linkColor",
    "border-bottom-width": "@xf-borderSize",
    "border-bottom-color": "@xf-borderColorLight"
}</value>
    </property>
    <property property_name="menuLinkRow" group_name="menu" title="Menu link row" description="Styling for link rows within popup menus" property_type="css" value_type="" depends_on="" value_group="" display_order="20400" css_components="text,background,extra" addon_id="XF">
      <value>{
    "color": "@xf-linkColor",
    "text-decoration": "none"
}</value>
    </property>
    <property property_name="menuLinkRowSelected" group_name="menu" title="Menu link row - selected" description="Styling for link rows in menus, when selected or hovered" property_type="css" value_type="" depends_on="" value_group="" display_order="20500" css_components="text,background,extra" addon_id="XF">
      <value>{
    "color": "@xf-textColorEmphasized",
    "text-decoration": "none",
    "background-color": "@xf-paletteColor3"
}</value>
    </property>
    <property property_name="menuTabHeader" group_name="menu" title="Menu tab header" description="Multi-part, tabbed menu headers use these settings" property_type="css" value_type="" depends_on="" value_group="" display_order="20200" css_components="text,background,border,extra" addon_id="XF">
      <value>{
    "font-size": "@xf-fontSizeNormal",
    "color": "@xf-paletteColor4",
    "background-color": "@xf-contentHighlightBg",
    "border-bottom-width": "@xf-borderSize",
    "border-bottom-color": "@xf-borderColorLight"
}</value>
    </property>
    <property property_name="messageNewIndicator" group_name="message" title="New message indicator" description="Usually a small token attached to the message block, the indicator that a message is new/unread is controlled here" property_type="css" value_type="" depends_on="" value_group="" display_order="20100" css_components="text,background,border,border_radius,padding,extra" addon_id="XF">
      <value>{
    "font-size": "90%",
    "color": "@xf-contentBg",
    "background-color": "@xf-paletteAccent1",
    "border-radius": "@xf-borderRadiusSmall",
    "padding-top": "1px",
    "padding-right": "4px",
    "padding-bottom": "1px",
    "padding-left": "4px"
}</value>
    </property>
    <property property_name="messageSignature" group_name="message" title="Message signature" description="Any rules used to apply styling to users' signatures in their messages are defined here" property_type="css" value_type="" depends_on="" value_group="" display_order="20200" css_components="text,background,border,padding,extra" addon_id="XF">
      <value>{
    "font-size": "@xf-fontSizeSmaller",
    "color": "@xf-textColorMuted",
    "border-top-width": "@xf-borderSize",
    "border-top-color": "@xf-borderColorLight",
    "padding-top": "3px"
}</value>
    </property>
    <property property_name="messageUserBlock" group_name="message" title="Message user info block" description="Apart from its width, the (left) message user info column is styled here" property_type="css" value_type="" depends_on="" value_group="" display_order="20000" css_components="text,background,border_width_simple,border_color_simple,extra" addon_id="XF">
      <value>{
    "background-color": "@xf-contentAltBg",
    "border-width": "@xf-borderSize",
    "border-color": "@xf-borderColor"
}</value>
    </property>
    <property property_name="messageUserBlockWidth" group_name="message" title="Message user info block width" description="Controls the width of the (left) user info column on the full size message block" property_type="value" value_type="unit" depends_on="" value_group="user" display_order="500" addon_id="XF">
      <value>"180px"</value>
    </property>
    <property property_name="messageUserElements" group_name="message" title="Message user info elements" description="The elements selected here will be displayed in the message user info block. It will not be displayed below the single column width." property_type="value" value_type="template" depends_on="" value_group="user" display_order="600" addon_id="XF">
      <value_parameters>template=style_property_template_messageUserElements
type=array</value_parameters>
      <value>{
    "register_date": "1",
    "message_count": "1",
    "custom_fields": "1"
}</value>
    </property>
    <property property_name="metaThemeColor" group_name="misc" title="Chrome meta theme color" description="Chrome on Android allows the address bar color to be changed to fit your site colors. If you want this to be changed, enter a color here." property_type="value" value_type="color" depends_on="" value_group="" display_order="900" addon_id="XF">
      <value>"@xf-paletteColor1"</value>
    </property>
    <property property_name="minorHeadingTextColor" group_name="color" title="Minor heading text color" description="" property_type="value" value_type="color" depends_on="" value_group="heading" display_order="6400" addon_id="XF">
      <value>"#378ae7"</value>
    </property>
    <property property_name="nodeIconReadColor" group_name="nodeList" title="Read node icon color" description="When the content within a node has been read, its icon will revert to a less attention-grabbing color, defined here" property_type="value" value_type="color" depends_on="" value_group="" display_order="200" addon_id="XF">
      <value>"@xf-textColorMuted"</value>
    </property>
    <property property_name="nodeIconUnreadColor" group_name="nodeList" title="Unread node icon color" description="Node icons give an at-a-glance indication of whether or not the content housed within the node has been read. The unread icon color should stand out from its background for quick identification" property_type="value" value_type="color" depends_on="" value_group="" display_order="100" addon_id="XF">
      <value>"@xf-linkColor"</value>
    </property>
    <property property_name="nodeListDescriptionDisplay" group_name="nodeList" title="Description display style" description="To save vertical space, it is possible to hide node descriptions until the node title is hovered, at which point they are displayed in a tooltip" property_type="value" value_type="radio" depends_on="" value_group="" display_order="400" addon_id="XF">
      <value_parameters>tooltip={{ phrase('tooltip') }}
inline={{ phrase('inline') }}
none={{ phrase('none') }}</value_parameters>
      <value>"none"</value>
    </property>
    <property property_name="nodeListSubDisplay" group_name="nodeList" title="Sub-forums display style" description="Choose the style in which sub-forums will be displayed within a particular node element, according to the amount of space you want them to occupy" property_type="value" value_type="radio" depends_on="" value_group="" display_order="300" addon_id="XF">
      <value_parameters>menu={{ phrase('popup_menu') }}
flat={{ phrase('listed_below_node') }}
none={{ phrase('none') }}</value_parameters>
      <value>"menu"</value>
    </property>
    <property property_name="overlayHeader" group_name="overlay" title="Overlay header" description="Overlays use a header element to identify their contents, styled here" property_type="css" value_type="" depends_on="" value_group="" display_order="20000" css_components="text,background,border,padding,extra" addon_id="XF">
      <value>{
    "font-size": "@xf-fontSizeLargest",
    "color": "@xf-contentBg",
    "font-weight": "@xf-fontWeightHeavy",
    "background-color": "@xf-paletteAccent1",
    "padding": "@xf-paddingLarge",
    "extra": "text-transform: uppercase;"
}</value>
    </property>
    <property property_name="overlayMaskColor" group_name="overlay" title="Overlay mask color" description="When an overlay is shown, the page behind is masked by the color defined here. Use RGBA transparency to allow the page to show through" property_type="value" value_type="color" depends_on="" value_group="" display_order="200" addon_id="XF">
      <value>"rgba(0, 0, 0, .45)"</value>
    </property>
    <property property_name="pageBackground" group_name="page" title="Page background" description="The page background, behind all block elements, uses the styling rules defined here" property_type="css" value_type="" depends_on="" value_group="" display_order="20200" css_components="background,extra" addon_id="XF">
      <value>{
    "background-color": "@xf-pageBg",
    "background-image": "@xf-dt_files_path/img/main.jpg",
    "extra": "background-repeat: no-repeat;\nbackground-size: cover;\nbackground-attachment: fixed;"
}</value>
    </property>
    <property property_name="pageBg" group_name="color" title="Page background color" description="The background of the page itself, on which all other content rests" property_type="value" value_type="color" depends_on="" value_group="contentBackground" display_order="2100" addon_id="XF">
      <value>"xf-intensify(@xf-contentBg, 7%)"</value>
    </property>
    <property property_name="pageWidthMax" group_name="page" title="Maximum page width" description="As the window is resized, it will continue to grow in width until this value, after which it will remain static" property_type="value" value_type="unit" depends_on="" value_group="page" display_order="100" addon_id="XF">
      <value>"1300px"</value>
    </property>
    <property property_name="paletteAccent1" group_name="palette" title="Accent 1" description="" property_type="value" value_type="color" depends_on="" value_group="accent" display_order="2000" addon_id="XF">
      <value_parameters>hidePalette=true</value_parameters>
      <value>"rgb(230, 230, 230)"</value>
    </property>
    <property property_name="paletteAccent2" group_name="palette" title="Accent 2" description="" property_type="value" value_type="color" depends_on="" value_group="accent" display_order="2100" addon_id="XF">
      <value_parameters>hidePalette=true</value_parameters>
      <value>"rgb(75, 78, 80)"</value>
    </property>
    <property property_name="paletteAccent3" group_name="palette" title="Accent 3" description="" property_type="value" value_type="color" depends_on="" value_group="accent" display_order="2200" addon_id="XF">
      <value_parameters>hidePalette=true</value_parameters>
      <value>"#378ae7"</value>
    </property>
    <property property_name="paletteColor1" group_name="palette" title="Color 1" description="" property_type="value" value_type="color" depends_on="" value_group="primary" display_order="1000" addon_id="XF">
      <value_parameters>hidePalette=true</value_parameters>
      <value>"#378ae7"</value>
    </property>
    <property property_name="paletteColor2" group_name="palette" title="Color 2" description="" property_type="value" value_type="color" depends_on="" value_group="primary" display_order="1100" addon_id="XF">
      <value_parameters>hidePalette=true</value_parameters>
      <value>"rgb(75, 78, 80)"</value>
    </property>
    <property property_name="paletteColor3" group_name="palette" title="Color 3" description="" property_type="value" value_type="color" depends_on="" value_group="primary" display_order="1200" addon_id="XF">
      <value_parameters>hidePalette=true</value_parameters>
      <value>"#378ae7"</value>
    </property>
    <property property_name="paletteColor4" group_name="palette" title="Color 4" description="" property_type="value" value_type="color" depends_on="" value_group="primary" display_order="1300" addon_id="XF">
      <value_parameters>hidePalette=true</value_parameters>
      <value>"rgb(45, 45, 50)"</value>
    </property>
    <property property_name="paletteColor5" group_name="palette" title="Color 5" description="" property_type="value" value_type="color" depends_on="" value_group="primary" display_order="1400" addon_id="XF">
      <value_parameters>hidePalette=true</value_parameters>
      <value>"rgb(75, 78, 80)"</value>
    </property>
    <property property_name="paletteNeutral1" group_name="palette" title="Neutral 1" description="" property_type="value" value_type="color" depends_on="" value_group="neutral" display_order="3000" addon_id="XF">
      <value_parameters>hidePalette=true</value_parameters>
      <value>"rgb(52, 55, 60)"</value>
    </property>
    <property property_name="paletteNeutral2" group_name="palette" title="Neutral 2" description="" property_type="value" value_type="color" depends_on="" value_group="neutral" display_order="3100" addon_id="XF">
      <value_parameters>hidePalette=true</value_parameters>
      <value>"rgb(230, 230, 230)"</value>
    </property>
    <property property_name="paletteNeutral3" group_name="palette" title="Neutral 3" description="" property_type="value" value_type="color" depends_on="" value_group="neutral" display_order="3200" addon_id="XF">
      <value_parameters>hidePalette=true</value_parameters>
      <value>"rgb(230, 230, 230)"</value>
    </property>
    <property property_name="progressBarColor" group_name="misc" title="Progress bar color" description="The progress bar appears at the top of the window when the system is waiting for a response from the server" property_type="value" value_type="color" depends_on="" value_group="" display_order="300" addon_id="XF">
      <value>"@xf-paletteAccent1"</value>
    </property>
    <property property_name="publicFooter" group_name="footer" title="Footer" description="The footer is the primary element that sits below the main content on all public pages" property_type="css" value_type="" depends_on="" value_group="" display_order="20000" css_components="text,background,border,extra" addon_id="XF">
      <value>{
    "font-size": "@xf-fontSizeSmall",
    "color": "@xf-textColor",
    "background-color": "@xf-contentBg",
    "extra": "border-bottom-left-radius: 10px;\nborder-bottom-right-radius: 10px;\nmargin-bottom: 65px;"
}</value>
    </property>
    <property property_name="publicFooterLink" group_name="footer" title="Footer links" description="Controls styling for individual links within the footer" property_type="css" value_type="" depends_on="" value_group="" display_order="20100" css_components="text,extra" addon_id="XF">
      <value>{
    "color": "@xf-linkColor"
}</value>
    </property>
    <property property_name="publicHeader" group_name="headerNav" title="Header/logo row" description="The header row contains your logo and sits at the top of every public page" property_type="css" value_type="" depends_on="" value_group="" display_order="20000" css_components="text,background,extra" addon_id="XF">
      <value>{
    "color": "@xf-chromeTextColor",
    "background-color": "#2a2e31",
    "extra": "margin-bottom: 65px;"
}</value>
    </property>
    <property property_name="publicLogoUrl" group_name="basic" title="Logo URL" description="The web path from your site's XenForo installation directory to your logo image." property_type="value" value_type="string" depends_on="" value_group="logo" display_order="100" addon_id="XF">
      <value>"@xf-dt_files_path/xenforo/xenforo-logo.png"</value>
    </property>
    <property property_name="publicNav" group_name="headerNav" title="Navigation row" description="The navigation row sits below the header and contains the primary site navigation tabs and menus" property_type="css" value_type="" depends_on="" value_group="" display_order="20100" css_components="text,background,extra" addon_id="XF">
      <value>{
    "color": "@xf-textColorEmphasized",
    "background-color": "rgba(31, 35, 38, 0.85)",
    "extra": "border-top-left-radius: 10px;\nborder-top-right-radius: 10px;"
}</value>
    </property>
    <property property_name="publicNavPaddingH" group_name="headerNav" title="Navigation padding horizontal" description="Defines the amount of padding applied horizontally to each main navigational tab in the header" property_type="value" value_type="unit" depends_on="" value_group="navPad" display_order="4100" addon_id="XF">
      <value>"18px"</value>
    </property>
    <property property_name="publicNavPaddingV" group_name="headerNav" title="Navigation padding vertical" description="This value defines the amount of padding applied to the main navigational tabs in the header" property_type="value" value_type="unit" depends_on="" value_group="navPad" display_order="4000" addon_id="XF">
      <value>"16px"</value>
    </property>
    <property property_name="publicNavSelected" group_name="headerNav" title="Navigation row - selected tab" description="Additional styling to apply to navigation tabs when they are selected" property_type="css" value_type="" depends_on="" value_group="" display_order="20300" css_components="text,background,border,border_radius,extra" addon_id="XF">
      <value>{
    "color": "@xf-paletteAccent1"
}</value>
    </property>
    <property property_name="publicNavSticky" group_name="headerNav" title="Sticky navigation element" description="If you intend for some or all of your header to stick to the top of the page when it is scrolled, choose which elements should stick" property_type="value" value_type="radio" depends_on="" value_group="navigation" display_order="1200" addon_id="XF">
      <value_parameters>primary={{ phrase('primary_navigation_row_only') }}
all={{ phrase('primary_and_sub_navigation_rows') }}
none={{ phrase('none') }}</value_parameters>
      <value>"primary"</value>
    </property>
    <property property_name="publicNavTab" group_name="headerNav" title="Navigation row - tab" description="Controls the styling of individual tab elements within the navigation row" property_type="css" value_type="" depends_on="" value_group="" display_order="20200" css_components="text,background,extra" addon_id="XF">
      <value>{
    "color": "@xf-linkColor",
    "text-decoration": "none",
    "extra": "text-transform: uppercase;"
}</value>
    </property>
    <property property_name="publicNavTabHover" group_name="headerNav" title="Navigation row - hovered tab" description="Additional styling to apply to navigation tabs when the pointer hovers over them" property_type="css" value_type="" depends_on="" value_group="" display_order="20400" css_components="text,background,extra" addon_id="XF">
      <value>{
    "color": "@xf-linkHoverColor",
    "text-decoration": "none"
}</value>
    </property>
    <property property_name="publicNavTabMenuOpen" group_name="headerNav" title="Navigation row - menu open" description="Styling applied when the popup menu for the current tab is visible" property_type="css" value_type="" depends_on="" value_group="" display_order="20450" css_components="text,background,extra" addon_id="XF">
      <value>{
    "color": "@xf-paletteAccent1",
    "text-decoration": "none"
}</value>
    </property>
    <property property_name="publicStaffBar" group_name="headerNav" title="Staff tools bar" description="Visible only to staff, the staff tools bar sits above the header and contains items such as reported content, the moderation queue..." property_type="css" value_type="" depends_on="" value_group="" display_order="20700" css_components="text,background,border,extra" addon_id="XF">
      <value>{
    "font-size": "@xf-fontSizeSmall",
    "color": "@xf-textColorMuted",
    "background-color": "rgb(30, 35, 38)"
}</value>
    </property>
    <property property_name="publicSubNav" group_name="headerNav" title="Sub-navigation row" description="Below the main navigation row, this row shows content associated with the selected main navigation tab" property_type="css" value_type="" depends_on="" value_group="" display_order="20500" css_components="text,background,border,extra" addon_id="XF">
      <value>{
    "font-size": "@xf-fontSizeSmall",
    "color": "@xf-textColor",
    "background-color": "@xf-paletteColor4"
}</value>
    </property>
    <property property_name="publicSubNavElMenuOpen" group_name="headerNav" title="Sub-navigation row - menu-open element" description="Styles sub-navigation elements whose popup menu is currently open" property_type="css" value_type="" depends_on="" value_group="" display_order="20650" css_components="text,background,extra" addon_id="XF">
      <value>{
    "color": "@xf-paletteColor1",
    "text-decoration": "none"
}</value>
    </property>
    <property property_name="publicSubNavPaddingV" group_name="headerNav" title="Sub-navigation padding vertical" description="Defines the amount of vertical padding applied to each item in the sub-navigation bar in the header" property_type="value" value_type="unit" depends_on="" value_group="subNavPad" display_order="5000" addon_id="XF">
      <value>"8px"</value>
    </property>
    <property property_name="reactionSummaryOnLists" group_name="misc" title="Show reaction summary on lists" description="If enabled, the top three reactions received will be displayed on the list pages (such as thread lists)." property_type="value" value_type="radio" depends_on="" value_group="" display_order="50" addon_id="XF">
      <value_parameters>={{ phrase('disabled') }}
status={{ phrase('with_status_icons') }}
minor_opposite={{ phrase('second_row_opposite_side') }}</value_parameters>
      <value>""</value>
    </property>
    <property property_name="sidebarSpacer" group_name="page" title="Sidebar and side navigation spacer" description="Distance between the main content and the sidebar" property_type="value" value_type="unit" depends_on="" value_group="sidebar" display_order="1000" addon_id="XF">
      <value>"20px"</value>
    </property>
    <property property_name="sidebarWidth" group_name="page" title="Sidebar and side navigation width" description="Width of any elements that make up the sidebar" property_type="value" value_type="unit" depends_on="" value_group="sidebar" display_order="1100" addon_id="XF">
      <value>"300px"</value>
    </property>
    <property property_name="standaloneTab" group_name="tab" title="Standalone tabs" description="Tabs that are not part of block headers are styled here" property_type="css" value_type="" depends_on="" value_group="" display_order="20000" css_components="text,background,extra" addon_id="XF">
      <value>{
    "font-size": "@xf-fontSizeNormal",
    "color": "@xf-textColor",
    "background-color": "@xf-contentBg"
}</value>
    </property>
    <property property_name="standaloneTabSelected" group_name="tab" title="Standalone tabs - selected tab" description="The selected tab in groups that are not part of block headers" property_type="css" value_type="" depends_on="" value_group="" display_order="20100" css_components="text,background,border_color_simple,extra" addon_id="XF">
      <value>{
    "color": "@xf-textColorFeature",
    "border-color": "@xf-textColorFeature"
}</value>
    </property>
    <property property_name="starEmptyColor" group_name="misc" title="Empty rating star color" description="This is the color of the empty portion of each rating star." property_type="value" value_type="color" depends_on="" value_group="" display_order="700" addon_id="XF">
      <value>"@xf-borderColorHeavy"</value>
    </property>
    <property property_name="styleType" group_name="palette" title="Style type" description="This defines the general type of style in use based on whether the content is placed on a light or dark background. This may change how colors are selected in certain scenarios." property_type="value" value_type="radio" depends_on="" value_group="setup" display_order="100" addon_id="XF">
      <value_parameters>light={{ phrase('light') }}
dark={{ phrase('dark') }}</value_parameters>
      <value>"dark"</value>
    </property>
    <property property_name="subNavBg" group_name="color" title="Page sub-navigation background" description="" property_type="value" value_type="color" depends_on="" value_group="chrome" display_order="6080" addon_id="XF">
      <value>"@xf-contentAltBg"</value>
    </property>
    <property property_name="subNavTextColor" group_name="color" title="Page sub-navigation text color" description="" property_type="value" value_type="color" depends_on="" value_group="chrome" display_order="6090" addon_id="XF">
      <value>"@xf-linkColor"</value>
    </property>
    <property property_name="textColor" group_name="color" title="Text color" description="Unless otherwise specified, text will be this color" property_type="value" value_type="color" depends_on="" value_group="textBasic" display_order="100" addon_id="XF">
      <value>"rgb(255, 252, 252)"</value>
    </property>
    <property property_name="textColorAccentContent" group_name="color" title="Accented content text color" description="" property_type="value" value_type="color" depends_on="" value_group="textOther" display_order="3200" addon_id="XF">
      <value>"@xf-textColor"</value>
    </property>
    <property property_name="textColorAttention" group_name="color" title="Attention-grabbing text color" description="" property_type="value" value_type="color" depends_on="" value_group="textOther" display_order="3300" addon_id="XF">
      <value>"@xf-paletteAccent2"</value>
    </property>
    <property property_name="textColorDimmed" group_name="color" title="Dimmed text color" description="Used when less-important text is placed next to normal text" property_type="value" value_type="color" depends_on="" value_group="textBasic" display_order="200" addon_id="XF">
      <value>"mix(@xf-textColor, @xf-textColorMuted)"</value>
    </property>
    <property property_name="textColorEmphasized" group_name="color" title="Emphasized text color" description="" property_type="value" value_type="color" depends_on="" value_group="textOther" display_order="3100" addon_id="XF">
      <value>"rgb(255, 255, 255)"</value>
    </property>
    <property property_name="textColorFeature" group_name="color" title="Feature text color" description="" property_type="value" value_type="color" depends_on="" value_group="textOther" display_order="3000" addon_id="XF">
      <value>"#378ae7"</value>
    </property>
    <property property_name="textColorMuted" group_name="color" title="Muted text color" description="Text is further de-emphasised using this style" property_type="value" value_type="color" depends_on="" value_group="textBasic" display_order="300" addon_id="XF">
      <value>"@xf-paletteNeutral2"</value>
    </property>
    <property property_name="tooltip" group_name="tooltip" title="Tooltip" description="Certain elements have special floating tooltips, which are controlled here" property_type="css" value_type="" depends_on="" value_group="" display_order="20000" css_components="text,background,border_radius,padding,extra" addon_id="XF">
      <value>{
    "font-size": "@xf-fontSizeSmaller",
    "color": "@xf-contentBg",
    "background-color": "fade(@xf-paletteAccent1, 90%)",
    "border-radius": "@xf-borderRadiusMedium",
    "padding": "@xf-paddingMedium"
}</value>
    </property>
  </properties>
</style>
